(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    204345,       5283]
NotebookOptionsPosition[    191735,       4859]
NotebookOutlinePosition[    192144,       4877]
CellTagsIndexPosition[    192101,       4874]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Dpp gradient modeling in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " "
}], "Title",
 CellChangeTimes->{{3.6711369406071367`*^9, 3.671136956828021*^9}}],

Cell["Clear the workspace:", "Text",
 CellChangeTimes->{{3.631375309459083*^9, 3.631375317387721*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.617895685798209*^9, 3.617895686613236*^9}, {
  3.625172198425837*^9, 3.625172198553021*^9}, {3.625322334489223*^9, 
  3.625322335137168*^9}}],

Cell[CellGroupData[{

Cell["Diffusion with no consumption (\[OpenCurlyDoubleQuote]source-sink\
\[CloseCurlyDoubleQuote] model)", "Section",
 CellChangeTimes->{{3.631544224977751*^9, 3.631544234481371*^9}, {
  3.660833402420664*^9, 3.660833414849551*^9}}],

Cell[TextData[{
 "Solving the diffusion equation, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[PartialD]", "t"], "m"}], TraditionalForm]]],
 " == \[Delta] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[PartialD]", 
     RowBox[{"x", ",", "x"}]], "m"}], TraditionalForm]]],
 ", for steady-state by setting ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[PartialD]", "t"], "m"}], TraditionalForm]]],
 " = 0, we turn the problem into an ODE, which is easily solved by the DSolve \
command."
}], "Text",
 CellChangeTimes->{{3.631374447874449*^9, 3.631374486591316*^9}, {
  3.631374560074151*^9, 3.631374565224568*^9}, {3.631374601985681*^9, 
  3.631374607856739*^9}, {3.63137464136211*^9, 3.631374935527278*^9}, {
  3.631374967997259*^9, 3.6313752473230963`*^9}, {3.6313770687857313`*^9, 
  3.631377080437698*^9}, {3.631543686133129*^9, 3.6315436907568693`*^9}, {
  3.660825591293782*^9, 3.6608256589761467`*^9}, {3.660825696825952*^9, 
  3.6608256974955597`*^9}}],

Cell["The steady-state equation, with diffusion coefficient \[Delta]:", "Text",
 CellChangeTimes->{{3.6313752859336576`*^9, 3.63137529549301*^9}, {
  3.6313753326125*^9, 3.63137535326553*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn", "=", 
  RowBox[{"{", 
   RowBox[{"0", "\[Equal]", " ", 
    RowBox[{"\[Delta]", "  ", 
     RowBox[{
      RowBox[{"m", "''"}], "[", "x", "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6313752980409937`*^9, 3.631375298997869*^9}, {
  3.631375357153813*^9, 3.63137538158007*^9}, {3.631375447210188*^9, 
  3.631375448777677*^9}, {3.6313775165836153`*^9, 3.631377518745846*^9}, {
  3.631543635025635*^9, 3.6315436363942747`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", "\[Equal]", 
   RowBox[{"\[Delta]", " ", 
    RowBox[{
     SuperscriptBox["m", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6313753738815527`*^9, 3.631375382242744*^9}, 
   3.631375449230916*^9, 3.631377519859757*^9, 3.6315445291367083`*^9, 
   3.660825735338107*^9, 3.662212486066249*^9, 3.662212529760848*^9, 
   3.679586731377541*^9}]
}, Open  ]],

Cell[TextData[{
 "Specify the boundary conditions. We will specify a constant flux (",
 StyleBox["j",
  FontSlant->"Italic"],
 ") at the left boundary and a sink at the right boundary:"
}], "Text",
 CellChangeTimes->{{3.631375397934478*^9, 3.6313754407931347`*^9}, {
  3.660825853929948*^9, 3.660825964196414*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bc", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"m", "'"}], "[", "0", "]"}], "\[Equal]", 
     RowBox[{"-", "j"}]}], ",", " ", 
    RowBox[{
     RowBox[{"m", "[", "L", "]"}], "\[Equal]", "0"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6313754431859407`*^9, 3.6313754697363873`*^9}, {
   3.631543639105462*^9, 3.631543643873169*^9}, {3.660825732678797*^9, 
   3.660825741148225*^9}, 3.660825771832898*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["m", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], "\[Equal]", 
    RowBox[{"-", "j"}]}], ",", 
   RowBox[{
    RowBox[{"m", "[", "L", "]"}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6313754701983633`*^9, 3.631377526839148*^9, 3.631544530978813*^9, {
   3.660825737219639*^9, 3.660825741813921*^9}, 3.6608257726118097`*^9, 
   3.662212486229907*^9, 3.6622125297930603`*^9, 3.679586731418784*^9}]
}, Open  ]],

Cell["\<\
Combine the differential equation with the boundary conditions:\
\>", "Text",
 CellChangeTimes->{{3.6313754780060062`*^9, 3.631375503551222*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fullsystem", " ", "=", " ", 
  RowBox[{"Join", "[", 
   RowBox[{"eqn", ",", "bc"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.631375505217927*^9, 3.631375516225238*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0", "\[Equal]", 
    RowBox[{"\[Delta]", " ", 
     RowBox[{
      SuperscriptBox["m", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["m", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], "\[Equal]", 
    RowBox[{"-", "j"}]}], ",", 
   RowBox[{
    RowBox[{"m", "[", "L", "]"}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.631375516919549*^9, 3.6313775286611137`*^9, 
  3.631544533174651*^9, 3.660825745093666*^9, 3.660825775963215*^9, 
  3.6622124862617807`*^9, 3.6622125298254433`*^9, 3.679586731465423*^9}]
}, Open  ]],

Cell["Compute the steady-state solution:", "Text",
 CellChangeTimes->{{3.6313755311325893`*^9, 3.63137556322948*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"DSolve", "[", 
     RowBox[{"fullsystem", ",", 
      RowBox[{"m", "[", "x", "]"}], ",", 
      RowBox[{"{", "x", "}"}]}], "]"}], "//", "Flatten"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.631375579711624*^9, 3.631375615483718*^9}, 
   3.631543649681141*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "\[Rule]", 
   RowBox[{"j", " ", 
    RowBox[{"(", 
     RowBox[{"L", "-", "x"}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.631375601407476*^9, 3.631375616288096*^9}, 
   3.63137572872771*^9, 3.631377530879429*^9, 3.631544536941771*^9, {
   3.66082575004884*^9, 3.6608257776749697`*^9}, 3.6622124912485943`*^9, 
   3.6622125298479033`*^9, 3.679586732922945*^9}]
}, Open  ]],

Cell["\<\
Note that the steady-state solution is just a line (as shown in the plot \
below), and doesn\[CloseCurlyQuote]t depend on the diffusion coefficient \
\[Delta]. \[Delta] only affects the time to reach steady-state (which we are \
not computing here).\
\>", "Text",
 CellChangeTimes->{{3.6313756287220583`*^9, 3.631375720139245*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"m", "[", "x", "]"}], "/.", "sol"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"j", "\[Rule]", "1"}], ",", 
      RowBox[{"L", "\[Rule]", "1"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6313757335592127`*^9, 3.6313757695572367`*^9}, {
  3.631543653248938*^9, 3.6315436562407713`*^9}, {3.6608257628169937`*^9, 
  3.660825814495273*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJw11HtU0mccx3Gss2ZWzmliOFfpWMs6ThPxaK4+rlx3S7x0tXKZLtOKndS0
GrMMy7xkXtOsk6FmZUjLiJolKSfNWSqCMiNAA0RBf12kC6d0v/7YH895zus8
3++fz9t114HQmEkUCiWYPJ/vNTGGLvFQxNKSOdPMExMEBvkbd6lpPlhw20Fy
9BMB6jR57i1aEO6vcSn4YCHwo//Mqgu0cLxI8lj0xkxgcSdDkE/bDa/2Dfv0
RgLi883MHFoiWlMKde29BNKPZaWcpp2ApevbntI6ArsTCVomrRDbT3jdYewk
YF24uuLlq0qIY41mjWAUdzq9V66cXQezNDvrG9tRbE5X9jVn1aPoQOWJk/tH
cODmQY9zY3chzWRZEh6a8Dqvp9XKqhEDHrpH6jkmtD581NjxUxNyN9jatbON
iEtdPWOLSYLqihsNQ5JhPJzqPVG7rwV5fzDEhfRhVPMk487ft4Hauz7wbvIQ
Aqn3L4fx28G+F+IULzPAo0UperSgA8ynraz1TANkgWGjV0c7Ubyzx/r6qUEk
2MRL5V5StB1uoxYN6vGPYtN929xulDmEV7z30yNsxeZ+rVaGHmXYmZwcHXwv
ZW26RO+BznOxrG5EC814gWzPn73IowiL1gZqoVvdwaM2K2C7bRY/8eILCErV
qV2ufZjPsFvuRAyg6tTkTPfDz8AP4AQYlw3AHL11OPZvJaY8lZ5ed7kf04Iy
Qm86qWB53rDxhzENjtrppvdHqtF0KCf1DEuD6Q8WUnqDNTCk10ywdquxJHnD
p2aLBhkOv36RYqNCeWU277vyfrQK9SJRixI7InyeTF07gKCIkhhT3DPclscU
PHg7gOJwn3+P2/fBv10wSV/8Arm/XbQwpArM/SXWXBCkhTiJ4ahI7gXTh3m2
Xq9FcUnR82LvHqhf5zzmcXVY5qxNEI3JYGKwuDRvPeaf225uP9+NeUaPYatu
PerdKxd+3CKFhJ4kZR8bRIrQcdvsT504I5NHh9INkNyoYQv3d4AIE5+dJDEg
SDAuMhPt+CvCcbn/70Pwu3rtjXNAG3hP0i8M2A8j8fHLzKT6FrxriTxi3zQM
uibbXvhOAs3ZRrPdfiPSRFbuDSub8LYrgHbc1oQQtqsvkdUIdqGbOLXBhLRI
4/gil3tweuJmp90xglUlQxy19W2EyWs/uoyPYE9EqfOsrwR4vbMiQXltFBrK
MNM/tAqNUXVc23UE5hoc1nhyinGvI2Gtaj35T6xj833pxRAuXfA1n0Ug0F3U
t6StCLUuVeXBmwik7Y2MX0ctQpmi7Fb2LnLeVJkdxy9AUkhGv00qgahXzA6e
Kg8LA7cv+bKa3DfX1XhxMjCvznlybw257xvujzYu3GYrWquvkz70/nEwlYtZ
H0PDV9wkQLEEGvfy0zFFtCqe20C+j3d5VKnS0O/pUzq5m/RXhhgGJxnKi692
dMvJ+XyvkyHUJChm1NF5CtIzU2v28Q/iqdFdsExFmmZjvKJio+HKnJZjQ6SD
Nmv8OLEQUZ9ns0ykVw25HeRH4xa3LNSVIB18OOaGKgrXoh1V4jHStX7y5ZyN
qJJKeXnvSAu3bhWpQnDp57y4KLI7lLQPD7ZwVqBcEOzpRXaJMvdIPpfji/+7
RaZM+rlj/wE7C3or
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0., 0.9999999795918367}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.631375770956176*^9, 3.6313775330098877`*^9, 3.631544540281991*^9, {
   3.660825764909739*^9, 3.66082581519779*^9}, 3.6622124927194653`*^9, 
   3.662212529881225*^9, 3.679586733859013*^9}]
}, Open  ]],

Cell["\<\
Note that the amplitude of the gradient (x == 0) is j*L ; i.e., it is both \
proportional to j and L.\
\>", "Text",
 CellChangeTimes->{{3.6313756287220583`*^9, 3.631375720139245*^9}, {
  3.660825987908867*^9, 3.6608260224466457`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Diffusion with uniform consumption", "Section",
 CellChangeTimes->{{3.6315442495928373`*^9, 3.631544255312913*^9}}],

Cell["\<\
Now, let\[CloseCurlyQuote]s calculate the steady-state solution for a \
morphogen-gradient subjected to uniform consumption (with rate constant \
\[Alpha]) throughout the field:\
\>", "Text",
 CellChangeTimes->{{3.6313757910101357`*^9, 3.631375846432241*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn", "=", 
  RowBox[{"{", 
   RowBox[{"0", "\[Equal]", " ", 
    RowBox[{
     RowBox[{"\[Delta]", " ", 
      RowBox[{
       RowBox[{"m", "''"}], "[", "x", "]"}]}], "-", 
     RowBox[{"\[Alpha]", " ", 
      RowBox[{"m", "[", "x", "]"}]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.631375859443612*^9, 3.6313758646038713`*^9}, {
  3.6313775373442783`*^9, 3.631377538696327*^9}, {3.63154366449679*^9, 
  3.6315436667524242`*^9}, {3.631575034787521*^9, 3.631575036769257*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[Alpha]"}], " ", 
     RowBox[{"m", "[", "x", "]"}]}], "+", 
    RowBox[{"\[Delta]", " ", 
     RowBox[{
      SuperscriptBox["m", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6313759485270567`*^9, {3.631376097493388*^9, 3.6313761244830437`*^9}, 
   3.631377539776578*^9, 3.631544543120831*^9, 3.631575040521841*^9, 
   3.6608261610213003`*^9, 3.660826578215764*^9, 3.662212492967537*^9, 
   3.6622125299069843`*^9, 3.6625696183959503`*^9, 3.6625698287351103`*^9, 
   3.679586733942583*^9}]
}, Open  ]],

Cell["\<\
Specify the boundary conditions. Later, we will set L -> \[Infinity] so that \
the boundary condition at x == L doesn\[CloseCurlyQuote]t matter (in order to \
avoid boundary effects):\
\>", "Text",
 CellChangeTimes->{{3.66082680691647*^9, 3.660826898541321*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bc", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"m", "'"}], "[", "0", "]"}], "\[Equal]", 
     RowBox[{"-", "j"}]}], ",", 
    RowBox[{
     RowBox[{"m", "[", "L", "]"}], "\[Equal]", "0"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.631375954474018*^9, 3.631375975979587*^9}, 
   3.631376068354126*^9, {3.631376156326*^9, 3.631376169980763*^9}, 
   3.6313762331799192`*^9, {3.631376385979656*^9, 3.631376398962755*^9}, {
   3.631543669178768*^9, 3.631543674016183*^9}, {3.660826154061886*^9, 
   3.660826156979018*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["m", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], "\[Equal]", 
    RowBox[{"-", "j"}]}], ",", 
   RowBox[{
    RowBox[{"m", "[", "L", "]"}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6313759815780077`*^9, 3.631376068999178*^9, 3.6313761281490917`*^9, {
   3.631376159346883*^9, 3.631376170419916*^9}, 3.631376233966357*^9, 
   3.6313763997988577`*^9, 3.631377541480206*^9, 3.631544544954792*^9, 
   3.660826162802483*^9, 3.660826579597856*^9, 3.662212492985504*^9, 
   3.662212529925005*^9, 3.662569620395137*^9, 3.662569831245572*^9, 
   3.679586734151079*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fullsystem", "=", 
  RowBox[{"Join", "[", 
   RowBox[{"eqn", ",", "bc"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.631375982543232*^9, 3.631376011621009*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0", "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Alpha]"}], " ", 
      RowBox[{"m", "[", "x", "]"}]}], "+", 
     RowBox[{"\[Delta]", " ", 
      RowBox[{
       SuperscriptBox["m", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["m", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], "\[Equal]", 
    RowBox[{"-", "j"}]}], ",", 
   RowBox[{
    RowBox[{"m", "[", "L", "]"}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.63137601214686*^9, 3.631376131417117*^9, {3.631376164038179*^9, 
   3.631376172414549*^9}, 3.631376236322023*^9, 3.6313764025454283`*^9, 
   3.631377543515483*^9, 3.631544547196583*^9, 3.660826164881337*^9, 
   3.660826581332366*^9, 3.662212493013331*^9, 3.662212529956415*^9, 
   3.662569622632423*^9, 3.662569832813924*^9, 3.6795867341880836`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"DSolve", "[", 
     RowBox[{"fullsystem", ",", 
      RowBox[{"m", "[", "x", "]"}], ",", 
      RowBox[{"{", "x", "}"}]}], "]"}], "//", "Flatten"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.6313760187237883`*^9, 3.631376058958087*^9}, {
   3.631376179536696*^9, 3.631376195750984*^9}, 3.631543708988596*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{"j", " ", 
     SqrtBox["\[Delta]"], " ", 
     RowBox[{"Sech", "[", 
      FractionBox[
       RowBox[{"L", " ", 
        SqrtBox["\[Alpha]"]}], 
       SqrtBox["\[Delta]"]], "]"}], " ", 
     RowBox[{"Sinh", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"L", "-", "x"}], ")"}], " ", 
        SqrtBox["\[Alpha]"]}], 
       SqrtBox["\[Delta]"]], "]"}]}], 
    SqrtBox["\[Alpha]"]]}], "}"}]], "Output",
 CellChangeTimes->{{3.631376060176962*^9, 3.631376099942719*^9}, 
   3.631376134733376*^9, {3.631376166820425*^9, 3.63137619697363*^9}, 
   3.6313762383847857`*^9, 3.6313764043903522`*^9, 3.6313766961698523`*^9, 
   3.631376962559513*^9, 3.631377545617317*^9, 3.631544550741647*^9, 
   3.6608261677621937`*^9, 3.660826480903804*^9, 3.660826584096953*^9, 
   3.662212493720837*^9, 3.662212530277076*^9, 3.6625696264240503`*^9, 
   3.6625698346920023`*^9, 3.679586734561408*^9}]
}, Open  ]],

Cell[TextData[{
 "Define \[Lambda] = ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{"\[Delta]", "/", "\[Alpha]"}]], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.631376452327429*^9, 3.631376494018639*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m", "[", "x", "]"}], "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"m", "[", "x", "]"}], "/.", "sol"}], "/.", 
       RowBox[{"\[Delta]", "\[Rule]", 
        RowBox[{
         RowBox[{"\[Lambda]", "^", "2"}], " ", "\[Alpha]"}]}]}], ")"}]}], 
    "}"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.6313765108564*^9, 3.6313765735859957`*^9}, {
  3.63137694362741*^9, 3.631376947287394*^9}, {3.631543713180499*^9, 
  3.631543715660001*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "\[Rule]", 
   RowBox[{"j", " ", "\[Lambda]", " ", 
    RowBox[{"Sech", "[", 
     FractionBox["L", "\[Lambda]"], "]"}], " ", 
    RowBox[{"Sinh", "[", 
     FractionBox[
      RowBox[{"L", "-", "x"}], "\[Lambda]"], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.631376559866535*^9, 3.6313765742006063`*^9}, 
   3.631376719212184*^9, 3.631376965511096*^9, 3.631377547969173*^9, 
   3.631544556511589*^9, 3.631544663731256*^9, 3.660826175387888*^9, 
   3.660826482980035*^9, 3.66082659188424*^9, 3.660826914160434*^9, 
   3.662212494017784*^9, 3.6622125304118443`*^9, 3.662569837478849*^9, 
   3.6795867347036257`*^9}]
}, Open  ]],

Cell["Specify that \[Lambda] and L are always positive:", "Text",
 CellChangeTimes->{{3.631376757261339*^9, 3.63137686297575*^9}, {
   3.63154459174504*^9, 3.631544613312821*^9}, {3.63154491028301*^9, 
   3.6315449115856123`*^9}, {3.660826997098174*^9, 3.660827026248126*^9}, 
   3.662570236705182*^9, {3.662570279292149*^9, 3.662570288955711*^9}, {
   3.662570320982319*^9, 3.66257033922054*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"parameterConstraints", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Lambda]", ">", "0"}], ",", 
    RowBox[{"L", ">", "0"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6625690179302177`*^9, 3.662569024507802*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Lambda]", ">", "0"}], ",", 
   RowBox[{"L", ">", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.662569025818767*^9, 3.662569841334429*^9, 
  3.679586734737499*^9}]
}, Open  ]],

Cell["Calculate the amplitude m(x==0):", "Text",
 CellChangeTimes->{{3.631376757261339*^9, 3.63137686297575*^9}, {
   3.63154459174504*^9, 3.631544613312821*^9}, {3.63154491028301*^9, 
   3.6315449115856123`*^9}, {3.660826997098174*^9, 3.660827026248126*^9}, 
   3.662570236705182*^9, {3.662570279292149*^9, 3.662570288955711*^9}, {
   3.662570320982319*^9, 3.662570366611608*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"amplitude", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"A", "\[Rule]", " ", 
     RowBox[{"Limit", "[", 
      RowBox[{
       RowBox[{"j", " ", "\[Lambda]", " ", 
        RowBox[{"Sech", "[", 
         FractionBox["L", "\[Lambda]"], "]"}], " ", 
        RowBox[{"Sinh", "[", 
         FractionBox[
          RowBox[{"L", "-", "x"}], "\[Lambda]"], "]"}]}], ",", 
       RowBox[{"x", "\[Rule]", "0"}], ",", 
       RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], "]"}]}], 
    "}"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.662568947837776*^9, 3.662568955372011*^9}, {
  3.662569030580523*^9, 3.6625690359694033`*^9}, {3.662569585556572*^9, 
  3.6625696032121*^9}, {3.662569919540367*^9, 3.66256993894755*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"A", "\[Rule]", 
   RowBox[{"j", " ", "\[Lambda]", " ", 
    RowBox[{"Tanh", "[", 
     FractionBox["L", "\[Lambda]"], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6625689566131477`*^9, 3.662569036843169*^9, 
  3.662569603650329*^9, 3.6625698473186703`*^9, 3.662569941794528*^9, 
  3.679586734848665*^9}]
}, Open  ]],

Cell["\<\
To determine how the amplitude changes as L is increased, take the derivative \
of the amplitude with respect to L:\
\>", "Text",
 CellChangeTimes->{{3.631376757261339*^9, 3.63137686297575*^9}, {
   3.63154459174504*^9, 3.631544613312821*^9}, {3.63154491028301*^9, 
   3.6315449115856123`*^9}, {3.660826997098174*^9, 3.660827026248126*^9}, 
   3.662570236705182*^9, {3.662570279292149*^9, 3.662570288955711*^9}, {
   3.662570320982319*^9, 3.66257033922054*^9}, {3.6625703831091013`*^9, 
   3.662570416450602*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dAdL", " ", "=", " ", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"A", "/.", "amplitude"}], ",", "L"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.662569963645925*^9, 3.662569975772293*^9}, {
  3.662570516812098*^9, 3.66257051928203*^9}}],

Cell[BoxData[
 RowBox[{"j", " ", 
  SuperscriptBox[
   RowBox[{"Sech", "[", 
    FractionBox["L", "\[Lambda]"], "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.66256997634923*^9, 3.662570520725832*^9, 
  3.679586734866871*^9}]
}, Open  ]],

Cell[TextData[{
 "Note that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[PartialD]", "L"], "A"}], TraditionalForm]]],
 "is always positive, since j>0 by definition, and the second term is \
squared. Thus, the amplitude is increases as L is increased. To show that \
this effect assymptotes for large values of L, show that  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", "L"], "A"}], " ", "\[Rule]", "0"}], 
   TraditionalForm]]],
 " as L \[Rule] \[Infinity]:"
}], "Text",
 CellChangeTimes->{{3.662570432555163*^9, 3.6625705079934187`*^9}, {
  3.662570558369726*^9, 3.6625706630573053`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{"dAdL", ",", 
   RowBox[{"L", "\[Rule]", "Infinity"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.662570532863677*^9, 3.662570554132462*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.66257055485109*^9, 3.6795867349025106`*^9}]
}, Open  ]],

Cell["\<\
Define a replacement rule to obtain a solution which includes the term \
\[OpenCurlyQuote]A\[CloseCurlyQuote] as the amplitude:\
\>", "Text",
 CellChangeTimes->{{3.66257067799162*^9, 3.662570712205935*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"amplitudeRR", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"A", "\[Equal]", " ", 
       RowBox[{"(", 
        RowBox[{"A", "/.", "amplitude"}], ")"}]}], ",", "j"}], "]"}], "//", 
    "Flatten"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.662569611124535*^9, 3.662569612094495*^9}, {
  3.6625698522092524`*^9, 3.662569915498646*^9}, {3.662569952274198*^9, 
  3.6625699544930763`*^9}, {3.6625700408138638`*^9, 3.662570044740878*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"j", "\[Rule]", 
   FractionBox[
    RowBox[{"A", " ", 
     RowBox[{"Coth", "[", 
      FractionBox["L", "\[Lambda]"], "]"}]}], "\[Lambda]"]}], "}"}]], "Output",\

 CellChangeTimes->{{3.662569865109861*^9, 3.6625698778483152`*^9}, 
   3.6625699104535637`*^9, 3.662569956012705*^9, 3.662570045599517*^9, 
   3.679586734938292*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", " ", "=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m", "[", "x", "]"}], "\[Rule]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"m", "[", "x", "]"}], "/.", "sol"}], "/.", "amplitudeRR"}], 
      ")"}]}], "}"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.6625700520901537`*^9, 3.662570078149748*^9}, {
  3.6625701342143927`*^9, 3.6625701499087257`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "\[Rule]", 
   RowBox[{"A", " ", 
    RowBox[{"Csch", "[", 
     FractionBox["L", "\[Lambda]"], "]"}], " ", 
    RowBox[{"Sinh", "[", 
     FractionBox[
      RowBox[{"L", "-", "x"}], "\[Lambda]"], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.662570063588624*^9, 3.6625700791123753`*^9}, 
   3.662570151230359*^9, 3.679586734970969*^9}]
}, Open  ]],

Cell["\<\
Plotting this solution reveals that it looks a lot like a decaying \
exponential, except near the boundary (due to \[OpenCurlyDoubleQuote]boundary \
effects\[CloseCurlyDoubleQuote] arising from the presence of the sink there):\
\
\>", "Text",
 CellChangeTimes->{{3.631544567507188*^9, 3.6315445879614697`*^9}, {
  3.631544626312518*^9, 3.631544657701811*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"parameters", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"A", "\[Rule]", "1"}], ",", 
    RowBox[{"\[Lambda]", "\[Rule]", "0.3"}], ",", 
    RowBox[{"L", "\[Rule]", "1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.631544687135305*^9, 3.6315446966868343`*^9}, {
  3.631544804715975*^9, 3.631544819125318*^9}, {3.6315448566941833`*^9, 
  3.631544875442113*^9}, {3.660826186767639*^9, 3.660826234096078*^9}, {
  3.6625701675085897`*^9, 3.662570195172329*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"A", "\[Rule]", "1"}], ",", 
   RowBox[{"\[Lambda]", "\[Rule]", "0.3`"}], ",", 
   RowBox[{"L", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.631544875826178*^9, {3.660826188442234*^9, 3.6608262501446667`*^9}, 
   3.660826916042104*^9, 3.6622124943255787`*^9, 3.6622125304284697`*^9, {
   3.662570172993267*^9, 3.662570195780973*^9}, 3.6795867351576242`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"A", " ", 
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "x"}], "/", "\[Lambda]"}], ")"}]}]}], "/.", 
      "parameters"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"m", "[", "x", "]"}], "/.", "sol"}], "/.", "parameters"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.631544659736499*^9, 3.63154476249571*^9}, {
   3.660826245276739*^9, 3.660826267640201*^9}, 3.662570165402197*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV1Pk/1HkAx3HCth160Eo7LTlSW87W0a5Kb7tJDdEySSH1mGRZtvJYdunQ
WkY0kutRuUrfcbMRinLNNK7KOUzE5AoxM3w0j3S5Vj+8H68/4P14PHWYZ51P
L5OTk3NY2pfanR7v4E647GH6nu9bXCR4c+8Ic4BmjqehfrMZHwjUVwljS2k2
SB8ftbchBMaWalnptMOQeRpejO8n2NluVpxA80Ju9eIK22oCbirf4hotEOat
u93XXyAID2MHX6VFoFlcNXDk4xS8AgktmpYEnwATuv6nSXydRL87/TYTwt6t
2TUSCcrbTffv31iEbxwnWYU6YhwNF/Xy2WUYHF/cQ7s0jrP3/zS69e4R3AwM
z1YIxiCLe9EkL1+LoOCYgEXPUTTxGmrbdj+BR6LjQOvYa/iG0JWPSeugKeba
58QOg7fCdLHwj0Z077Qwvs0cQjanbmHD5mcYaKzkZZkOwlq9mmLca8Y+BZnO
AUY/jBpFFQ36bVBLbCi64S9ClzVjKm+qHdFNti6fQnvhv9JPINwugPvll/FU
ew+e97hWr4ntRPC1or63Gt1g2B4dGhnpgsww/dPBWCF2ZLBdM/ReYPbm4BG+
aRcGFxK7fC53I4vB8mYJBBilt3HU+T3Ad7OuZ+50oDh5IKRDpxe08dfPHvu0
IytKIXrb+T6EWrDrlZJbMXPKTexdKULUptWhgXnNWGUT6Xx/fT9OhFK/R5Q+
w0WV0dVDHgPYUqtIl8w3YXWNgVy3wyBsxL0tG/0bYfXXoXn+50GouEf//bCr
HmmZMZxNaUMg1ucjrwTUwdPFvGWF/TDYPDFTaSUfD4SnE2veDyNlIUJNg8eD
ZXPxsrEbr2GbGrn5OMWF9j7vmUSbEVSLPfzvLNbAwtwivmxsBPRwj2B5pWoM
yK495bBGoZnsO1FvVgmpmROLZjqGvgN2Vi/dH2GLxEgs3zmGGm/tKD9uOer0
ggTnwt7guaKhZZvWQ1zvEp5y1htHhfqlV8llZSAMbvyyunF4sCQmur+VosRl
3V7LgAksfzFnRFtXAk5LePrwWjGO2RdIvaaK8aHR48LaJ2LolVNit6giDMbX
zqickSD2wg+yx97/4X3HLtq/a6SIMYvXVmYX4FySLjekSgrNW00+xnl5WN+i
qzLiOYl8/Sg9NaVcMISFcxoLk9ja9VSHEZ4N2Ym7/qL8KZi8YqRozWWi9mQR
a81Bgn9k8nzVHA4et/nb9zsS5GjytZzucvBwj77qPSeCbJUEg4RUDgo1stIc
XAnqeScdaXEcpPSklMYwCezY8yW7QjgI+jVyaGUIAc/w+tV2ew4MrI9bLc8m
iP6JqfyjjMKWog0K3bkEcdqGbgVSCrobe5qyCwi0FVm2Om8ofDvnfNj2PkHm
4flZVRGFryoO+LGqCPLl+c1fNVAYMjFPVugk6FCcSrVKoSC6/dazU0gQVjmd
+zyJQo9ykR6nh2Ch86OD+3UKrZJtxb8sOVCeuMvzcgSFqhytxrAJgjxB+NXe
M9TST69inKQEm77PswvypVDKSnHWWXKkeqfGHVUvCvmn1vVz3xEEM9cqHDpG
IUsg4MQtudNknKc6zaCQ8XOc78nPBIH6D0oSHCmkFTuYbJ8nmL7CHd1Bp3BT
a9XMF7fM0lzyRXsp/A9BpHu2
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV1Hk41AkAxnFMTweygww/ihy1D1apSNP1qh1alZVjGNbKOtotukTS8bSM
qW1LyLTlao3BlCzjqKXcd441g5FnmtwmxvGrlnSy9o/3+f77/vUxDjjpFqyi
pKTkvLj/uz94TFw9ztx99XbAi4UFEq/yPQP6CRs8coiPTZ0jQVOT3CwmGPhV
wfCjkyQ20FdlpxMeILYtZFzoI7FdtEV4iwjCrEu2u34FierUOts4Ihy3vh6Y
qjpPgh19/dzvRCxSjhguCOamERROEtcILrQijVhtc1NYznXivX6TBbs9JneG
xybwt2jzvn2GBSh/3Od6bI0CLLZMWne9BJqTNJewyDGcLDxjdXemDBzeUu7V
VjneJvQ0KytXwXCIqPH0HEVzTWNVx85aKHmzKLGyYRyNclrpPVmPTQPeIyUx
Q6hZsXkh73gTHpi2Qps5iBx+/bz+uhaUMUV6LqYDsKdVZLrnt4GaKNdYs6kP
Vk2y0kaLDjjUeoZIHWXotneffjAtgvmfm5ytmVKEqoZ0Sqw7UabL5Q1l9qK1
16tC42YXHm1c3p6n6IG7I2twZKQbz9LPNrK8JNiacd0rw6wH+yL1tm+Z68LA
fFL3L5efw9M/81heYidGnTr4tLpe2LbOWfp6iyFM7o8SG0uRatCaJVgtQvZv
lGvm51/Ak+6V4DHTjtlAH8WRpzJwxHuime9boca44lao24f7uaU/UGee4SJ1
VH3Qtx8X74qFdtbNUK+0VHruPACeuCEpKb4Ru866fKn7OAC75Zz3lFf1SMu6
wTdNG4Qo36CkLqwOfkyb9hUHhiCtNK9kz9XgkSQ4qfLdEASN6Q/6kqtBbxOq
yP8YBkOa3vOhrRJrHY7MJjFGoG5YpKLNKoetjW1iiXwEXAu6tMnqCfrfxj3j
c0YRFHZet8KiFJNbXDnEZjkuxYvaVhGPsX7CSqHcJce5HU8FOowS1JtFdJ6K
foVYH/aJcv8ixHdLAt3MxpDyMA7SIiFI9+pElfoxbP/LheWEfBQxdb6lnx7H
yzt6OSc/5ILfzk4f0lKg4QPlUrTqfcw1+V7QqlWgPlB3ouxjFgYSq2apJyYQ
Jk/libQz8U68g4jRmITwIK2QJ7+HU1yT6qjySVCXyWI2+CRDt92EOuI3hXUx
a9Ljnbhwl+R9Xj0/hbuUiLWfRTfx9jAvVJY7DeOKluyGw7Go8i/gaBwk0am6
a2f+6Qg86Qg90Pc9CcZE7bYagwg83m2hme9KwiG1bUlPQzjyVmenOXuRsBt+
PbVEPxwpvSnFNwJILGux3BpZG4aIQ1cGVaNI3A5kfSPQPgVL+x93LcshoS7a
f0DlRDDWF+hTnt8nEWCYl3q5Nggmhr3NOQ9JlDuOF8/TgqD32c3DsZBEooOR
skp1AJaWfhfCKSfRJE4JM9Dyx+BGm2RKF4kzP7FziONMyO698euSkDhtX3wO
NA/0riww4/cu/k94T/m5yg3/TJgL9y46ENdiLHqieQjlAqOm6HESn8K0vxoJ
dUAp7eUN10kSVPq8hFG1F8WcFDfjRUei1JK2CTTtkRuo01c9Q2KH4FNLf6gt
sjs7+QmL7vxrGhL+UNMaGXsSjvp/JDHDDvnyOnQd0oTOG62/kKhLfScijuvg
jpHa7P9u+Xr4aAX32+z+D3VmbSE=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{346.37109375, Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0., 0.9999999319727915}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.631544764279502*^9, {3.63154480860299*^9, 3.63154482268582*^9}, {
   3.63154486457102*^9, 3.631544878688428*^9}, {3.660826192309029*^9, 
   3.660826268900981*^9}, 3.660826918439144*^9, 3.662212494516033*^9, 
   3.662212530464485*^9, {3.66257017482644*^9, 3.6625701989344597`*^9}, 
   3.679586735246023*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXHdYVGe6n4g9Jtt7y+6maZoldTdtU91sssneTbKb5KYYDTG5CUlcM0k2
yyZGSTTYsCEdxjICYhkQUVRQRgVklBEYehs6OMDAACMMvvd93+87h0HnMD7P
rX8sz+MI55zf29v5vnPmqXmLF77x7rzFb82fd83ji+a9v/Ct+X+75rH3FuGh
gCt0uite1Ol0tmt09Dvgr/KDf16iD/mHn9+f5P8CwO1ygdvDZ3T3yWMetwtc
4qB6DA+Cy+Xmvyb6wN6uXAcevM6FnyPXMT2XNr1xQqQn+L8p+OEEU2gQBAYG
8r8Um4N5uGwG/NsIDnu6bjydQTLBRhvIH90s/pwMNlOoil2WIs+7rBAUGARW
F4xTJbBBsN4ILvxrDh+bCk6bSYUGLjOBZAwG/Ntgc7Fo6WFB4yT38Oyai7hP
xStsEKqQCAwFq1NcYDPg3wYbk8gM1yskgsKQi7ThHKmAuyIFAoNYsougRN3E
0CtIvitIwCuE9b4l1SK+ikx38ufV0GYOg0C9Ccjcbns6XrMMaogpOsbh5KOQ
HYZM9Aaws0884PHAbIZ/A6AtmyEVdMpTA8uQRbpdwBwOJ17qBJvFAnl5eZCX
bURDL4NMq51jYJZCA5ohDHGmGoFLDw6E4HRhPpfDARQe9sxlEBhsEno7LYrD
vGh4wByKOJPA1aTT9elCLZcDnEjEVWFEWaNVz5n0gRBtdcr4nIZBZOQgUmyr
4DTk8zYu2/ZOmQFWgx7C8xySigOiA/VgcUEAnx7PJCxGFC8wGPLaPHMkymU1
QFB4nuIgsITrSToRkpMQZEOlMWoN6ZCZEo6/B4Mx00YKSiNM5EjWqwqSncJB
H20NkKdtRkyccKs82YY6sVyzFA4YfYYgPeQ5FXge6IMMeFRJw4kizzD8xCVO
SBEmVDJcWFjkTcDYQvkNTZTXEOxlRxIumOSdICFtFmIWRDbUzfaSTx9uUY1o
jQ4m+YQsEzCKMP1DzRQfsAzzm4ynQEnO4CAvOa3R3sarSNGzkGEGI4RjAAQG
p9Cl3sYz6r2M57Kg8YyjjMcxR1AUmlwZGJRC5xXjeWp8G8+HUJdlPGQiCwOV
M713hUPCHgeYM/NUwtZwqiNWbzuOpIIbUoKwyI3YkbNgGWZBNPoyWGjpbccg
jCybW1CuMOqJshqEmByh6RXQXGMDq60C7G1OKgYjdnSBUa2oyEdG1Cg7uoU6
6HiuBXrkhqrNVoTD06H6MDBRjgVdak8fwl2GPZ1WAxePZkQ2m6OVLBjxrZ1r
n9Hq4FggP2MtUo3CYgaBGeHuZjPLgCKP59PjSU1GB+pTSFwVRUGFlg83N+Ml
zVhIyDBORRkX9QJZe901KVxQajyqHagMBYWb0VVuMEdzNIzYgU0YCNkoj6fN
jFCWZ46Up5lTS5UnYGx5/FpPBIwZc1F0vmDItrt04+W5NkuKSAdurEbqMjpF
EDtZWp6LNtuVqcElu6BT7YwTsHmZIVheGhxt5tweiVcPWE1hKimD2a7iEAgG
vWSvj2b2imgV6eEqJizdxl1rpNaZVBnGjyHDGNbhz8f/h8/fL094BjrB3XYG
hnqb5PSljRFumwwXLlyAIVczDDTnQm9ZInTlh0LH4XehefcfwZ4wcxzUR1+L
+O4zm1S8MAUNO/SDlJ8RI4kmw6v+dey/dOzqy7xO+Bx9OjwIg9010F9/BJxF
ceA4/jm07Z8HTYkP0fXj2aeToGHLHdCy98/QkbUIugrWYrjvBnerBTz9HdLH
o8mLrvwvD/+veniqemy0V2PRq5+hV1+Dxh0PQn3M9apXt90Dral/ZRhlrat6
H5zvKILh8z26K32wGcOr9/03H/sRf1LNGYahngbobzgGPSUGcJxYosanlyaN
2++F1rQX4dyxT7A3R0BfbQacd5TC8FC/7tv/t5p8hz8nYcV1YMoUYOVMwsr5
NbRnLoSmnXOhPnaGbpRD0l4QahRulmqUoRoD0iKXrQZ/XiV5XxgegsGuauir
y2S6547qocX0LDQY5ozwNsyWKf436D69HoMhDYOhGIYHXbofMp2pMDx8Ae+B
3NDU0QsV9k44XdYKOYUNsP9kDew8Ugbx+4rAWtnur6FMkmIND/ZxvFE1oWbC
Jkl+DB17I8KEWPg7H2s/+CZ05q3gxjPQcgorzzlp2mkwcH4I2jr7oKqhC86U
t8GxMw2w73g1GA/aIHJPIazafgqWxByHD9dnwVsrDk6BV5bsQwZ7jlaqco33
I7JoWRMpNbBvnmYxOnNDOBYbd9yvGNFumIVGfJYNzA5Eg5Ph0QEyca+Efvcg
tJzrhdI6B+QWN8OB3FpIOlQG0XutLOnnUWb4YO1hmB+yHymSqFfDvKXp8O7K
TPhk01EIiT8J65IsEJt6FpIPl8H+E9WsMTmjvN4BTe290N3rhiHP8CRtrQYV
hYYG2Ae95TtRoS+FQsZ7hUITMSLvhtZ9L3EF6SnZAgNNJ8HT136lDIh+9xDz
K67uALO1EVLNVbBlfzGsT7bA0tgTsCjsCOkxkdWYBq9+sQ/eQTU+DT8Gyw25
EJ5yBrZllEBqThVkn7aDpbSV46rlnAtcA4Pf8xKfpXcp8YxVYbC7Fvpq9kOX
JQwD521oSnoYZb5OBg5KvvUulPzfuWL0lG7noBl2d09mElPYCw1tPVBY0QZH
Cuo5fCN2F7JYH23IhsCvMnRC7CvhzeUH+NhXCULk7QdsHF+kMWlOdCgthi9c
0F2jbfIuNYZ6uRKQPR05n3LW2eNvUQTHUQqT8zk89Q8ueTRu4bg2QQpOUxi5
l4KdwicNTU55t3JbPodH4FcHsC6Q4FM5bCiUyBUb0CXbUHAKl9ziJijD8Gt1
uMA96LlJW+Z2WWew0WMNPgrdheE882H9VS2NVscUfZSPUxvprz+MNbtRpNRk
zs76Vic7lwqFIb2Yhf1oYzbFhpB1Cof35zglr08ScmbgpfklzVDd2AVdqC/q
Ladtn4I2SUGHXK3QV3+Iw6LtwAIqqaqgaGRhWQxmSmB3u5XiX1lUoWCube5m
q+49VsmlgyyHkkmLTubopVJCYUDJl2Wph7NV7ZzQ54c892kLWKdYEvtAvz0L
ulnAN7wEvIrqMbSlv8r9geovlw6MdQws9hUVN/JfHKb+l1gG3l11CCuXkIx8
TQWOTEsmzsit4ZJAwYk+flRbskopGZUCikvn2Rj0ZRBNC1KyaVKyV7hM99Wk
o3/tVGCYeh56aXd2BUbYac7s+cv2B0ihXl2yj2tA6NY8rguZ+bVwtrKdqzU2
kye1hSpV/InN31Vl4jRu2fMM9wZxp3El2ONuQn8+D50nQ/CaVCwJdWwmijRy
IAlEKYGm0QmJJsGCkP0QHJEDm3ed4WtO2VpYicEhj+7P2uKcleLQZOVuL2Qb
tWe+RfVR2mgK5wAVfqo2PS1nobKuHQ6fqmNvLYk+Dgu+zBglxj8jzRxj6ehR
KkMdXf0c5S9oi3FacdWgi0eiroI1XJ7tcTdLq0zG+nEbtKa/jOdWQ2dlJhSX
VXGRoAKAAaJIQK7RY1Gjw9QJC0pb2HhUxF69uPDmK3yx/VHwUidu2fNv6I0b
JF+awX7DJcBRGAulVjOkHivnZEb/S7UnstqUPvFpRXAYqy4VMQzON7Q1PqFq
3McFqDPvKxkH10vOE3kY7Dj6EdTmb4Vs8wmu41hdFKZvfJnBebx1fwmXbHI3
Bt/b2kyPeXsbM6L79Dqey+pjp48wxX7TcuQjKD5mgN0ZORASd4LK2TjJlNLx
n5E5rCmNSNQl0bTvaTPN4s/x3Nio7lNxsMffKvhNYPM2HHgfLIeiwJByBF2Z
Lc06Ad5fc5iDnXK+sqGTKpFusTanTMmJGhFNKA5zMCW7wokCqD5tARTsD4OE
xFR4b/Uh3TjJ6bUv0uEzHFDIllQnHc5+3SfanDL4cyrr5CyK4bikiQ4Zcduw
73waClM/g+07tsM7oRkKF6wgbE9qykVYXd3nh3TB2lzSpD7kroHG41wP0D1C
n/E4lN0Ott1vQ2riBvhk7V5vJtTtqQpQM6QKsESbyV7FaJh6VAE7jnwwsuox
FWp3zIUTyX+H9RFxmFqpxIONRdFOjaKk5hxxCNFmsIs/p9Bky92JuhfeHAhb
xd4ItsQXYI/hS/jbCqN0x3hYvC4LEvYVc6HH9rXi4rxN5gNXc/umcYPukcju
RLMu7lY4bZwHsRGh8MYXKSwxTj2wZscpOIRlC2v0Km1pd4xBuTZ+DhzfshBW
rlkD85bsZcok6VYc9WhewsaxVpvyNv68imsN2YGGOIVyDVI+mhAIIaFr4LUl
JrYwzcNUQps7enUbtMkaJNkLHjffV9HMqJi3Jm4mZMUtgKUrVjNZzGNYu6OA
E9fVP6gL1yYbp5DFFj3QnMe3bnQXwBaOmQ7muJdg+dfL2Q40R9LgQD0Hq54u
UptsDH9Oo/U5rD4bxP0ukURDnIp7BsJWfcZOI4dRK6PJAM0qYDpl59J733Wa
Dy6R8syFITc3WZo9FFOXxN4PsWsXwX8s3c5lm+oLCY61JV5wGWMHVtmItKeH
yh3YCWC0Kbsh4oeOCgGuhMHOCuzwX6iWq465BVI3vQaffrWBfbxqez6cLGri
QrBFctferVS36tx23qrTG/LE3oXHQ4u2AT4ssVEeY0tU7obW1L+olT436glY
+fUSeH3Jbh4dqMriuL9dyuF/i8/TDEba6dEbodkDvtbL1vMn1klnHd9W0rhF
dqiMmQmJYQtgUUgsDXuQmFkKje09iSprjV0xdSsB9bUYg3mvok1qzv5Yo+iL
YUuDBBabEX0j5sKqrz+HBV/shTXGU1xcsF8mezEdczfJ47BBprkCROC5eGMg
WtmoGK33aqk3FVWqInz3TwkZPQN2r3sZPgyJ4spBN4hdPQO7VBH8bMB4mtPF
LgbtmDttvJ1iqnH7EmGlFIEyjRoH3X5x/EfdCVGrPoCFS5MgLLGACxdaa48U
wfcuxsjeiBssKV5PFxjMI1sno/l/zZ9T4Py5Eu4pOFIx/5zwubB8RQjefRzg
PkidNlUw91Uwlksy/Y05Mo2pWFwPaeufg4+/3MwD0AnMICwSun3aZEIkGbrr
oOXA5l1PiYREhySunQfvh2yBTVjCapq6ZXP3SWapQmbYw+mk+LUsaibErn4X
3l+xi1dnSKmD2mSWqGSGoLc8GRplFSyJnA2bVy4G/dr9vHyCt5i6Q9pkPlPJ
DPJw3mC8n8kURdwBG1Z+DH/fmMmDoWd4WHfEiwxTCfa2SMVuBD/IYGvEXbAu
9FP4PDKL6yJN7tnaMvyDPydh6zkAjUmPM4mzEbdDWOg/4MvYHLor0uVow/8u
4eTept3PMNwWORPCV34IITFHwVZ7TndcG/6xhNNKT3Pqiwwvj7wZYlYHwdKo
Q8z9pDZcL+G0+9Oe9TcMrGuhKmo6bFnzJnyxOR0sZa26PG24GEUnc5Z3nVoF
ddh266Kuhb3r/gpLNuziG0g0X742hUWSAsVTb6kR6gx3sg5HNz4OS1dH830l
eq9Am8IHUgXatbAnP8loy+Z74OuVy3k+w+lJ3l35hL8n4TSctWUtZgtURN4E
EasWQ/QeCwbygK7w4tB5V4JI6p7ieKiNu435kt4rY9KhrsUpbyx98nyHPyfC
QEs+1Cf9nqF54ffBirXhcPxsY7E28m3JeNjtRGk/YmnJ3ZtXfQSJB4s5X0q0
4W9JxjTm1iYIS6euex7Wb82kpblSbeSbEkmB0rhvvkiUzXfA6rC1lCTl2sg3
FFthmjmLDVAbewvGyHWwY+182Jp6itbrdBXa8AUK4x471O96XrXVms3xdEdU
pY2cL5FO23aoibkZaqKuh/i1QXj7WkYhVa2NnKcq2wp20yvMMx95ro/eTutB
tdrI1ySyt3Iv1MTOZEW3r10I6TmldJNYd3EgvSKv97i7oCF9IXM6vflu2BgV
R+OAXZvTy14xVJ1wNyOTw+aBKbuIenqDNvIliaTgbc9bw5OnLeI2CA9fR8t5
TdrIF72CoHbns8wza+NcMJqO0fTYrI0UKx8TwFVzEKrRLuQLw7oPwFLarGvV
hv1FEdVzHpqygtWoi4ozQGfPQJtAXu5Q/LyX+NWJTzO1/ev/DPuyC8k5YkVU
p6OF5DGHX6XZV+D8JR9g0fkaAJ6TSvc1nYCq2NlC6Q2f0NqI7pxk5n/Wddpt
YLHkQR7+M6JQywyZYHd6fDF8VjJsP7UJatGrxRGzINaQAL1953UOyVBzqFUm
rAp6fAxlSM9Oh/DgINCHGcHa5h6ZMP8kL6RFhlrTAjbjsY2PginzJJmxU2Wk
McKOk1LSc4T0mGQ2XmFPWYamdPvccv6TvH6wqwoqDaJHp6xfAIVlTbpuL2Y+
R1dlVHfbTaxVdKiennDyxecZyae3/ihUxdwKlZHTIT4yFNq7+nROlY/GfKoQ
5AcSkajR5vKpzNOKi07HsouKIuaAMXkXr1H0SCa+J1DleTjl8TKDzemTw1OS
A41W9Zkfs7mOb3oIDmTn60Ss+ky1JyVs2N0Nlcl/Ecmx4Xk4Y7Pr+rRhf1Cc
010D5QkPcPdP3PQBFS9dvzbsCQlzNeairW/jmWNr7FqO1AFt2O8lzFGehncS
06EEAzx51y6efd1eMEbNla5vKYjhOkxDwYEjOYPa5B9TTIf3TvVZy1TTnbQU
64a0YY+qFh+EqtR3GHZo49NQXNGg82jDHlEsjsNTedJfGZa2CQf8ZoduWBv2
sOooJ5RuE/NOyuYP4Fx3v+6CNuwhCaM5p9TwGDsqKfoz2o0TG6G+Yb+TMGqF
pfEPQi0aMiluOd+v8xVjPPLzoMSed9qhLO63XP+St4RxrPMV47SxD0jsQGcl
lMXcCdVRN0CKMZIneRAu1sTeL7F9bSVQHj2bE3nPzi28AM5XeO8JM/Q+GSqu
9hKoiJ6JI9VNkJa6ky8eY8/7Xgnr6yhDRrMYlrGf1xNhjB3a30rYgKMSYXNw
3JwBGem7+eRkbdhvFFhnNZrkDlRrBuxPE0JO0Ybdo8C66tiSlGr7TLzKB1O1
YXdLmLu7Hkpj7kLYjbBvLy+NwJXasLsk7DzOEbaYe9hv+3bzyg5M04bdKWFD
GJ20PkWwtF1xfPIqbdgdEkYpVJwwl6MzNYkX9eBqLxijxB7jBB4miraJ6cW0
9SualnSXIC5ipDxFSENscfLrYnCO04+E8jf8YceDzbRIVNWoN3nrlH6+qQ2b
LWHlB0NERYl4kfei6edb2rBZElZtDhc3Upv/CB2dYoHu29qwmRLWVJzGxfLk
5kegsYVHIhBPY/gcs9Sm5PW+iK+mdJs809VwBiNpBhTiPXZVtXiG/7uCPD9L
OPaiI/1UpIcpL07ow7OVh/hV4byZ3iqZDnQ3QCnmWVnkLWAp4LthkE8gXMb8
JVac5KsPNMUEej2dO5rhLZKh53wPFMU+xAUv+2AKn/y+ZOh3/hKvJ0SrryfQ
6w7Ks+08f90kudD8bt0mOnVGEq/7wQ9ULmMOX8pDxYE43RnAGB7MGlqdPtex
bpb8ivfK+I1bRGX4En5jLh3yk+ahmdDWVgMWqw1q7G30wocvfop+FdnrmN+R
yBegb4DbNvxQ5efvQW13BT/5bKpw8e/0uK7J7nOdcIbk13A2VYb+o9Dh4Gc6
4EeS39iPNjusJvXR5mCD9zPJozlNl5y6W0uhMuomzoK62lo++WPByVdu3ihh
Q24Mq5j7uJ9Z8nkrE36iDbtBiROcZgq3iaWhQ3si+ORP/cNKMpYy5GD8e/yY
gh/Y9RJWX7iXZwtzxFM4zfEsBz/Thl2nmKRFmIQW3xoa+e4Vfu4FY9S1iiEG
RgxxpoAX1+AX2jx+7WWIM9teEEFl4h0KGOOpHgVWnPEVQzIT3mMSfmC/krDm
smzuRycinoC+fmGIX2rDfilhA73tYIu6ndcA62p5eQN+pQ27xku304Zn2fQn
joih4Nf+YAFQdGCFiIstH4o+dq025heKYuU5UrHfo2Juf7CfS5i7t4MVK428
DRUTD+hd5wVj1M9GqfM8q3PycBJffL02j58p6hxcyeocNiwS6tygjfmpZNVW
a+FCnRvxuOqnMWA/kTDP4ACcjb6fh7eqiiI+eaM/WABYUhaLG2bTBiHhdG3M
jyWr+qKDbIhj0c/zg5p+YD+SsAFsYCVo8JLIWdDSLFJqhj9YABRse00ssh1J
FBKO8RDZD+WxsuNbxGJQ/EKBudkLw5AfSKGcHXVQEXUzlr57oLu765KLL2Lw
fQmjeLDE/ZEddbYgi0/e4g8WANaDq4VcOz4Vct2qjfmeZOVoqeAZOT/iYRhw
u/3BvutDwrJi8X7fbf5gAXD28CaWMFuRUAxiYw5b3i/T+hq2viPPdKOtqaZa
Iu6H/v4+b/KXNWxpvqXqa9j6jjxWkPAsV4eS09lCoVmSo/9JS+PFTV+dVHn0
u+RYgphyt8mEny25XcaY5fMVx5Ex65vSiq6uZiiLupUjtre35yIufsYsjXcB
famkREn+lpc52625GUKlOV7Mxn7Zz/cLc76YfVMeK8tNFvYzvC2Y3a4y8ztg
+Xy1zBezb0hLDvR1YweYA0WRd4Czu3MUv7EHLF8vaGlzQhsmiVG1IFvWMHGj
6DMTldcumqpOceAej3nO++2oMV51kUkf8zhm2XRorCu/PFgAFB4W92bmnV8I
VndpY6ZJVr1drXgDcyucibwXy9LA5cECIG9boNgRzUsXrO72wjBEeR+kpiiL
4y4n/jVx5T3a1KdKoTyeQSiMegDK8c6qo7Xh8mBYI9LE1HEidY1g9RttzBTJ
qquditkMOBX5CAx5hi4PFgC5W15nrcqtOYLVb7Uxk+WxeptZjLAJrwvMvf4x
BdFzeUGmrbnWL2aSPHb2qEEsMe78TGDGeMh4ojTD+QEXFGP+UA719/VeAmPU
REkgb88SkQaH471fEvTJYIJk0NlWL9pf1OPqtOsXFgAnt8xnm1WcPSZYPaCN
UXpW3cV2ftA/huxM4ql2HgOjVAjrUTGdnEiRdv6dNmacYmd3H9r4TrbzgLSz
XxgWHpO4V7AcihWsHvLGTPbG8E9PdwcnjyXqd+o9tTeEuQjl4WTSh0y7ONfE
fz/sTXriKNIdLdVQHXUj5MXwfgM8on2p4rga28lLL52gXmqvtIjqmCCrw6O+
r8uNe45HoBZ7mY/ruLFC1dlsEffbeR8dxLK7Wh08l6wlCVh+9B/Y9Y62Bm/Y
OGnasb4yw2YKVeYY9etAYPQcwwGS/PGol23F+TG+McL3t2J4dyZyLjrZB1nf
X6Mw5tdDYCjnJDLZk7tl55g7mqSvLxfQ+LIEBdJ1rknprbpxqh+lcf28Zz/m
9weMzhBvA4iqcfHr5ypVjbfo/VEdMevFb2xf8oK5r6nZm5SvFP9/d37k9GWi
dFf8J//QdbY=\
\>"]]
}, Open  ]],

Cell[TextData[{
 "To avoid \[OpenCurlyDoubleQuote]boundary effects\[CloseCurlyDoubleQuote] \
from the right boundary, set L->\[Infinity]. Note that, in order to compute \
the limit, we must tell ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " that \[Lambda] > 0"
}], "Text",
 CellChangeTimes->{{3.631376585108053*^9, 3.6313766299234953`*^9}, {
  3.631377378814129*^9, 3.631377409942335*^9}, {3.6315446154324636`*^9, 
  3.6315446157847643`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"m", "[", "x", "]"}], "\[Rule]", " ", 
    RowBox[{"Limit", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"m", "[", "x", "]"}], "/.", "sol"}], ",", 
      RowBox[{"L", "\[Rule]", "Infinity"}], ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ">", "0"}], "}"}]}]}], "]"}]}], "}"}]}]], "Input",\

 CellChangeTimes->{{3.631376731529023*^9, 3.6313767399268513`*^9}, {
  3.6315437214934053`*^9, 3.6315437245719013`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "\[Rule]", 
   RowBox[{"A", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox["x", "\[Lambda]"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.631376691508813*^9, 3.631376740991437*^9}, 
   3.631376969115285*^9, 3.631377550859212*^9, {3.631544902137055*^9, 
   3.6315449290750227`*^9}, 3.660826302269311*^9, 3.660826929861042*^9, 
   3.662212495185865*^9, 3.662212530739105*^9, 3.662570208473418*^9, 
   3.6795867354139223`*^9}]
}, Open  ]],

Cell["\<\
As L->\[Infinity], the solution is a decaying exponential (shown in the plot \
below). And, the amplitude of the gradient is j*\[Lambda]:\
\>", "Text",
 CellChangeTimes->{{3.631376757261339*^9, 3.63137686297575*^9}, {
   3.63154459174504*^9, 3.631544613312821*^9}, {3.63154491028301*^9, 
   3.6315449115856123`*^9}, {3.660826997098174*^9, 3.660827026248126*^9}, 
   3.662570236705182*^9, {3.662570279292149*^9, 3.662570288955711*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"A", "/.", "amplitude"}], ",", 
   RowBox[{"L", "\[Rule]", "Infinity"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.662570252674609*^9, 3.662570265164926*^9}}],

Cell[BoxData[
 RowBox[{"j", " ", "\[Lambda]"}]], "Output",
 CellChangeTimes->{3.662570266306979*^9, 3.67958673543064*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Two-domain reaction-diffusion model", "Section",
 CellChangeTimes->{{3.631544274623726*^9, 3.63154430225519*^9}, {
  3.6315443555011673`*^9, 3.6315443607650213`*^9}}],

Cell["\<\
In the case of Dpp in the wing disc, Spalt inhibits the expression of Dpp\
\[CloseCurlyQuote]s receptor, so that \[Lambda] is greater within the Spalt \
domain (the \[OpenCurlyDoubleQuote]proximal domain\[CloseCurlyDoubleQuote]) \
than beyond the Spalt boundary (the \[OpenCurlyDoubleQuote]distal domain\
\[CloseCurlyDoubleQuote]). Let\[CloseCurlyQuote]s model this as if each \
domain had distinct degradation rate constants: \[Alpha]p being the \
degradation rate constant within the proximal domain and \[Alpha]d being that \
within the distal domain.\
\>", "Text",
 CellChangeTimes->{{3.6313770945135727`*^9, 3.631377369926742*^9}, {
   3.631377430505621*^9, 3.6313774688525057`*^9}, 3.6313778040208187`*^9, 
   3.6315439108226633`*^9, {3.660833103116836*^9, 3.6608332978392067`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqnProx", "=", 
  RowBox[{"{", 
   RowBox[{"0", "\[Equal]", 
    RowBox[{
     RowBox[{"\[Delta]p", " ", 
      RowBox[{
       RowBox[{"m", "''"}], "[", "x", "]"}]}], "-", 
     RowBox[{"\[Alpha]p", " ", 
      RowBox[{"m", "[", "x", "]"}]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.63137748731056*^9, 3.6313775019867887`*^9}, {
   3.631377558210866*^9, 3.631377578752619*^9}, {3.631543733387949*^9, 
   3.631543735475259*^9}, {3.6608275098880568`*^9, 3.660827512846426*^9}, 
   3.665589729657815*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[Alpha]p"}], " ", 
     RowBox[{"m", "[", "x", "]"}]}], "+", 
    RowBox[{"\[Delta]p", " ", 
     RowBox[{
      SuperscriptBox["m", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6313775795928297`*^9, 3.6313809454327927`*^9, 
  3.631411585656035*^9, 3.631544933668927*^9, 3.632413970570524*^9, 
  3.660827056323597*^9, 3.660827781955587*^9, 3.660828258461125*^9, 
  3.660830458389351*^9, 3.6622124952619963`*^9, 3.66221253082024*^9, 
  3.6655890621547327`*^9, 3.665589739949718*^9, 3.665591722206985*^9, 
  3.671131880853174*^9, 3.679586735468198*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqnDist", "=", 
  RowBox[{"{", 
   RowBox[{"0", "\[Equal]", 
    RowBox[{
     RowBox[{"\[Delta]d", " ", 
      RowBox[{
       RowBox[{"m", "''"}], "[", "x", "]"}]}], "-", 
     RowBox[{"\[Alpha]d", " ", 
      RowBox[{"m", "[", "x", "]"}]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.631377581049139*^9, 3.631377598110271*^9}, {
   3.631543737571431*^9, 3.6315437398592653`*^9}, {3.660827514962965*^9, 
   3.6608275199580603`*^9}, 3.66558973453374*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[Alpha]d"}], " ", 
     RowBox[{"m", "[", "x", "]"}]}], "+", 
    RowBox[{"\[Delta]d", " ", 
     RowBox[{
      SuperscriptBox["m", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.631377598751286*^9, 3.631380950744763*^9, 
  3.631411598486883*^9, 3.631544935446556*^9, 3.632413979107018*^9, 
  3.660827058304471*^9, 3.660827783949486*^9, 3.6608282614200087`*^9, 
  3.660830460111024*^9, 3.662212495279931*^9, 3.662212530838439*^9, 
  3.665589062241061*^9, 3.665589741749951*^9, 3.6655917224671993`*^9, 
  3.671131880975438*^9, 3.6795867355048923`*^9}]
}, Open  ]],

Cell["\<\
Define ' xB' as the location of the \"interface boundary\" between the two \
domains.\
\>", "Text",
 CellChangeTimes->{{3.66559016243382*^9, 3.6655901684361134`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bcProx", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"m", "'"}], "[", "0", "]"}], "\[Equal]", 
     RowBox[{"-", "j"}]}], ",", 
    RowBox[{
     RowBox[{"m", "[", "xB", "]"}], "\[Equal]", "mB"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.631377613096333*^9, 3.631377629152968*^9}, 
   3.631411695615671*^9, {3.631543742890959*^9, 3.631543744842894*^9}, {
   3.660827080700646*^9, 3.660827081039415*^9}, {3.660827521682659*^9, 
   3.6608275231580477`*^9}, 3.660830408453294*^9, {3.6655900937793417`*^9, 
   3.665590100313623*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["m", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], "\[Equal]", 
    RowBox[{"-", "j"}]}], ",", 
   RowBox[{
    RowBox[{"m", "[", "xB", "]"}], "\[Equal]", "mB"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6313776336099157`*^9, 3.631380953196451*^9, 3.631411601046427*^9, 
   3.6314116962496147`*^9, 3.631544937130086*^9, 3.632413986036145*^9, {
   3.660827060030219*^9, 3.660827081780982*^9}, 3.660827786981533*^9, 
   3.660828263612239*^9, 3.6608304089757223`*^9, 3.660830461780066*^9, 
   3.662212495305973*^9, 3.662212530869907*^9, 3.665589062265225*^9, 
   3.6655897451461*^9, 3.665590119614496*^9, 3.665591722492523*^9, 
   3.671131881016016*^9, 3.6795867355340023`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bcDist", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"m", "[", "xB", "]"}], "\[Equal]", "mB"}], ",", 
    RowBox[{
     RowBox[{"m", "[", "L", "]"}], "\[Equal]", "0"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6313776887641277`*^9, 3.63137769617249*^9}, 
   3.631543746802742*^9, {3.660827525390127*^9, 3.6608275259093437`*^9}, {
   3.665590103474024*^9, 3.66559011711804*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"m", "[", "xB", "]"}], "\[Equal]", "mB"}], ",", 
   RowBox[{
    RowBox[{"m", "[", "L", "]"}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.631377696632761*^9, 3.631380955418984*^9, 
  3.631411604972999*^9, 3.6315449391007557`*^9, 3.632413989236189*^9, 
  3.660827061527269*^9, 3.660827788607777*^9, 3.6608282663843393`*^9, 
  3.660830464543029*^9, 3.662212495323201*^9, 3.662212530886118*^9, 
  3.665589062303669*^9, 3.665589746906843*^9, 3.665590121592845*^9, 
  3.665591722510586*^9, 3.6711318810469627`*^9, 3.6795867355508347`*^9}]
}, Open  ]],

Cell[TextData[{
 "Define \[Lambda]p = ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{"\[Delta]", "/", "\[Alpha]p"}]], TraditionalForm]]],
 "and \[Lambda]d = ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{"\[Delta]", "/", "\[Alpha]d"}]], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.631378000877153*^9, 3.631378025117362*^9}, {
  3.660827569947904*^9, 3.660827586136345*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"decayLengths", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Alpha]p", "\[Rule]", 
     RowBox[{"\[Delta]p", "/", 
      RowBox[{"\[Lambda]p", "^", "2"}]}]}], " ", ",", 
    RowBox[{"\[Alpha]d", "\[Rule]", 
     RowBox[{"\[Delta]d", "/", 
      RowBox[{"\[Lambda]d", "^", "2"}]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6313780291617327`*^9, 3.63137810157619*^9}, {
   3.660827590451432*^9, 3.66082759853522*^9}, {3.6655897570353603`*^9, 
   3.6655897778280773`*^9}, {3.665589816572461*^9, 3.665589818668088*^9}, 
   3.679599225441215*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Alpha]p", "\[Rule]", 
    FractionBox["\[Delta]p", 
     SuperscriptBox["\[Lambda]p", "2"]]}], ",", 
   RowBox[{"\[Alpha]d", "\[Rule]", 
    FractionBox["\[Delta]d", 
     SuperscriptBox["\[Lambda]d", "2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.631378101997301*^9, 3.6313809772741013`*^9, 3.631411620197373*^9, 
   3.631544952182851*^9, 3.632414008819165*^9, 3.660827126524783*^9, 
   3.6608278026452703`*^9, {3.660828303349333*^9, 3.660828317296035*^9}, 
   3.660830473426016*^9, 3.662212495837854*^9, 3.66221253137352*^9, 
   3.665589778905389*^9, 3.665589819187887*^9, 3.665591722539187*^9, 
   3.671131881067136*^9, 3.679586735584629*^9}]
}, Open  ]],

Cell["Define our parameter constraints:", "Text",
 CellChangeTimes->{{3.631378208560235*^9, 3.631378220526806*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"parameterConstraints", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Alpha]p", ">", "0"}], ",", 
    RowBox[{"\[Alpha]d", ">", "0"}], ",", 
    RowBox[{"\[Delta]p", ">", "0"}], ",", 
    RowBox[{"\[Delta]d", ">", "0"}], ",", 
    RowBox[{"\[Lambda]p", ">", "0"}], ",", 
    RowBox[{"\[Lambda]d", ">", "0"}], ",", 
    RowBox[{"mB", ">", "0"}], ",", 
    RowBox[{"m0", ">", "0"}], ",", 
    RowBox[{"xB", ">", "0"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.631378193786682*^9, 3.631378251078013*^9}, {
  3.63241401251439*^9, 3.632414014014785*^9}, {3.660827605418706*^9, 
  3.660827613174645*^9}, {3.665589852435074*^9, 3.665589858801591*^9}, {
  3.665591689901681*^9, 3.6655916928224363`*^9}, {3.665592863042102*^9, 
  3.665592871489933*^9}, {3.665592925010621*^9, 3.665592927186077*^9}, {
  3.671106429743074*^9, 3.6711064372647057`*^9}, {3.671106934222666*^9, 
  3.671106947010564*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Alpha]p", ">", "0"}], ",", 
   RowBox[{"\[Alpha]d", ">", "0"}], ",", 
   RowBox[{"\[Delta]p", ">", "0"}], ",", 
   RowBox[{"\[Delta]d", ">", "0"}], ",", 
   RowBox[{"\[Lambda]p", ">", "0"}], ",", 
   RowBox[{"\[Lambda]d", ">", "0"}], ",", 
   RowBox[{"mB", ">", "0"}], ",", 
   RowBox[{"m0", ">", "0"}], ",", 
   RowBox[{"xB", ">", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.665589859770875*^9, {3.665591693624559*^9, 3.665591722556589*^9}, 
   3.665592878020986*^9, 3.665592927985857*^9, 3.671106443945912*^9, 
   3.6711318810963373`*^9, 3.6795867356173973`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqnProx", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"eqnProx", "/.", "decayLengths"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6655897960166187`*^9, 3.665589802409355*^9}, {
  3.665589865561891*^9, 3.665589893822587*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "\[Equal]", 
   RowBox[{
    SuperscriptBox["\[Lambda]p", "2"], " ", 
    RowBox[{
     SuperscriptBox["m", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.665589803064843*^9, 3.665589820861615*^9}, {
   3.6655898856233788`*^9, 3.665589894800929*^9}, 3.665591722592387*^9, 
   3.671131882333338*^9, 3.679586735690309*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqnDist", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"eqnDist", "/.", "decayLengths"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.665589907014352*^9, 3.6655899129833612`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "\[Equal]", 
   RowBox[{
    SuperscriptBox["\[Lambda]d", "2"], " ", 
    RowBox[{
     SuperscriptBox["m", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6655899154335012`*^9, 3.665591722623703*^9, 
  3.671131882437644*^9, 3.679586735719378*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fullsystemProx", "=", 
  RowBox[{"Join", "[", 
   RowBox[{"eqnProx", ",", "bcProx"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6313776497553673`*^9, 3.6313776668464727`*^9}, {
  3.660827084015316*^9, 3.6608270846426907`*^9}, {3.660827530727169*^9, 
  3.660827536493677*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"m", "[", "x", "]"}], "\[Equal]", 
    RowBox[{
     SuperscriptBox["\[Lambda]p", "2"], " ", 
     RowBox[{
      SuperscriptBox["m", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["m", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], "\[Equal]", 
    RowBox[{"-", "j"}]}], ",", 
   RowBox[{
    RowBox[{"m", "[", "xB", "]"}], "\[Equal]", "mB"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6313776676217546`*^9, 3.631380960239777*^9, 3.631411607530242*^9, 
   3.63141169899785*^9, 3.631544941651829*^9, 3.632413991788048*^9, {
   3.6608270661292753`*^9, 3.660827105061565*^9}, 3.660827790834052*^9, 
   3.660828268665188*^9, 3.660830411227652*^9, 3.660830466031983*^9, 
   3.662212495354035*^9, 3.662212530921039*^9, 3.665589062336762*^9, 
   3.665589919275935*^9, 3.665590128471438*^9, 3.665591722644408*^9, 
   3.671131882455165*^9, 3.67958673573846*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fullsystemDist", "=", 
  RowBox[{"Join", "[", 
   RowBox[{"eqnDist", ",", "bcDist"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6313776981335793`*^9, 3.631377713507567*^9}, {
  3.631377968160412*^9, 3.631377968257881*^9}, {3.660827539325953*^9, 
  3.660827546196671*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"m", "[", "x", "]"}], "\[Equal]", 
    RowBox[{
     SuperscriptBox["\[Lambda]d", "2"], " ", 
     RowBox[{
      SuperscriptBox["m", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"m", "[", "xB", "]"}], "\[Equal]", "mB"}], ",", 
   RowBox[{
    RowBox[{"m", "[", "L", "]"}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.631377714083108*^9, 3.631377968721347*^9, 3.631380963634809*^9, 
   3.631411609889841*^9, 3.6315449436117563`*^9, 3.6324139934224443`*^9, {
   3.6608270680895853`*^9, 3.6608271068817177`*^9}, 3.6608277926144323`*^9, 
   3.660828283539673*^9, 3.660830467656562*^9, 3.662212495370974*^9, 
   3.6622125309540367`*^9, 3.66558906237009*^9, 3.665589921037092*^9, 
   3.665590130122258*^9, 3.665591722672381*^9, 3.671131882492475*^9, 
   3.67958673576724*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solProx", "=", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"DSolve", "[", 
      RowBox[{"fullsystemProx", ",", 
       RowBox[{"m", "[", "x", "]"}], ",", 
       RowBox[{"{", "x", "}"}]}], "]"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], "]"}], "//",
    "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.631377716149481*^9, 3.6313777421949787`*^9}, 
   3.631543829884905*^9, {3.660827549706831*^9, 3.6608275554134083`*^9}, {
   3.665589966909284*^9, 3.665589985007558*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "\[Rule]", 
   RowBox[{
    RowBox[{"Sech", "[", 
     FractionBox["xB", "\[Lambda]p"], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"mB", " ", 
       RowBox[{"Cosh", "[", 
        FractionBox["x", "\[Lambda]p"], "]"}]}], "-", 
      RowBox[{"j", " ", "\[Lambda]p", " ", 
       RowBox[{"Sinh", "[", 
        FractionBox[
         RowBox[{"x", "-", "xB"}], "\[Lambda]p"], "]"}]}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.631377734473517*^9, 3.63137774280541*^9}, 
   3.631380967809053*^9, 3.63141161347192*^9, 3.631411701581244*^9, {
   3.631411873335599*^9, 3.63141189570128*^9}, 3.631412020618333*^9, 
   3.6315449458127403`*^9, 3.632414003080015*^9, 3.660827071702387*^9, 
   3.660827115893982*^9, 3.660827794469798*^9, 3.660828286293445*^9, 
   3.660830414021593*^9, 3.6608304693497562`*^9, 3.662212495554463*^9, 
   3.662212531145162*^9, 3.6655890639617023`*^9, 3.6655899248710318`*^9, 
   3.665589985862508*^9, 3.665590133448222*^9, 3.665591722999174*^9, 
   3.671131884498947*^9, 3.6795867360840263`*^9}]
}, Open  ]],

Cell[TextData[{
 "In solving the equations for the distal domain, we want ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to name the integration constants a different character (other than C), \
since these integration constants are different from the ones in the proximal \
domain."
}], "Text",
 CellChangeTimes->{{3.631377827025771*^9, 3.6313779103615828`*^9}, {
  3.660833313023114*^9, 3.6608333211909018`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solDist", "=", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"DSolve", "[", 
      RowBox[{"fullsystemDist", ",", 
       RowBox[{"m", "[", "x", "]"}], ",", 
       RowBox[{"{", "x", "}"}], ",", 
       RowBox[{"GeneratedParameters", "\[Rule]", "B"}]}], "]"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], "]"}], "//",
    "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.631377747555202*^9, 3.631377793484338*^9}, 
   3.631543849032558*^9, {3.66082756060994*^9, 3.6608275647246733`*^9}, {
   3.665589991793549*^9, 3.6655900231516333`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "\[Rule]", 
   RowBox[{"mB", " ", 
    RowBox[{"Csch", "[", 
     FractionBox[
      RowBox[{"L", "-", "xB"}], "\[Lambda]d"], "]"}], " ", 
    RowBox[{"Sinh", "[", 
     FractionBox[
      RowBox[{"L", "-", "x"}], "\[Lambda]d"], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6313777941303797`*^9, 3.6313779717648563`*^9, {3.631378378532745*^9, 
   3.631378406762882*^9}, 3.6313809731459417`*^9, 3.6314116174052258`*^9, 
   3.631544949472241*^9, 3.6324140061141443`*^9, 3.660827123114623*^9, 
   3.660827799062429*^9, 3.6608282983316603`*^9, 3.660830471798085*^9, 
   3.662212495792745*^9, 3.66221253135417*^9, 3.665589068690526*^9, 
   3.665590024105021*^9, 3.665590139767357*^9, 3.665591723340814*^9, 
   3.671131885022108*^9, 3.679586736564315*^9}]
}, Open  ]],

Cell["\<\
To avoid boundary effects at x == L, set L -> Infinity. Note that the \
solution in the distal domain becomes a simple decaying exponential.\
\>", "Text",
 CellChangeTimes->{{3.66559030967153*^9, 3.665590323503695*^9}, {
  3.665590371801057*^9, 3.665590392951483*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solDist", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"m", "[", "x", "]"}], "\[Rule]", " ", 
    RowBox[{"Limit", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"m", "[", "x", "]"}], "/.", "solDist"}], ",", 
      RowBox[{"L", "\[Rule]", "Infinity"}], ",", 
      RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], "]"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.665590326901379*^9, 3.665590351817038*^9}, {
  3.665590399385722*^9, 3.665590410879526*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "\[Rule]", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "x"}], "+", "xB"}], "\[Lambda]d"]], " ", "mB"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.665590354282394*^9, 3.6655904114430027`*^9, 
  3.66559172363061*^9, 3.671131885479192*^9, 3.679586736932445*^9}]
}, Open  ]],

Cell["\<\
Impose the \[OpenCurlyDoubleQuote]continuity \
condition\[CloseCurlyDoubleQuote] that the slopes of the solutions should be \
the same for both solProx and solDist at the interface boundary:\
\>", "Text",
 CellChangeTimes->{{3.631379677364821*^9, 3.6313797638986883`*^9}, {
   3.6313797964131193`*^9, 3.63137980654029*^9}, {3.631543882918483*^9, 
   3.631543885093951*^9}, {3.6315439178564*^9, 3.6315439293806887`*^9}, {
   3.660827145755774*^9, 3.660827166985861*^9}, {3.660833330814472*^9, 
   3.6608333347903023`*^9}, 3.6655901570595207`*^9, {3.6655901983686657`*^9, 
   3.665590218431744*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"continuityCondition", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"m", "[", "x", "]"}], "/.", "solProx"}], ",", "x"}], "]"}],
         "/.", 
        RowBox[{"x", "\[Rule]", "xB"}]}], ")"}], "\[Equal]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"m", "[", "x", "]"}], "/.", "solDist"}], ",", "x"}], "]"}],
         "/.", 
        RowBox[{"x", "\[Rule]", "xB"}]}], ")"}]}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.629022356684071*^9, 3.629022534060499*^9}, {
   3.629022613998651*^9, 3.629022664428019*^9}, {3.6290231676239433`*^9, 
   3.629023200644784*^9}, {3.629023273469759*^9, 3.6290232946014423`*^9}, {
   3.629023327217642*^9, 3.62902334811176*^9}, {3.631380779766631*^9, 
   3.631380800909424*^9}, {3.631543869935965*^9, 3.6315438957829857`*^9}, {
   3.660827172218967*^9, 3.660827182018536*^9}, {3.660827640992091*^9, 
   3.660827652741399*^9}, 3.66559014765094*^9, 3.66559019151202*^9, {
   3.665590244185863*^9, 3.66559026179517*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"j", " ", "\[Lambda]d", " ", "\[Lambda]p", " ", 
    RowBox[{"Sech", "[", 
     FractionBox["xB", "\[Lambda]p"], "]"}]}], "\[Equal]", 
   RowBox[{"mB", " ", 
    RowBox[{"(", 
     RowBox[{"\[Lambda]p", "+", 
      RowBox[{"\[Lambda]d", " ", 
       RowBox[{"Tanh", "[", 
        FractionBox["xB", "\[Lambda]p"], "]"}]}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.631380802941265*^9, 3.6313808803866262`*^9, 3.631381013580186*^9, 
   3.631411644862816*^9, 3.631411719396983*^9, {3.6314118876522007`*^9, 
   3.631411901464366*^9}, 3.6314120309735518`*^9, 3.6315449689687138`*^9, 
   3.632414026082358*^9, 3.66082718459004*^9, 3.660827815088176*^9, 
   3.6608283345490417`*^9, 3.6608304313826723`*^9, 3.660830493651491*^9, 
   3.662212498235244*^9, 3.662212533340911*^9, 3.665590230401232*^9, 
   3.665590267132991*^9, 3.66559041726544*^9, 3.665591724082138*^9, 
   3.671131885917469*^9, 3.679586737376617*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mBsol", " ", "=", " ", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{"continuityCondition", ",", "mB"}], "]"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], "]"}], "//",
    "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.665590478270772*^9, 3.665590515013134*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"mB", "\[Rule]", 
   FractionBox[
    RowBox[{"j", " ", "\[Lambda]d", " ", "\[Lambda]p", " ", 
     RowBox[{"Sech", "[", 
      FractionBox["xB", "\[Lambda]p"], "]"}]}], 
    RowBox[{"\[Lambda]p", "+", 
     RowBox[{"\[Lambda]d", " ", 
      RowBox[{"Tanh", "[", 
       FractionBox["xB", "\[Lambda]p"], "]"}]}]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.665590517324524*^9, 3.665591724142448*^9, 
  3.671131886089538*^9, 3.6795867375997477`*^9}]
}, Open  ]],

Cell["Substitute for \[OpenCurlyQuote]mB\[CloseCurlyQuote] in our \
solutions:", "Text",
 CellChangeTimes->{{3.631411758064568*^9, 3.631411784573884*^9}, {
  3.6655905827271*^9, 3.6655905950692263`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solProx", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m", "[", "x", "]"}], "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"m", "[", "x", "]"}], "/.", "solProx"}], "/.", "mBsol"}], 
       ")"}]}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.631411785686151*^9, 3.6314118610369053`*^9}, {
  3.631411918225636*^9, 3.6314119686526327`*^9}, {3.63154393924282*^9, 
  3.631543941932742*^9}, {3.6608276856247377`*^9, 3.6608276864688473`*^9}, {
  3.6608277237151318`*^9, 3.6608277246112537`*^9}, {3.665590604538381*^9, 
  3.665590605942511*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{"j", " ", "\[Lambda]p", " ", 
     RowBox[{"Sech", "[", 
      FractionBox["xB", "\[Lambda]p"], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Lambda]d", " ", 
        RowBox[{"Cosh", "[", 
         FractionBox[
          RowBox[{"x", "-", "xB"}], "\[Lambda]p"], "]"}]}], "-", 
       RowBox[{"\[Lambda]p", " ", 
        RowBox[{"Sinh", "[", 
         FractionBox[
          RowBox[{"x", "-", "xB"}], "\[Lambda]p"], "]"}]}]}], ")"}]}], 
    RowBox[{"\[Lambda]p", "+", 
     RowBox[{"\[Lambda]d", " ", 
      RowBox[{"Tanh", "[", 
       FractionBox["xB", "\[Lambda]p"], "]"}]}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.631411848365206*^9, 3.631411861778042*^9}, {
   3.6314119093210793`*^9, 3.6314119264767637`*^9}, 3.631411980104457*^9, 
   3.631412052710799*^9, 3.6315449923350687`*^9, 3.632414045264596*^9, 
   3.660827226062862*^9, 3.660827855186429*^9, 3.660828349197998*^9, 
   3.660828381577229*^9, 3.6608305077706003`*^9, 3.662212506521822*^9, 
   3.662212540463348*^9, 3.6655906093673143`*^9, 3.665591724399856*^9, 
   3.671131886311068*^9, 3.6795867378271112`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solDist", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m", "[", "x", "]"}], "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"m", "[", "x", "]"}], "/.", "solDist"}], "/.", "mBsol"}], 
       ")"}]}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.631412088490933*^9, 3.631412092334284*^9}, {
  3.63154394643644*^9, 3.6315439490927067`*^9}, {3.660827688020521*^9, 
  3.660827688636632*^9}, {3.66082772869823*^9, 3.660827729659587*^9}, {
  3.665590615722377*^9, 3.665590617598153*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "x"}], "+", "xB"}], "\[Lambda]d"]], " ", "j", " ", 
     "\[Lambda]d", " ", "\[Lambda]p", " ", 
     RowBox[{"Sech", "[", 
      FractionBox["xB", "\[Lambda]p"], "]"}]}], 
    RowBox[{"\[Lambda]p", "+", 
     RowBox[{"\[Lambda]d", " ", 
      RowBox[{"Tanh", "[", 
       FractionBox["xB", "\[Lambda]p"], "]"}]}]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.631412094051559*^9, 3.631544996420988*^9, 
  3.632414049740836*^9, 3.660827236575838*^9, 3.6608278778584414`*^9, 
  3.660828385849373*^9, 3.6608305125008497`*^9, 3.662212508162594*^9, 
  3.662212541965885*^9, 3.665590618701647*^9, 3.6655917246854362`*^9, 
  3.671131886548873*^9, 3.6795867380744543`*^9}]
}, Open  ]],

Cell[TextData[{
 "Note that, in the distal domain, the solution is simply a decaying \
exponential (similar to the solution of the model with uniform consumption) \
with decay length \[Lambda]d, since \[OpenCurlyQuote]x\[CloseCurlyQuote] only \
appears in the exponent of the exponential. The ",
 Cell[BoxData[
  FractionBox[
   RowBox[{"j", " ", "\[Lambda]d", " ", "\[Lambda]p", " ", 
    RowBox[{"Sech", "[", 
     FractionBox["xB", "\[Lambda]p"], "]"}]}], 
   RowBox[{"\[Lambda]p", "+", 
    RowBox[{"\[Lambda]d", " ", 
     RowBox[{"Tanh", "[", 
      FractionBox["xB", "\[Lambda]p"], "]"}]}]}]]],
  CellChangeTimes->{3.631412094051559*^9, 3.631544996420988*^9, 
   3.632414049740836*^9, 3.660827236575838*^9, 3.6608278778584414`*^9, 
   3.660828385849373*^9, 3.6608305125008497`*^9, 3.662212508162594*^9, 
   3.662212541965885*^9, 3.665590618701647*^9}],
 " term (=mB) is a constant and constitutes the amplitude of the \
exponential:"
}], "Text",
 CellChangeTimes->{{3.631412665198258*^9, 3.6314127927758703`*^9}, {
  3.660829992776515*^9, 3.6608300632865963`*^9}, {3.660830555965201*^9, 
  3.660830558627474*^9}, {3.660833349030417*^9, 3.660833350998172*^9}, {
  3.665590672368128*^9, 3.66559068635328*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"amplitudeDist", " ", "=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"mB", "\[Rule]", " ", 
       RowBox[{"m", "[", "x", "]"}]}], "/.", "solDist"}], "/.", 
     RowBox[{"x", "\[Rule]", "xB"}]}], "}"}], " ", "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.660830068611948*^9, 3.660830092781698*^9}, {
  3.660831346361713*^9, 3.660831362884268*^9}, {3.671106725236662*^9, 
  3.671106727032238*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"mB", "\[Rule]", 
   FractionBox[
    RowBox[{"j", " ", "\[Lambda]d", " ", "\[Lambda]p", " ", 
     RowBox[{"Sech", "[", 
      FractionBox["xB", "\[Lambda]p"], "]"}]}], 
    RowBox[{"\[Lambda]p", "+", 
     RowBox[{"\[Lambda]d", " ", 
      RowBox[{"Tanh", "[", 
       FractionBox["xB", "\[Lambda]p"], "]"}]}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.660830083823002*^9, 3.660830093598454*^9}, 
   3.660830538919804*^9, 3.66083136362687*^9, {3.662212518875938*^9, 
   3.662212544770817*^9}, 3.665590712817707*^9, 3.66559172479329*^9, 
   3.67113188663726*^9, 3.679586738163756*^9}]
}, Open  ]],

Cell["\<\
To calculate the amplitude of the gradient, consider solProx:\
\>", "Text",
 CellChangeTimes->{{3.6608301926274223`*^9, 3.660830204834281*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"amplitudeProx", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"m0", "\[Rule]", " ", 
        RowBox[{"m", "[", "x", "]"}]}], "/.", "solProx"}], "/.", 
      RowBox[{"x", "\[Rule]", "0"}]}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.660830207103462*^9, 3.6608302502451077`*^9}, 
   3.6608302833864527`*^9, {3.660830878253621*^9, 3.6608308936298513`*^9}, {
   3.660831311089518*^9, 3.6608313116492243`*^9}, {3.665590735993479*^9, 
   3.6655907480574617`*^9}, {3.6711067375646276`*^9, 3.6711067378255568`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"m0", "\[Rule]", 
   FractionBox[
    RowBox[{"j", " ", "\[Lambda]p", " ", 
     RowBox[{"(", 
      RowBox[{"\[Lambda]d", "+", 
       RowBox[{"\[Lambda]p", " ", 
        RowBox[{"Tanh", "[", 
         FractionBox["xB", "\[Lambda]p"], "]"}]}]}], ")"}]}], 
    RowBox[{"\[Lambda]p", "+", 
     RowBox[{"\[Lambda]d", " ", 
      RowBox[{"Tanh", "[", 
       FractionBox["xB", "\[Lambda]p"], "]"}]}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.660830216454768*^9, 3.660830250989676*^9}, 
   3.660830284476961*^9, 3.660830567345684*^9, 3.660830894205182*^9, 
   3.660831317020891*^9, {3.66221251895776*^9, 3.662212544830241*^9}, 
   3.665590748934266*^9, 3.665591724924057*^9, 3.671131886785022*^9, 
   3.6795867383140697`*^9}]
}, Open  ]],

Cell["\<\
To determine whether the amplitude of the gradient is predicted to increase \
or decrease as the location of the interface boundary \[OpenCurlyQuote]xB\
\[CloseCurlyQuote] is changed, calculate the derivative of the amplitude with \
respect to xB:\
\>", "Text",
 CellChangeTimes->{{3.660830979703198*^9, 3.660831029294779*^9}, {
  3.6608312171863527`*^9, 3.660831226322102*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dm0dxB", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"m0", "/.", "amplitudeProx"}], ",", "xB"}], "]"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6608306536257353`*^9, 3.6608306591342993`*^9}, {
  3.6608307263993053`*^9, 3.6608307494132357`*^9}, {3.6608308978249817`*^9, 
  3.660830922387435*^9}, {3.660831314217535*^9, 3.660831314744844*^9}, {
  3.662212186820086*^9, 3.6622121995457563`*^9}, {3.662212333886526*^9, 
  3.662212339747151*^9}, {3.6655907630410213`*^9, 3.665590771944545*^9}, {
  3.671106754612089*^9, 3.67110675959179*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"j", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[Lambda]d", "2"]}], "+", 
     SuperscriptBox["\[Lambda]p", "2"]}], ")"}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Lambda]p", " ", 
      RowBox[{"Cosh", "[", 
       FractionBox["xB", "\[Lambda]p"], "]"}]}], "+", 
     RowBox[{"\[Lambda]d", " ", 
      RowBox[{"Sinh", "[", 
       FractionBox["xB", "\[Lambda]p"], "]"}]}]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{
  3.660830659810011*^9, 3.6608307516885242`*^9, {3.660830903983987*^9, 
   3.660830922976112*^9}, 3.660831319251871*^9, {3.662212519067095*^9, 
   3.662212544922072*^9}, 3.665590772870397*^9, 3.66559172507629*^9, 
   3.6711318869142323`*^9, 3.679586738469363*^9}]
}, Open  ]],

Cell[TextData[{
 "The denominator, ",
 Cell[BoxData[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Lambda]p", " ", 
      RowBox[{"Cosh", "[", 
       FractionBox["xB", "\[Lambda]p"], "]"}]}], "+", 
     RowBox[{"\[Lambda]d", " ", 
      RowBox[{"Sinh", "[", 
       FractionBox["xB", "\[Lambda]p"], "]"}]}]}], ")"}], "2"]],
  CellChangeTimes->{
   3.660830659810011*^9, 3.6608307516885242`*^9, {3.660830903983987*^9, 
    3.660830922976112*^9}}],
 ", is always positive due to the squaring. The numerator is positve when \
\[Lambda]p > \[Lambda]d , and negative when \[Lambda]p < \[Lambda]d. Thus, \
when \[Lambda]p > \[Lambda]d, the amplitude of the gradient increases \
monotonically as the location of the interface boundary \[OpenCurlyQuote]xB\
\[CloseCurlyQuote] increases. Show that the amplitude of the gradient \
asymptotes for large values of \[OpenCurlyQuote]xB\[CloseCurlyQuote] by \
showing that the derivative tends to zero:"
}], "Text",
 CellChangeTimes->{{3.660831041447296*^9, 3.660831043454475*^9}, {
  3.660831079402073*^9, 3.660831238826304*^9}, {3.660833486015459*^9, 
  3.660833488580565*^9}, {3.6622123981176577`*^9, 3.6622124615301228`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{"dApdxB", ",", 
   RowBox[{"xB", "\[Rule]", "Infinity"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.661875206550831*^9, 3.661875220338622*^9}, {
   3.661875263790505*^9, 3.661875272584643*^9}, {3.661875327826828*^9, 
   3.661875363857655*^9}, {3.662212207812793*^9, 3.6622122163951893`*^9}, 
   3.6622123489128036`*^9}],

Cell[BoxData["dApdxB"], "Output",
 CellChangeTimes->{
  3.6618753654262323`*^9, {3.662212519223085*^9, 3.662212544991151*^9}, 
   3.665590782861558*^9, 3.6655917252402983`*^9, 3.671131886933837*^9, 
   3.679586738548774*^9}]
}, Open  ]],

Cell["\<\
Obtain some replacement rules so that we can substitute for the amplitudes in \
\[OpenCurlyQuote]solProx\[CloseCurlyQuote] and \[OpenCurlyQuote]solDist\
\[CloseCurlyQuote]\
\>", "Text",
 CellChangeTimes->{{3.6608314914754553`*^9, 3.6608315260659637`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"amplitudeDistRR", "=", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"mB", "\[Equal]", 
        RowBox[{"(", 
         RowBox[{"mB", "/.", "amplitudeDist"}], ")"}]}], ",", "j"}], "]"}], 
     ",", 
     RowBox[{"Assumptions", "\[Rule]", " ", "parameterConstraints"}]}], "]"}],
    "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.660831529337019*^9, 3.660831562651535*^9}, {
  3.6608316606249523`*^9, 3.6608316801998053`*^9}, {3.660831788804934*^9, 
  3.66083178935961*^9}, {3.665590815682212*^9, 3.6655908486962843`*^9}, {
  3.671106785450458*^9, 3.671106790175187*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"j", "\[Rule]", 
   RowBox[{
    FractionBox[
     RowBox[{"mB", " ", 
      RowBox[{"Cosh", "[", 
       FractionBox["xB", "\[Lambda]p"], "]"}]}], "\[Lambda]d"], "+", 
    FractionBox[
     RowBox[{"mB", " ", 
      RowBox[{"Sinh", "[", 
       FractionBox["xB", "\[Lambda]p"], "]"}]}], "\[Lambda]p"]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.660831554869872*^9, 3.660831563972126*^9}, {
   3.6608316688814983`*^9, 3.6608316811024027`*^9}, 3.6608317980973988`*^9, {
   3.662212519310465*^9, 3.6622125450680037`*^9}, 3.6655908496312723`*^9, 
   3.665591725342121*^9, 3.671131887142742*^9, 3.67958673864039*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"amplitudeProxRR", "=", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"m0", "\[Equal]", 
        RowBox[{"(", 
         RowBox[{"m0", "/.", "amplitudeProx"}], ")"}]}], ",", "j"}], "]"}], 
     ",", 
     RowBox[{"Assumptions", "\[Rule]", " ", "parameterConstraints"}]}], "]"}],
    "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.660831571110574*^9, 3.660831591794084*^9}, {
  3.660831705736559*^9, 3.660831708984201*^9}, {3.660831794236614*^9, 
  3.660831794822502*^9}, {3.6655908592490797`*^9, 3.665590878295438*^9}, {
  3.671106796091592*^9, 3.6711067999912024`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"j", "\[Rule]", 
   FractionBox[
    RowBox[{"m0", " ", 
     RowBox[{"(", 
      RowBox[{"\[Lambda]p", "+", 
       RowBox[{"\[Lambda]d", " ", 
        RowBox[{"Tanh", "[", 
         FractionBox["xB", "\[Lambda]p"], "]"}]}]}], ")"}]}], 
    RowBox[{"\[Lambda]p", " ", 
     RowBox[{"(", 
      RowBox[{"\[Lambda]d", "+", 
       RowBox[{"\[Lambda]p", " ", 
        RowBox[{"Tanh", "[", 
         FractionBox["xB", "\[Lambda]p"], "]"}]}]}], ")"}]}]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.660831594225546*^9, 3.660831709820429*^9, 3.660831800000896*^9, {
   3.662212519430902*^9, 3.6622125451480217`*^9}, 3.665590879097309*^9, 
   3.6655917254801188`*^9, 3.671131887301443*^9, 3.67958673879688*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"amplitudeDist", "/.", "amplitudeProxRR"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.665594338575385*^9, 3.665594423827908*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"mB", "\[Rule]", 
   FractionBox[
    RowBox[{"m0", " ", "\[Lambda]d", " ", 
     RowBox[{"Sech", "[", 
      FractionBox["xB", "\[Lambda]p"], "]"}]}], 
    RowBox[{"\[Lambda]d", "+", 
     RowBox[{"\[Lambda]p", " ", 
      RowBox[{"Tanh", "[", 
       FractionBox["xB", "\[Lambda]p"], "]"}]}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.665594340883522*^9, 3.665594363582079*^9}, 
   3.6655944245740757`*^9, 3.6711318873463078`*^9, 3.679586738844326*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solProx", " ", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m", "[", "x", "]"}], "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"m", "[", "x", "]"}], "/.", "solProx"}], "/.", 
        "amplitudeProxRR"}], ")"}]}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.660831625816152*^9, 3.660831686696406*^9}, {
  3.6608318724633207`*^9, 3.6608318893725452`*^9}, {3.66559089899256*^9, 
  3.665590924327525*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{"m0", " ", 
     RowBox[{"Sech", "[", 
      FractionBox["xB", "\[Lambda]p"], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Lambda]d", " ", 
        RowBox[{"Cosh", "[", 
         FractionBox[
          RowBox[{"x", "-", "xB"}], "\[Lambda]p"], "]"}]}], "-", 
       RowBox[{"\[Lambda]p", " ", 
        RowBox[{"Sinh", "[", 
         FractionBox[
          RowBox[{"x", "-", "xB"}], "\[Lambda]p"], "]"}]}]}], ")"}]}], 
    RowBox[{"\[Lambda]d", "+", 
     RowBox[{"\[Lambda]p", " ", 
      RowBox[{"Tanh", "[", 
       FractionBox["xB", "\[Lambda]p"], "]"}]}]}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.660831645954833*^9, 3.660831687579692*^9, 3.660831803380323*^9, {
   3.660831883285267*^9, 3.6608318899860363`*^9}, {3.662212519604151*^9, 
   3.662212545250762*^9}, {3.665590884682929*^9, 3.665590909323421*^9}, 
   3.665591725658216*^9, 3.671131887467969*^9, 3.679586738973296*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solDist", " ", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m", "[", "x", "]"}], "\[Rule]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"m", "[", "x", "]"}], "/.", "solDist"}], "/.", 
         "amplitudeDistRR"}], "//", "FullSimplify"}], ")"}]}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.660831719307577*^9, 3.660831744956971*^9}, {
  3.6608318936367607`*^9, 3.66083191212376*^9}, {3.665590928520892*^9, 
  3.665590940807477*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "\[Rule]", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "x"}], "+", "xB"}], "\[Lambda]d"]], " ", "mB"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6608317242240887`*^9, 3.660831745646392*^9}, 
   3.660831811400703*^9, 3.660831913125948*^9, {3.662212519648988*^9, 
   3.662212545286686*^9}, 3.665590894953803*^9, 3.665590941851542*^9, 
   3.665591725741034*^9, 3.671131887538595*^9, 3.679586739041664*^9}]
}, Open  ]],

Cell["\<\
Now, combine \[OpenCurlyQuote]solProx\[CloseCurlyQuote] and \
\[OpenCurlyQuote]solDist\[CloseCurlyQuote] to make the full solution. Use the \
\[OpenCurlyQuote]UnitStep\[CloseCurlyQuote] function to specify that \
\[OpenCurlyQuote]solProx\[CloseCurlyQuote] should be used for x < xB, and \
\[OpenCurlyQuote]solDist\[CloseCurlyQuote] for x > xB\
\>", "Text",
 CellChangeTimes->{{3.631412815341421*^9, 3.631412904195792*^9}, {
  3.63141296680059*^9, 3.631412997575233*^9}, {3.660831834701891*^9, 
  3.660831865395389*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fullsol", " ", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"m", "[", "x", "]"}], "\[Rule]", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m", "[", "x", "]"}], "/.", "solProx"}], ")"}], 
        RowBox[{"UnitStep", "[", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"x", "-", "xB"}], ")"}]}], "]"}]}], " ", "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m", "[", "x", "]"}], "/.", "solDist"}], ")"}], 
        RowBox[{"UnitStep", "[", 
         RowBox[{"x", "-", "xB"}], "]"}]}]}]}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", " ", "parameterConstraints"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.631413039465444*^9, 3.6314130439481897`*^9}, {
  3.631413075124384*^9, 3.631413137066647*^9}, {3.63154396757021*^9, 
  3.631543972148044*^9}, {3.63241408718513*^9, 3.632414094395665*^9}, {
  3.660830316745606*^9, 3.660830328147146*^9}, {3.665590953515542*^9, 
  3.665590979098675*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "\[Rule]", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "x"}], "+", "xB"}], "\[Lambda]d"]], " ", "mB", " ", 
     RowBox[{"UnitStep", "[", 
      RowBox[{"x", "-", "xB"}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"m0", " ", 
      RowBox[{"Sech", "[", 
       FractionBox["xB", "\[Lambda]p"], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Lambda]d", " ", 
         RowBox[{"Cosh", "[", 
          FractionBox[
           RowBox[{"x", "-", "xB"}], "\[Lambda]p"], "]"}]}], "-", 
        RowBox[{"\[Lambda]p", " ", 
         RowBox[{"Sinh", "[", 
          FractionBox[
           RowBox[{"x", "-", "xB"}], "\[Lambda]p"], "]"}]}]}], ")"}], " ", 
      RowBox[{"UnitStep", "[", 
       RowBox[{
        RowBox[{"-", "x"}], "+", "xB"}], "]"}]}], 
     RowBox[{"\[Lambda]d", "+", 
      RowBox[{"\[Lambda]p", " ", 
       RowBox[{"Tanh", "[", 
        FractionBox["xB", "\[Lambda]p"], "]"}]}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.66559098289694*^9, 3.6655917283874903`*^9, 
  3.671131890598762*^9, 3.679586742087228*^9}]
}, Open  ]],

Cell["We can put the solution into a more readable form:", "Text",
 CellChangeTimes->{{3.6314146901158943`*^9, 3.6314147036896563`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "/.", "fullsol"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.6314147080481787`*^9, 3.6314147155569677`*^9}, {
  3.631543975279833*^9, 3.631543975587648*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"m0", " ", 
     TemplateBox[{RowBox[{
         RowBox[{"xB", "-", "x"}]}]},
      "UnitStepSeq"], " ", 
     RowBox[{"sech", "(", 
      FractionBox["xB", "\[Lambda]p"], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Lambda]d", " ", 
        RowBox[{"cosh", "(", 
         FractionBox[
          RowBox[{"x", "-", "xB"}], "\[Lambda]p"], ")"}]}], "-", 
       RowBox[{"\[Lambda]p", " ", 
        RowBox[{"sinh", "(", 
         FractionBox[
          RowBox[{"x", "-", "xB"}], "\[Lambda]p"], ")"}]}]}], ")"}]}], 
    RowBox[{"\[Lambda]d", "+", 
     RowBox[{"\[Lambda]p", " ", 
      RowBox[{"tanh", "(", 
       FractionBox["xB", "\[Lambda]p"], ")"}]}]}]], "+", 
   RowBox[{"mB", " ", 
    TemplateBox[{RowBox[{
        RowBox[{"x", "-", "xB"}]}]},
     "UnitStepSeq"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{"xB", "-", "x"}], "\[Lambda]d"]]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.665591002922481*^9, 3.665591728502438*^9, 
  3.671131890906413*^9, 3.679586742442533*^9}]
}, Open  ]],

Cell["Plot the solution for a certain set of parameter values:", "Text",
 CellChangeTimes->{{3.631413187283764*^9, 3.631413202873645*^9}, {
  3.631413506847341*^9, 3.631413568911563*^9}, {3.660831945084776*^9, 
  3.660831946315607*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"parameters", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Lambda]p", "\[Rule]", "0.5"}], ",", 
    RowBox[{"\[Lambda]d", "\[Rule]", "0.1"}], ",", 
    RowBox[{"xB", "\[Rule]", "1"}], ",", 
    RowBox[{"j", "\[Rule]", "1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6314132067520514`*^9, 3.6314132405522137`*^9}, {
   3.631413302205715*^9, 3.631413342109318*^9}, {3.631544004000416*^9, 
   3.631544004242762*^9}, {3.660830343455761*^9, 3.660830348328064*^9}, {
   3.6608303793119583`*^9, 3.660830386873353*^9}, 3.660832113633852*^9, {
   3.660832179616187*^9, 3.660832184397065*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Lambda]p", "\[Rule]", "0.5`"}], ",", 
   RowBox[{"\[Lambda]d", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"xB", "\[Rule]", "1"}], ",", 
   RowBox[{"j", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.631413233236693*^9, 3.631413241139497*^9}, {
   3.63141330297511*^9, 3.631413342725215*^9}, 3.631545030257361*^9, 
   3.660830349364171*^9, 3.660830387182138*^9, 3.6608319780550137`*^9, 
   3.660832115367907*^9, 3.660832185182259*^9, 3.660832920714107*^9, {
   3.662212522108499*^9, 3.662212547026773*^9}, 3.665591028762927*^9, 
   3.665591728558774*^9, 3.6711318909246492`*^9, 3.6795867424679327`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"m0", " ", 
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "/", "\[Lambda]p"}], ")"}]}]}], "/.", 
       "amplitudeProx"}], "/.", "parameters"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"m", "[", "x", "]"}], "/.", "fullsol"}], "/.", 
        "amplitudeProx"}], "/.", "amplitudeDist"}], "/.", "parameters"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.63141324300981*^9, 3.6314132786269493`*^9}, {
  3.631413369662136*^9, 3.6314134986773357`*^9}, {3.631543982488124*^9, 
  3.631543990963126*^9}, {3.660830358561482*^9, 3.66083036846355*^9}, {
  3.660831957019074*^9, 3.66083197421345*^9}, {3.660832817903174*^9, 
  3.6608328792341137`*^9}, {3.6711068397200336`*^9, 3.671106840030552*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVzHk4lAkAx3GaZ6McWWU0PUqDVCbpGfSsFj/acjbtMoqNLZGpFrE6Nq2t
vG/TsSTC5EqYkAiTDivHxJR0uEVhZkjKFclRGt5t//g+n/++TL8Q94B5SkpK
nG/9r0vA+ybxQIAt7YoGz3uTDO8Kd/rJGFvQKI6xjdkgA12tLaaE4QHtk8km
EmMZ1lstyb7K2IcfHEOsrBbLsKnRvPgy4whsdYx1nYalEKfWWF5knEHqkIZi
Ol0KMjLq+D+MBMjc+h8lz5di35FRxgXGdXg7OxqIpF1QTXDOHPt4ByHWVpez
yNe438h2dFxRhcrb+jbqf3fAi+x6XRMlwSHauGB57kuEiA6bJk3UYSSswoXR
1Irx2JdPlJUb0KBwaZJbt+DJw8dVDdbNoGYeqPjkNeFguLPGr8Ot6DbkGO+1
acTDBWyqILgdgfpSlRzVeuQIJXPLVr2Gw6bVlb2CZ7CjV2RxC7swfavjvjii
Dqa1XaWPTWSosNycMj+xFq123A95H+S4q8vSmC14hKCFgc1tG3phny/i2S+Q
4FmHZ4VmzBuw7Du/LOJVg+vg1dPX14e4RbMH5ENibMyI8sww6kfG/rIzZpwq
yOfiWw+ceofy4Tc6RdXleOvcIKTXvMec6nGBfXwZipNl4U3MQfxJ9z09sa8U
2edpF9aeGIIei7n09+B7mPTfNch7MIzA2bOeO8rvQG3LWXeR7gesiri0+qpa
CSK03qr3+IwijM4cOnVFBPVKllI7ZwxZvoTIwaEYNsd+nq2ZGYNqTkZ998At
pF2PFhqmfURtQ3JpenY+du+weLHAdRyvpJmLnPzycLctIL5yahxhSfEnCzxz
YfW8eF6/4BNm3NjdpoJsrNzKm4zfMoEeVqJZZ6sQlhaWcXf6J+Ah3K532D0L
svGLdUL+JPJoLvKNExkYNnfjM9hT6H16SO7PugbjIdNB5ZYpjGSKzh9tTIPE
6GhzaOQ0OlnXV5sfS8Gl1jZ/d6PPIFPESZzQJIxyxXHzJJ/h+sV4mpYqwO0d
Oj9Z/fEFujzlTNGjBAhfkFd7tWfgZrFVazE7HtO1Pn9pV8/AS3ZLxr4WB3lc
1aTWoa+4VFK8p9E8FlNNPzIITQWe+vJaoqYuIjTBQBxersDYTudXcn4UdF8Y
aPXtnsVz5vgSUdAFcNsKFHpzswitYJ9v55/D+J7MoK6bc8i19maWp/NR5VvE
19xGIfG5ikn9VxJlDUGu0u0U3u7pDa2bIHHP1uT7QjcKn2iS9bUjJAr0stM4
nhQ6OcbqT2UkUjpSSqL9KGwWWFuO1JA4+svZnoXhFCI9vE/fiCbBsvvNRiWH
gvPwcZURfRLGRcto7TcouKZkn7NkkDBY0fEkJ5/C6Joy/9PaJJYq3D0cRBRC
6l3WLf+OxPxSp0B+OYXbzwbehQ0S6DGzSKa1UAheqekWc5dAV/rH3S1tFOjc
0XWKQgIdGkVGwg4K3ueSPYNuEKgfWlu8WUpB10lNwE0lUJ6rXxs5QCHPR5Jh
E0mglN4d7TZMYWODa1fFCQIl/BR35igFPdc1vnZHCNz015GKJyiYVefbbNtP
ILu5WRg7TYFh+G9imy+BDPvYg74zFFK93rP37iKQVswx2zD77eccvGSUS+CK
vtokRVFgGkZYneIQ+A98vW27
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 2}, {1.0116827331218645`*^-6, 0.4879368301975406}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.631413260565483*^9, 3.631413346042658*^9}, 
   3.631413419986884*^9, {3.631413452776965*^9, 3.631413499444503*^9}, 
   3.631545034000929*^9, {3.6608303514827423`*^9, 3.660830389506144*^9}, 
   3.6608320115135937`*^9, 3.6608321206196213`*^9, 3.6608321870723677`*^9, {
   3.6608328509829273`*^9, 3.660832879945549*^9}, 3.6608329345129538`*^9, {
   3.662212522259613*^9, 3.6622125471231413`*^9}, 3.665591031978421*^9, 
   3.665591728681858*^9, 3.671131891706531*^9, 3.6795867425810337`*^9}]
}, Open  ]],

Cell["\<\
As a sanity check, the solution should match the exponential when \[Lambda]p \
== \[Lambda]d\
\>", "Text",
 CellChangeTimes->{{3.631413572312313*^9, 3.631413594701845*^9}, {
  3.660832976544895*^9, 3.660832980064014*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"parameters", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Lambda]p", "\[Rule]", "0.5"}], ",", 
    RowBox[{"\[Lambda]d", "\[Rule]", "0.5"}], ",", 
    RowBox[{"xB", "\[Rule]", "1"}], ",", 
    RowBox[{"j", "\[Rule]", "1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6314132067520514`*^9, 3.6314132405522137`*^9}, {
   3.631413302205715*^9, 3.631413342109318*^9}, {3.631544004000416*^9, 
   3.631544004242762*^9}, {3.660830343455761*^9, 3.660830348328064*^9}, {
   3.6608303793119583`*^9, 3.660830386873353*^9}, 3.660832113633852*^9, {
   3.660832179616187*^9, 3.660832184397065*^9}, {3.660833000559023*^9, 
   3.6608330008236923`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Lambda]p", "\[Rule]", "0.5`"}], ",", 
   RowBox[{"\[Lambda]d", "\[Rule]", "0.5`"}], ",", 
   RowBox[{"xB", "\[Rule]", "1"}], ",", 
   RowBox[{"j", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.631413233236693*^9, 3.631413241139497*^9}, {
   3.63141330297511*^9, 3.631413342725215*^9}, 3.631545030257361*^9, 
   3.660830349364171*^9, 3.660830387182138*^9, 3.6608319780550137`*^9, 
   3.660832115367907*^9, 3.660832185182259*^9, 3.660832920714107*^9, 
   3.660833001249838*^9, {3.6622125222907677`*^9, 3.662212547138134*^9}, 
   3.665591043207344*^9, 3.6655917287271423`*^9, 3.6711318918741493`*^9, 
   3.679586742616996*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"m0", " ", 
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "/", "\[Lambda]p"}], ")"}]}]}], "/.", 
       "amplitudeProx"}], "/.", "parameters"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"m", "[", "x", "]"}], "/.", "fullsol"}], "/.", 
        "amplitudeProx"}], "/.", "amplitudeDist"}], "/.", "parameters"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.63141324300981*^9, 3.6314132786269493`*^9}, {
  3.631413369662136*^9, 3.6314134986773357`*^9}, {3.631543982488124*^9, 
  3.631543990963126*^9}, {3.660830358561482*^9, 3.66083036846355*^9}, {
  3.660831957019074*^9, 3.66083197421345*^9}, {3.660832817903174*^9, 
  3.6608328792341137`*^9}, {3.671106850455824*^9, 3.67110685072635*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVj3k0FHgAxydthxzJC02slsS6Sq5dpC+tI8m2jbNLIjU2pZ7sNm1t28zw
cq5zc26YGW0SSmSjkAkdwphxJWNKKWSGDCX8tv3j8z7/fd776AVH0EIVKBSK
1xf+947Qtx3170K3nv3dTEiIGMOlfsFiqgsSVlpyp+RiaCqJkiqoPqiOs8sZ
GxVjo91qXh71MN6H7Jl93S2GfbtVeSr1NKiULYcWysSoz2m0SaSyIfOLl/OD
xGBdjD8TR02HlvZBeiF/AIdPS6mxVC4kEe+n6BkvsDzdo0A2cRsro7sLT5k+
x512S3d33ToUaz83UlzTiwBWf19jPB+Dloo7z9l2I+JmpHnm1CN4Csyce31E
mEzualm0qA32DtKowqpOtDQ01bVtEeDO951P1lMFCGN4qOwZE+Lu6VR3Y247
GhQtScnxblDsgvJrmp6hiMNfWLuhDx/yH4kvuD6Fk+a9Qu/SfjwU6pOVuo9h
3txf3WQiRsS8m7K7SQuETt7j18YHMVprUmFm24TwFccEIouXaKc5J6pd4uNJ
j/891aRXeOzUpsTsewBvtwDJ0NAQ6EyG9KNfA2zz4/3zDd4gsbo2iadYj8GF
NCH9wjDcj5rxKs/cw2uPNo5m41sYMqTsSIcalGeJGR16I+j6ECwNINXgXVoc
a3x2FNuufZu773MV5CF7R47UjMFv+DtJCiqh5BJDu6k1js9ODyhG7AqcU3ut
LNkvhS1xLOpaegvK900p3V4ypPmE6rnfKIfjL7vmG2dlyJGoZlhcLUUuN4Gz
PncCh6KMtLN8ShDoa92q6DmJQ9Z+rVKFYlSKQtPuT08iw3cvlz56FXZPyxXe
/PUBGSFiw1bdInzjekSe5jKFeCvfikAaFzbWNim330zBtUZHJaypEOLJxEec
aDl+Des1ZR8swJjV7miq5TRy9VvSr8muwHDUfGRR5zRO9Y67dcbkgW8QJTh5
cQa9HD2LG1/n4E+hKIRm8BH3R4z7Pq3IgtS7PkWB/xFujTQtTZPLuOWr8YPd
qU/417CbbuyRAU4rK++l+izieEd9kq+nYaZ5/2/qD2YxLKP43lVNxWBKnVzt
xGc40fKm92UnY7rDgcpUnUPmhKx34+0knEzXr2fUzqHhK2V/desEaLXqqw0F
zmPZ4bzKbJU4eItK5nQW5rE5dnDwztpLmDxYEN5fvADtEJeUFKMY1AWVRavu
JHAM2G6x/Swbd9vCPQd+JIhkcpW0Itmo2mqyqnQ3QXBMwfG3x9go0eHlevkT
7FCYbEg9wEZ2T3ZFQjCBZ4xx2hJnNqJ+ipGsYBDEdfWrhyxnw9TpgOOyIgI6
4+GJmUwWDMvWLu7+h6BKzzpcI5UFfd2elqLrBOpPzwht4llYM0fzcbtJcEVj
3cvz51lYWr39WHQtwXipWZ9JMAuSTdZZizsJGFmlf8yYstD/90Rgp4hgF2db
k8MGFnpUygw4PQQdD+3DmLosPBs1Lt82QLB5wxK+5ioWaq+ua774jsBjV2fl
vmkmqjVfJOwe+/K72r/tlpSJiuhsmp6U4IZ+IZTfMVEcojFQP0XwyspVr+k5
EzyBgJM8Q2B/7lOyoYiJfOfksKBZAp1Mc5/YZ0zklnttspj/0g9W+3m8mYnL
65TkhBAsLLR3+DYw8R+7c28k
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVjn04FHYAxy+tlrwkC11MIzFvZV5qUn0pLynWOuelN9ld6iy9eLB1TWvd
HU/yMq/L64ZzWiWUyBOFXEcr4dx1SM41pZBDjhJ+a398ns9/n+djwjhJC1Wj
UCi+n/jfO0NfdzS8Cd0a86uNhBA5BssCGHKqO5KW2RdPquTQ15AmV1LpqLno
nDsyLMc65xWCfOphvGXunXkpk2NTu0NFGjUKRpTNP8yXy9GQ2+SUROVhPCBB
JQyRg3s+4fRFagaohodYRcI+HI5SUuOpxRg4+XaSlfkcSzK8C8fGb2FZrKwo
wvoZbrfbe3kZ16PU8JmF+spuBHF7e5oShFDYq/vEbJDh5I1I26zJh/AR27h1
06WYSHnasmBBG1xclNFF1Z1oaRTVt20W4/a3nY/WUMUIY3tr7R2RoC4qzcuy
uB2N6vak9LgMas4hBbWiJyjhC+dXre2BquCh/JzHY7jq3y3yK+uFSGJKlhn/
A9vm3hqRlRwRc56aXlYtkLj6jV4Z7cdInVWlzQYRwpceE0vtXqCd5pakc0GI
R12Bd7WT/8Uj1zYNTs99+HkGKQYGBsDisJXvAxqxoSAhsMDsFZJq6pIF6g3o
n0+XsM4NwvuojaDq9F289G7j6ze9hgVbyYt0qUVFtpzdYTIE2TuGMojUQHBh
YbzlmWFsv/J13v6P1VAx9w0dqR1B4OBGRSqqoOEeR7thMIpZ1/sUC14lYnRe
aioOKLGRbCl5uvgmNO9ZU2S+Y8igh5p4Xa/Alp92zzXNjCFXoZ1pd7kMecWJ
/DV542BEWxhm00sR7O/Yqr5rAgzHgFal2lVUSUPT701NINN/XzFr+DKcH1eo
vfrjHTKZcvNW4xJ85XFEle4+iUQH/8pgWjGcHJ1Sb72ahEetkVaYqAjyiaSH
/FgVfg7rtuYdKsSIw55Yqv0U8k1bMq6M/QXzYduhBZ1TiOge9eyMy4fQLFp8
6vw0evgmdte/zMXvEimTZvYe9UOWPR+WZkPp15CqJnwPryaagb7VJdz019vu
HPEBd8xlLEvvTPBbufkvdGeQIDhKT7mWjunmA7/o3p/B4BjF/452GvpT61U6
Jz7CjZY/tT8nBVMdLlSO9iyyxse6191KxqkM0wZ23SwaP9MM1HVMhEGrqc5A
8ByWHM6vytG6CD9p6azR/Bzs4/v7b6+6gIlDheG9V+dhyHRPTbWIQ31Ieay2
D8HWoB12O87wcKctfFffdwRRnGINg0geqrdaLS/bQ8CIKzz++hgPpUaCPN9A
gp1qE41pB3nI6cqpTGQQ+MRZpi9y4yH6+zjFUjZBwtNeXeYSHqxdD275vISA
xX5wYjqLC/PyVQtlfxNUmziG66VxYWrc1VJyjeCLx6clTglcrJyl0T1vEBTo
rX5x9iwXi2t2HIutIxgts+mxYnChWO+YvbCT4Ex22W/T1lz0/jke3Ckl2M3f
JnJZy0WXVrkZv4tA/GBTGMeYiyfDlhXb+gi+WbtIqL+ci7rLq5vPv/n0v7uz
av8UBzX6zxP3jBBErghsu6nkoDI2h2aiJLhuWgTNNxxcZer1NUwSDDh4mIie
cSAQi/kp0wSbYj6kmEs5KHBLCQuZITDKsqXHP+Egr8J3vd3cpz5D58fRZg4u
rdZQEUJA5ts7/Bs5+A9tem9h
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 2}, {0.009157820191944218, 0.49999995918367524`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.631413260565483*^9, 3.631413346042658*^9}, 
   3.631413419986884*^9, {3.631413452776965*^9, 3.631413499444503*^9}, {
   3.631413619847623*^9, 3.6314136250858727`*^9}, 3.631545051813198*^9, 
   3.660833017603593*^9, {3.662212522370873*^9, 3.6622125471945972`*^9}, 
   3.66559104517208*^9, 3.6655917288135967`*^9, 3.671131891920568*^9, 
   3.679586742669094*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sensitivity analyses", "Section",
 CellChangeTimes->{{3.671133751009184*^9, 3.6711337768588533`*^9}}],

Cell["\<\
To perform sensitivity analyses let\[CloseCurlyQuote]s solve for the location \
\[OpenCurlyQuote]xB\[CloseCurlyQuote] as a function of all other parameters, \
using the continuity condition above. First, let\[CloseCurlyQuote]s replace \
the flux \[OpenCurlyQuote]j\[CloseCurlyQuote] with the gradient amplitude \
\[OpenCurlyQuote]m0\[CloseCurlyQuote], so that we can specify uniform \
consumption and two-domain models having the same amplitudes. This doesn\
\[CloseCurlyQuote]t effect our results, since, for both the uniform \
consumption and two-domain gradients, \[OpenCurlyQuote]m0\[CloseCurlyQuote] \
is linearly proportional \[OpenCurlyQuote]j\[CloseCurlyQuote], and so the \
sensitivity of the gradient to variations in \[OpenCurlyQuote]m0\
\[CloseCurlyQuote] is identical to that to variations in \[OpenCurlyQuote]j\
\[CloseCurlyQuote].\
\>", "Text",
 CellChangeTimes->{{3.671133770834844*^9, 3.671133842655583*^9}, {
  3.671133884265458*^9, 3.671133970205274*^9}, {3.67113413573595*^9, 
  3.671134206146185*^9}, {3.671134518471901*^9, 3.6711346478612823`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["continuityCondition"], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"j", " ", "\[Lambda]d", " ", "\[Lambda]p", " ", 
    RowBox[{"Sech", "[", 
     FractionBox["xB", "\[Lambda]p"], "]"}]}], "\[Equal]", 
   RowBox[{"mB", " ", 
    RowBox[{"(", 
     RowBox[{"\[Lambda]p", "+", 
      RowBox[{"\[Lambda]d", " ", 
       RowBox[{"Tanh", "[", 
        FractionBox["xB", "\[Lambda]p"], "]"}]}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.671134664110437*^9, 3.679586742682725*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"continuityConditionAmplitudeSpecified", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"continuityCondition", "/.", "amplitudeProxRR"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.67113320997766*^9, 3.671133261996962*^9}, {
  3.671134668860433*^9, 3.671134688413295*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m0", " ", "\[Lambda]d", " ", 
    RowBox[{"Sech", "[", 
     FractionBox["xB", "\[Lambda]p"], "]"}]}], "\[Equal]", 
   RowBox[{"mB", " ", 
    RowBox[{"(", 
     RowBox[{"\[Lambda]d", "+", 
      RowBox[{"\[Lambda]p", " ", 
       RowBox[{"Tanh", "[", 
        FractionBox["xB", "\[Lambda]p"], "]"}]}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6711331322811413`*^9, 3.671133222414907*^9, 
  3.671133262986672*^9, 3.671134689348296*^9, 3.679586743150332*^9}]
}, Open  ]],

Cell["Now, solve for \[OpenCurlyQuote]xB\[CloseCurlyQuote].", "Text",
 CellChangeTimes->{{3.6711346368384953`*^9, 3.671134641628932*^9}, {
  3.671134758221422*^9, 3.6711347840749683`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xBsolTD", " ", "=", " ", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{"continuityConditionAmplitudeSpecified", ",", "xB"}], "]"}], 
     ",", 
     RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], "]"}], "//",
    "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.665590525453698*^9, 3.665590529628244*^9}, {
  3.671134708878126*^9, 3.671134710364113*^9}, {3.6711349586845703`*^9, 
  3.671134958939168*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"xB", "\[Rule]", 
    RowBox[{"ConditionalExpression", "[", 
     RowBox[{
      RowBox[{"\[Lambda]p", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
          RowBox[{"C", "[", "1", "]"}]}], "-", 
         RowBox[{"Log", "[", 
          RowBox[{"mB", " ", 
           RowBox[{"(", 
            RowBox[{"\[Lambda]d", "+", "\[Lambda]p"}], ")"}]}], "]"}], "+", 
         RowBox[{"Log", "[", 
          RowBox[{
           RowBox[{"m0", " ", "\[Lambda]d"}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"m0", "-", "mB"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"m0", "+", "mB"}], ")"}], " ", 
              SuperscriptBox["\[Lambda]d", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["mB", "2"], " ", 
              SuperscriptBox["\[Lambda]p", "2"]}]}]]}], "]"}]}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}]}], 
   ",", 
   RowBox[{"xB", "\[Rule]", 
    RowBox[{"ConditionalExpression", "[", 
     RowBox[{
      RowBox[{"\[Lambda]p", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
          RowBox[{"C", "[", "1", "]"}]}], "-", 
         RowBox[{"Log", "[", 
          RowBox[{"mB", " ", 
           RowBox[{"(", 
            RowBox[{"\[Lambda]d", "+", "\[Lambda]p"}], ")"}]}], "]"}], "+", 
         RowBox[{"Log", "[", 
          RowBox[{
           RowBox[{"m0", " ", "\[Lambda]d"}], "+", 
           SqrtBox[
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"m0", "-", "mB"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"m0", "+", "mB"}], ")"}], " ", 
              SuperscriptBox["\[Lambda]d", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["mB", "2"], " ", 
              SuperscriptBox["\[Lambda]p", "2"]}]}]]}], "]"}]}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.671134715406377*^9, 3.671134961189969*^9, 
  3.679586746485403*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xBsolTD", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"xBsolTD", "/.", 
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", "0"}]}], "//", "Last"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.665592733195002*^9, 3.665592798606776*^9}, {
  3.671134963963257*^9, 3.67113496621181*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"xB", "\[Rule]", 
   RowBox[{"\[Lambda]p", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Log", "[", 
        RowBox[{"mB", " ", 
         RowBox[{"(", 
          RowBox[{"\[Lambda]d", "+", "\[Lambda]p"}], ")"}]}], "]"}]}], "+", 
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"m0", " ", "\[Lambda]d"}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"m0", "-", "mB"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"m0", "+", "mB"}], ")"}], " ", 
           SuperscriptBox["\[Lambda]d", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["mB", "2"], " ", 
           SuperscriptBox["\[Lambda]p", "2"]}]}]]}], "]"}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.665592747440593*^9, 3.66559279905767*^9}, 
   3.671134738914732*^9, 3.671134967072921*^9, 3.679586746597164*^9}]
}, Open  ]],

Cell["\<\
This solution corresponds to the two-domain model. Now, solve for \
\[OpenCurlyQuote]xB\[CloseCurlyQuote] for the uniform consumption model:\
\>", "Text",
 CellChangeTimes->{{3.671134785926043*^9, 3.67113482746525*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xBsolExp", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"mB", "\[Equal]", 
      RowBox[{"m0", " ", 
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "xB"}], "/", "\[Lambda]e"}], ")"}]}]}]}], ",", "xB"}], 
    "]"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.665600969245297*^9, 3.665601000218853*^9}, {
  3.665601197268093*^9, 3.6656011992255707`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"xB", "\[Rule]", 
   RowBox[{"ConditionalExpression", "[", 
    RowBox[{
     RowBox[{"\[Lambda]e", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
         RowBox[{"C", "[", "1", "]"}]}], "+", 
        RowBox[{"Log", "[", 
         FractionBox["m0", "mB"], "]"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.665601002065672*^9, {3.665601200612788*^9, 3.665601230187894*^9}, 
   3.671135038722519*^9, 3.6795867466144114`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xBsolExp", "=", 
  RowBox[{"{", 
   RowBox[{"xB", "\[Rule]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"xB", "/.", "xBsolExp"}], "/.", 
      RowBox[{
       RowBox[{"C", "[", "1", "]"}], "\[Rule]", "0"}]}], ")"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.6656010107235947`*^9, 3.6656010217922373`*^9}, {
  3.665601205698254*^9, 3.665601240734688*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"xB", "\[Rule]", 
   RowBox[{"\[Lambda]e", " ", 
    RowBox[{"Log", "[", 
     FractionBox["m0", "mB"], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.665601241208495*^9, 3.67113504174262*^9, 
  3.679586746641156*^9}]
}, Open  ]],

Cell["\<\
With these two solutions, it is relatively straightforward to calculate the \
sensitivity of \[OpenCurlyQuote]xB\[CloseCurlyQuote] to variations in other \
parameters.\
\>", "Text",
 CellChangeTimes->{{3.671135046418193*^9, 3.671135070335203*^9}, {
  3.671135105587545*^9, 3.671135149578918*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Two-domain-gradual-sink model", "Section",
 CellChangeTimes->{{3.671133751009184*^9, 3.6711337768588533`*^9}, {
  3.679598235101383*^9, 3.679598251155746*^9}}],

Cell["\<\
Now, we will modify the two-domain model so that the strength of the sink \
increases gradually starting from the interface boundary. The motivation for \
this model is the observation that the expression of Dpp\[CloseCurlyQuote]s \
cell-surface receptor Tkv doesn\[CloseCurlyQuote]t appear to increase as a \
step function at the Sal boundary; rather, it appears to increase gradually \
starting from the Sal boundary. Let\[CloseCurlyQuote]s model this by assuming \
that the consumption rate constant of the morphogen increases as a linear \
function starting from the interface boundary, and the slope of this increase \
is \[Alpha]m.\
\>", "Text",
 CellChangeTimes->{{3.671133770834844*^9, 3.671133842655583*^9}, {
  3.671133884265458*^9, 3.671133970205274*^9}, {3.67113413573595*^9, 
  3.671134206146185*^9}, {3.671134518471901*^9, 3.6711346478612823`*^9}, {
  3.679598256860258*^9, 3.679598494532942*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqnProx", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"0", " ", "\[Equal]", "  ", 
    RowBox[{
     RowBox[{"\[Delta]p", " ", 
      RowBox[{
       RowBox[{"m", "''"}], "[", "x", "]"}]}], " ", "-", 
     RowBox[{"\[Alpha]p", " ", 
      RowBox[{"m", "[", "x", "]"}]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6650185133335342`*^9, 3.66501856306287*^9}, {
   3.665018622899541*^9, 3.665018626371174*^9}, 3.665170048927731*^9, {
   3.665257182321327*^9, 3.665257183917815*^9}, 3.679605508837935*^9, 
   3.6796060254178*^9, 3.679609586306525*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[Alpha]p"}], " ", 
     RowBox[{"m", "[", "x", "]"}]}], "+", 
    RowBox[{"\[Delta]p", " ", 
     RowBox[{
      SuperscriptBox["m", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6650185650232*^9, 3.665018637050343*^9, 
  3.665170067370879*^9, 3.665230702009077*^9, 3.665233367651739*^9, 
  3.665241898529743*^9, 3.665254922362535*^9, 3.665257185346251*^9, 
  3.665257945650003*^9, 3.6652591117346563`*^9, 3.665259392517641*^9, 
  3.665437279828157*^9, 3.665576063287695*^9, 3.665578233958197*^9, 
  3.679594530853322*^9, 3.679595568910386*^9, 3.6795960259040937`*^9, 
  3.679603135340122*^9, 3.679605711949429*^9, 3.6796058263103952`*^9, 
  3.679605910103174*^9, 3.679606068086891*^9, 3.679606222537917*^9, 
  3.679606468315551*^9, 3.679606759696866*^9, 3.6796090827222633`*^9, 
  3.6796096969246893`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqnDist", "=", 
  RowBox[{"{", 
   RowBox[{"0", " ", "\[Equal]", "  ", 
    RowBox[{
     RowBox[{"\[Delta]d", " ", 
      RowBox[{
       RowBox[{"m", "''"}], "[", "x", "]"}]}], " ", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Alpha]p", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "-", "xB"}], ")"}], "\[Alpha]s"}]}], ")"}], " ", 
      RowBox[{"m", "[", "x", "]"}]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.665018525858562*^9, 3.665018530454413*^9}, {
   3.665018568821986*^9, 3.665018578381802*^9}, {3.665018629703546*^9, 
   3.665018633330388*^9}, {3.665018787473051*^9, 3.665018832205284*^9}, {
   3.665170046164572*^9, 3.665170047037038*^9}, 3.679605510700248*^9, {
   3.6796057632238483`*^9, 3.679605763368812*^9}, 3.679606027392198*^9, 
   3.679609592198558*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Alpha]p", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "-", "xB"}], ")"}], " ", "\[Alpha]s"}]}], ")"}]}], " ", 
     RowBox[{"m", "[", "x", "]"}]}], "+", 
    RowBox[{"\[Delta]d", " ", 
     RowBox[{
      SuperscriptBox["m", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.665018833886441*^9, 3.665170069406518*^9, 
  3.665171294647142*^9, 3.6651729320395203`*^9, 3.665173655615308*^9, 
  3.665173736125163*^9, 3.665230703581542*^9, 3.665233367718601*^9, 
  3.665241900819765*^9, 3.665254922451545*^9, 3.665257188140486*^9, 
  3.665257945742086*^9, 3.665259113722611*^9, 3.665259392615185*^9, 
  3.665261207175425*^9, 3.665437330349424*^9, 3.665576063383339*^9, 
  3.6655782340493*^9, 3.679594530925392*^9, 3.6795955690684643`*^9, 
  3.6795960260590687`*^9, 3.6796031356850433`*^9, 3.679605714042857*^9, 
  3.6796058363465433`*^9, 3.6796059101914797`*^9, 3.679606068307538*^9, 
  3.6796062227299147`*^9, 3.679606468612412*^9, 3.679606759770211*^9, 
  3.679609082794218*^9, 3.679609697023717*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bcProx", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"m", "[", "0", "]"}], "\[Equal]", "m0"}], ",", 
    RowBox[{
     RowBox[{"m", "[", "xB", "]"}], "\[Equal]", "mB"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6650185823575907`*^9, 3.665018584549048*^9}, {
  3.665018642026937*^9, 3.665018656957274*^9}, {3.665018738693924*^9, 
  3.6650187390726967`*^9}, {3.6651693351510477`*^9, 3.66516935741675*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"m", "[", "0", "]"}], "\[Equal]", "m0"}], ",", 
   RowBox[{
    RowBox[{"m", "[", "xB", "]"}], "\[Equal]", "mB"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6650186658052197`*^9, 3.665018739822029*^9, 3.665169359601679*^9, 
   3.6651700731355743`*^9, 3.665230705386187*^9, 3.665233367742444*^9, 
   3.665241900982587*^9, 3.665254922487686*^9, 3.665257201177167*^9, 
   3.6652579457815733`*^9, 3.665259116489895*^9, 3.665259392647952*^9, 
   3.665261207257372*^9, 3.665437330478094*^9, 3.66557606342703*^9, 
   3.665578234090926*^9, 3.6795945309417257`*^9, 3.67959556908442*^9, 
   3.6795960260832787`*^9, 3.6796031357143707`*^9, {3.679605716229703*^9, 
   3.6796057185905113`*^9}, 3.679605840567521*^9, 3.6796059102153482`*^9, 
   3.679606068341107*^9, 3.6796062227729063`*^9, 3.679606468638054*^9, 
   3.679606759786846*^9, 3.679609082808996*^9, 3.679609697057563*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bcDist", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"m", "[", "xB", "]"}], "\[Equal]", "mB"}], ",", 
    RowBox[{
     RowBox[{"m", "[", "L", "]"}], " ", "\[Equal]", " ", "0"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.6650186703912373`*^9, 3.665018680380293*^9}, {
   3.665169345241788*^9, 3.6651693553943453`*^9}, 3.6651694949662733`*^9, 
   3.6651698575998297`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"m", "[", "xB", "]"}], "\[Equal]", "mB"}], ",", 
   RowBox[{
    RowBox[{"m", "[", "L", "]"}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.665169496104745*^9, 3.665169862916904*^9, 
  3.6651700758239317`*^9, 3.665230707089608*^9, 3.665233367784341*^9, 
  3.665241901040216*^9, 3.665254922519848*^9, 3.665257203068296*^9, 
  3.6652579458149853`*^9, 3.665259118649973*^9, 3.665259392676647*^9, 
  3.665261207279052*^9, 3.6654373305171957`*^9, 3.665576063460108*^9, 
  3.665578234124049*^9, 3.679594530965671*^9, 3.679595569112705*^9, 
  3.679596026125074*^9, 3.679603135737198*^9, 3.679605720518515*^9, 
  3.679605840857292*^9, 3.6796059102506866`*^9, 3.679606068374308*^9, 
  3.679606222806843*^9, 3.6796064686542177`*^9, 3.679606759811427*^9, 
  3.679609082836383*^9, 3.679609697091559*^9}]
}, Open  ]],

Cell[TextData[{
 "Define \[Lambda]p = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SqrtBox[
     RowBox[{"\[Delta]", "/", "\[Alpha]p"}]], " "}], TraditionalForm]]],
 "and qs = \[Alpha]s / (\[Lambda]p^2 \[Alpha]p) = \[Alpha]s / \[Delta]"
}], "Text",
 CellChangeTimes->{{3.6651699421014*^9, 3.665169965823144*^9}, {
  3.665170095522921*^9, 3.665170099011572*^9}, {3.6654497852006283`*^9, 
  3.665449804367741*^9}, {3.679602539153605*^9, 3.679602591497099*^9}, {
  3.6796057784369907`*^9, 3.6796057895432177`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"decayLengths", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Alpha]p", "\[Rule]", " ", 
     RowBox[{"\[Delta]p", " ", "/", 
      RowBox[{"\[Lambda]p", "^", "2"}]}]}], ",", 
    RowBox[{"\[Alpha]s", "\[Rule]", " ", 
     RowBox[{"qs", " ", "\[Delta]d"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.665171232819783*^9, 3.665171275689681*^9}, {
   3.665172883131317*^9, 3.6651728942811403`*^9}, {3.6651729852558804`*^9, 
   3.665172996335765*^9}, 3.665257951331159*^9, {3.665259132624885*^9, 
   3.6652591431632137`*^9}, {3.679605528874112*^9, 3.679605543040669*^9}, {
   3.679605773108477*^9, 3.6796057762322083`*^9}, 3.679606031488028*^9, 
   3.679606161341857*^9, 3.679609053343285*^9, {3.679609602451284*^9, 
   3.679609604938068*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Alpha]p", "\[Rule]", 
    FractionBox["\[Delta]p", 
     SuperscriptBox["\[Lambda]p", "2"]]}], ",", 
   RowBox[{"\[Alpha]s", "\[Rule]", 
    RowBox[{"qs", " ", "\[Delta]d"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.665171276889411*^9, 3.665172908295206*^9, 
  3.6651729983457336`*^9, 3.6652307091812057`*^9, 3.6652333678182364`*^9, 
  3.6652419147450647`*^9, 3.665254922554216*^9, 3.665257953056292*^9, 
  3.665259155133081*^9, 3.665259401402411*^9, 3.665261207317252*^9, 
  3.66543733054589*^9, 3.6655760634939947`*^9, 3.665578234145198*^9, 
  3.679594530982214*^9, 3.679595569129195*^9, 3.679596026163103*^9, 
  3.679603135755632*^9, 3.679605840879121*^9, 3.679605910283824*^9, 
  3.679606068406288*^9, 3.67960622283951*^9, 3.679606468688455*^9, 
  3.679606759828164*^9, 3.6796090828530483`*^9, 3.679609697124939*^9}]
}, Open  ]],

Cell["\<\
Define the constraints on the parameters. Let\[CloseCurlyQuote]s assume \
\[Alpha]m (and qm) are greater than zero. (If we let them get less than zero, \
we risk getting a negative consumption rate constant.)\
\>", "Text",
 CellChangeTimes->{{3.6651699421014*^9, 3.665169965823144*^9}, {
  3.665170095522921*^9, 3.665170099011572*^9}, {3.6654497852006283`*^9, 
  3.665449804367741*^9}, {3.679598538438205*^9, 3.679598566764059*^9}, {
  3.679602610810781*^9, 3.6796026932547827`*^9}, {3.679602881593247*^9, 
  3.679602905661887*^9}, {3.679608951672268*^9, 3.679608953573162*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"parameterConstraints", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Delta]p", ">", "0"}], ",", 
    RowBox[{"\[Delta]d", ">", "0"}], ",", 
    RowBox[{"\[Alpha]p", ">", "0"}], ",", 
    RowBox[{"\[Lambda]p", ">", "0"}], ",", "\[AlignmentMarker]", 
    RowBox[{"0", "<", "xB", "<", "L"}], ",", 
    RowBox[{"qs", ">", "0"}], ",", 
    RowBox[{"\[Psi]", ">", " ", "0"}], ",", 
    RowBox[{
     RowBox[{"\[Phi]", "+", 
      RowBox[{"xB", " ", "\[Psi]"}]}], ">", "0"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6652328687361927`*^9, 3.66523290282436*^9}, 
   3.665233395813918*^9, {3.665242339472488*^9, 3.665242341803494*^9}, {
   3.665257971514722*^9, 3.6652579839778757`*^9}, {3.6652591849274*^9, 
   3.665259185741604*^9}, {3.665259357500638*^9, 3.665259358466846*^9}, {
   3.665262035541988*^9, 3.665262039540691*^9}, 3.665575966504422*^9, 
   3.665576018581603*^9, {3.679594463110859*^9, 3.679594465677394*^9}, {
   3.679605550400558*^9, 3.679605558174027*^9}, 3.679605795930368*^9, {
   3.679606033400124*^9, 3.679606036334982*^9}, {3.679609609653871*^9, 
   3.679609616836574*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Delta]p", ">", "0"}], ",", 
   RowBox[{"\[Delta]d", ">", "0"}], ",", 
   RowBox[{"\[Alpha]p", ">", "0"}], ",", 
   RowBox[{"\[Lambda]p", ">", "0"}], ",", 
   RowBox[{"0", "<", "xB", "<", "L"}], ",", 
   RowBox[{"qs", ">", "0"}], ",", 
   RowBox[{"\[Psi]", ">", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Phi]", "+", 
     RowBox[{"xB", " ", "\[Psi]"}]}], ">", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6652329172762003`*^9, 3.665233396998322*^9, 
  3.665241925952633*^9, 3.665242342655428*^9, 3.665254922587212*^9, 
  3.665257282463305*^9, 3.665257989793867*^9, 3.665259189304583*^9, 
  3.665259359548997*^9, 3.6652594015483828`*^9, 3.665261207354059*^9, 
  3.6652620451436768`*^9, 3.6654373305661583`*^9, 3.665576063527652*^9, 
  3.665578234181378*^9, 3.6795945310152903`*^9, 3.679595569161578*^9, 
  3.679596026208248*^9, 3.6796031357894917`*^9, 3.6796058409148617`*^9, 
  3.679605910316882*^9, 3.67960606843118*^9, 3.67960622287356*^9, 
  3.679606468721054*^9, 3.679606759861278*^9, 3.679609082886303*^9, 
  3.679609697157655*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqnProx", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"eqnProx", "/.", "decayLengths"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.665170102245072*^9, 3.665170105507146*^9}, {
   3.665170259232477*^9, 3.665170290993409*^9}, {3.665170350073893*^9, 
   3.665170360921274*^9}, {3.665173000573381*^9, 3.6651730022796392`*^9}, {
   3.665230781316718*^9, 3.665230783787526*^9}, 3.665233402367215*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "\[Equal]", 
   RowBox[{
    SuperscriptBox["\[Lambda]p", "2"], " ", 
    RowBox[{
     SuperscriptBox["m", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.66517026421756*^9, 3.6651702918032103`*^9}, {
   3.665170336304932*^9, 3.665170361605969*^9}, 3.6651729263611183`*^9, 
   3.665173586368815*^9, 3.6652307866987123`*^9, 3.66523340304263*^9, 
   3.665242100577093*^9, 3.6652549233518047`*^9, 3.665257998893536*^9, 
   3.665259192549803*^9, 3.6652594017344027`*^9, 3.665261207527873*^9, 
   3.66543733149747*^9, 3.6655760651193542`*^9, 3.6655782344808807`*^9, 
   3.679594531296914*^9, 3.679595569223432*^9, 3.6795960262654667`*^9, 
   3.6796031358863792`*^9, 3.679605840957819*^9, 3.6796059105801764`*^9, 
   3.6796060686209307`*^9, 3.6796062231503*^9, 3.6796064687586*^9, 
   3.67960676011899*^9, 3.679609083303845*^9, 3.679609698171702*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqnDist", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"eqnDist", "/.", "decayLengths"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.665170444547627*^9, 3.6651704494217777`*^9}, 
   3.6651712826798763`*^9, 3.665171766832893*^9, {3.665172982790574*^9, 
   3.665173005518165*^9}, {3.66523079185918*^9, 3.665230799985566*^9}, 
   3.6652308606791573`*^9, 3.665242105223979*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Delta]p", "+", 
      RowBox[{"qs", " ", 
       RowBox[{"(", 
        RowBox[{"x", "-", "xB"}], ")"}], " ", "\[Delta]d", " ", 
       SuperscriptBox["\[Lambda]p", "2"]}]}], ")"}], " ", 
    RowBox[{"m", "[", "x", "]"}]}], "\[Equal]", 
   RowBox[{"\[Delta]d", " ", 
    SuperscriptBox["\[Lambda]p", "2"], " ", 
    RowBox[{
     SuperscriptBox["m", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.679603136038398*^9, 3.679605841083745*^9, 
  3.679605910685198*^9, 3.679606068772668*^9, 3.679606223244329*^9, 
  3.6796064688539667`*^9, 3.679606760202243*^9, 3.679609083436504*^9, 
  3.679609698425555*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{"eqnDist", ",", 
    RowBox[{
     RowBox[{"m", "''"}], "[", "x", "]"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.665170619911828*^9, 3.665170627110362*^9}, {
   3.665170777934866*^9, 3.665170784718752*^9}, {3.665173026902708*^9, 
   3.665173028191515*^9}, {3.665230837723104*^9, 3.6652308418733063`*^9}, 
   3.665230872841084*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["m", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"qs", " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", "xB"}], ")"}]}], "+", 
       FractionBox["\[Delta]p", 
        RowBox[{"\[Delta]d", " ", 
         SuperscriptBox["\[Lambda]p", "2"]}]]}], ")"}], " ", 
     RowBox[{"m", "[", "x", "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.665170628258911*^9, {3.66517078092733*^9, 3.665170785271175*^9}, 
   3.665173029339631*^9, 3.6651735903724623`*^9, {3.66523084861119*^9, 
   3.6652308734933157`*^9}, 3.665242109248713*^9, 3.665254923690509*^9, 
   3.6652573511351748`*^9, 3.665258029287224*^9, 3.6652592021189137`*^9, 
   3.665261208707883*^9, 3.665437331849943*^9, 3.665576065443563*^9, 
   3.665578234631*^9, 3.6795945314497557`*^9, 3.679595569372122*^9, 
   3.679596026414042*^9, 3.6796031361813107`*^9, 3.679605841133904*^9, 
   3.679605910733735*^9, 3.67960606887317*^9, 3.67960622328815*^9, 
   3.679606468889303*^9, 3.679606760235303*^9, 3.679609083489366*^9, 
   3.679609698538685*^9}]
}, Open  ]],

Cell[TextData[{
 "Let \[Phi] = ",
 Cell[BoxData[
  FractionBox["1", 
   SuperscriptBox["\[Lambda]p", "2"]]],
  CellChangeTimes->{
   3.665170628258911*^9, {3.66517078092733*^9, 3.665170785271175*^9}, 
    3.665173029339631*^9, 3.6651735903724623`*^9}],
 "-",
 Cell[BoxData[
  RowBox[{"xB", " ", "qs"}]],
  CellChangeTimes->{
   3.665170628258911*^9, {3.66517078092733*^9, 3.665170785271175*^9}, 
    3.665173029339631*^9, 3.6651735903724623`*^9}],
 " and \[Psi] = ",
 Cell[BoxData["qs"],
  CellChangeTimes->{
   3.665170628258911*^9, {3.66517078092733*^9, 3.665170785271175*^9}, 
    3.665173029339631*^9, 3.6651735903724623`*^9}]
}], "Text",
 CellChangeTimes->{{3.665173947428856*^9, 3.665174031969767*^9}, {
  3.665258073329083*^9, 3.6652580756957397`*^9}, {3.66526337765685*^9, 
  3.6652633870635157`*^9}, {3.679606713292985*^9, 3.679606716338717*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lumpedParameters", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Phi]", "\[Rule]", " ", 
     RowBox[{
      FractionBox["1", 
       SuperscriptBox["\[Lambda]p", "2"]], "-", 
      RowBox[{"xB", " ", "qs"}]}]}], ",", 
    RowBox[{"\[Psi]", "\[Rule]", " ", "qs"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.665174047860775*^9, 3.665174107533618*^9}, {
   3.665258050766794*^9, 3.665258054793606*^9}, {3.665259210042165*^9, 
   3.6652592324806137`*^9}, 3.679606443033127*^9, 3.679606711716382*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Phi]", "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "qs"}], " ", "xB"}], "+", 
     FractionBox["1", 
      SuperscriptBox["\[Lambda]p", "2"]]}]}], ",", 
   RowBox[{"\[Psi]", "\[Rule]", "qs"}]}], "}"}]], "Output",
 CellChangeTimes->{3.665174108253462*^9, 3.665242116172967*^9, 
  3.665254923738327*^9, 3.665257814916222*^9, 3.665258056223076*^9, 
  3.665259237115176*^9, 3.6652594198674803`*^9, 3.665261208776414*^9, 
  3.66543733190985*^9, 3.6655760654638767`*^9, 3.665578234676176*^9, 
  3.679594531465911*^9, 3.679595569386154*^9, 3.679596026438452*^9, 
  3.679603136202478*^9, 3.679605841164513*^9, 3.679605910756629*^9, 
  3.679606068922387*^9, 3.6796062233126917`*^9, 3.679606468906049*^9, 
  3.6796067602535887`*^9, 3.679609083522456*^9, 3.6796096986212873`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lumpedParameters2", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Phi]", "\[Equal]", 
         RowBox[{"(", 
          RowBox[{"\[Phi]", "/.", "lumpedParameters"}], ")"}]}], ",", 
        RowBox[{"\[Psi]", "\[Equal]", 
         RowBox[{"(", 
          RowBox[{"\[Psi]", "/.", "lumpedParameters"}], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]p", ",", "qs"}], "}"}]}], "]"}], "//", "Last"}], "//",
    "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.66517411269493*^9, 3.6651741900382013`*^9}, {
  3.665174288413817*^9, 3.6651742904472103`*^9}, {3.6651749889956284`*^9, 
  3.665174991760394*^9}, {3.6652592424398623`*^9, 3.665259242528734*^9}, {
  3.679606446691588*^9, 3.6796064468851423`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Lambda]p", "\[Rule]", 
    FractionBox["1", 
     SqrtBox[
      RowBox[{"\[Phi]", "+", 
       RowBox[{"xB", " ", "\[Psi]"}]}]]]}], ",", 
   RowBox[{"qs", "\[Rule]", "\[Psi]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6651741913099337`*^9, 3.6651742911511993`*^9, 
  3.665174993268412*^9, 3.6652421232668047`*^9, 3.6652549241760187`*^9, 
  3.665258059712201*^9, 3.6652592430546*^9, 3.665259419981646*^9, 
  3.665261209079884*^9, 3.665437332041465*^9, 3.665576065577858*^9, 
  3.6655782347505693`*^9, 3.67959453152089*^9, 3.6795955694293747`*^9, 
  3.679596026473538*^9, 3.6796031362789516`*^9, 3.6796058411984243`*^9, 
  3.679605910828463*^9, 3.679606069023283*^9, 3.67960622337719*^9, 
  3.679606468937068*^9, 3.679606760320066*^9, 3.679609083623149*^9, 
  3.6796096987376204`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqnDist", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"eqnDist", "/.", "lumpedParameters2"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.665242158218524*^9, 3.665242189199696*^9}, {
  3.6652423904178753`*^9, 3.665242393560382*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "xB"}], ")"}], " ", "\[Delta]d", " ", "\[Psi]"}], 
      "+", 
      RowBox[{"\[Delta]p", " ", 
       RowBox[{"(", 
        RowBox[{"\[Phi]", "+", 
         RowBox[{"xB", " ", "\[Psi]"}]}], ")"}]}]}], ")"}], " ", 
    RowBox[{"m", "[", "x", "]"}]}], "\[Equal]", 
   RowBox[{"\[Delta]d", " ", 
    RowBox[{
     SuperscriptBox["m", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.665242169621908*^9, 3.665242190026415*^9}, 
   3.665242346085383*^9, 3.6652423944416113`*^9, 3.665254924238203*^9, {
   3.665258064567306*^9, 3.6652580672013397`*^9}, 3.6652592457432547`*^9, 
   3.665259420028697*^9, 3.665261209130447*^9, 3.665437332111308*^9, 
   3.665576065630272*^9, 3.6655782347966423`*^9, 3.679594531564582*^9, 
   3.6795955694713593`*^9, 3.6795960265179987`*^9, 3.6796031363602457`*^9, 
   3.679605841503541*^9, 3.6796059110794764`*^9, 3.679606069323324*^9, 
   3.6796062236323853`*^9, 3.679606469343915*^9, 3.679606760531255*^9, 
   3.679609083668868*^9, 3.679609698864431*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fullsystemProx", "=", 
  RowBox[{"Join", "[", 
   RowBox[{"eqnProx", ",", "bcProx"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"m", "[", "x", "]"}], "\[Equal]", 
    RowBox[{
     SuperscriptBox["\[Lambda]p", "2"], " ", 
     RowBox[{
      SuperscriptBox["m", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"m", "[", "0", "]"}], "\[Equal]", "m0"}], ",", 
   RowBox[{
    RowBox[{"m", "[", "xB", "]"}], "\[Equal]", "mB"}]}], "}"}]], "Output",
 CellChangeTimes->{3.665018752078376*^9, 3.665169365144478*^9, 
  3.6651737824827833`*^9, 3.665230883787382*^9, 3.665242400895371*^9, 
  3.6652549242705297`*^9, 3.6652580819448547`*^9, 3.665259262678237*^9, 
  3.665259420049488*^9, 3.665261209155664*^9, 3.665437332143374*^9, 
  3.665576065674942*^9, 3.665578234819799*^9, 3.679594531597755*^9, 
  3.679595569494657*^9, 3.679596026540902*^9, 3.679603136485121*^9, 
  3.679605841547188*^9, 3.679605911115343*^9, 3.6796060694423428`*^9, 
  3.679606223771844*^9, 3.6796064694688272`*^9, 3.679606760559699*^9, 
  3.6796090837060633`*^9, 3.679609698890403*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fullsystemDist", "=", 
  RowBox[{"Join", "[", 
   RowBox[{"eqnDist", ",", "bcDist"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.665018759820788*^9, 3.6650187682243223`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "xB"}], ")"}], " ", "\[Delta]d", " ", "\[Psi]"}], 
       "+", 
       RowBox[{"\[Delta]p", " ", 
        RowBox[{"(", 
         RowBox[{"\[Phi]", "+", 
          RowBox[{"xB", " ", "\[Psi]"}]}], ")"}]}]}], ")"}], " ", 
     RowBox[{"m", "[", "x", "]"}]}], "\[Equal]", 
    RowBox[{"\[Delta]d", " ", 
     RowBox[{
      SuperscriptBox["m", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"m", "[", "xB", "]"}], "\[Equal]", "mB"}], ",", 
   RowBox[{
    RowBox[{"m", "[", "L", "]"}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.665018768777006*^9, 3.665018837636305*^9, 3.665169367197104*^9, {
   3.665169499551124*^9, 3.665169518836776*^9}, 3.665173784984676*^9, 
   3.665230886878509*^9, 3.665242403242034*^9, 3.665254924304812*^9, 
   3.665258084030974*^9, 3.6652592655867043`*^9, 3.665259420077159*^9, 
   3.665261209246196*^9, 3.665437332175528*^9, 3.665576065725026*^9, 
   3.665578234855689*^9, 3.679594531631*^9, 3.679595569508699*^9, 
   3.679596026560317*^9, 3.67960313651933*^9, 3.6796058415815277`*^9, 
   3.6796059112226667`*^9, 3.6796060694728317`*^9, 3.6796062238047743`*^9, 
   3.679606469518196*^9, 3.679606760592927*^9, 3.67960908373438*^9, 
   3.679609698936626*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solProx", " ", "=", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"DSolve", "[", 
      RowBox[{"fullsystemProx", ",", 
       RowBox[{"m", "[", "x", "]"}], ",", 
       RowBox[{"{", "x", "}"}]}], "]"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], "]"}], "//",
    "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.665018942348641*^9, 3.665018959526566*^9}, {
  3.665169321627118*^9, 3.6651693222749662`*^9}, {3.6651693713437347`*^9, 
  3.6651694431811647`*^9}, {3.665242424928937*^9, 3.665242470262527*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "\[Rule]", 
   RowBox[{
    RowBox[{"Csch", "[", 
     FractionBox["xB", "\[Lambda]p"], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"mB", " ", 
       RowBox[{"Sinh", "[", 
        FractionBox["x", "\[Lambda]p"], "]"}]}], "-", 
      RowBox[{"m0", " ", 
       RowBox[{"Sinh", "[", 
        FractionBox[
         RowBox[{"x", "-", "xB"}], "\[Lambda]p"], "]"}]}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.665169420066011*^9, 3.665169445195047*^9}, 
   3.665173789056921*^9, 3.665230894436062*^9, 3.665242512234481*^9, 
   3.66525492640388*^9, 3.6652580878252277`*^9, 3.665259270791273*^9, 
   3.665259421556983*^9, 3.6652612105098543`*^9, 3.66543733392558*^9, 
   3.665576067581102*^9, 3.6655782363441257`*^9, 3.679594533387135*^9, 
   3.6795955709768333`*^9, 3.679596027700441*^9, 3.679603137028675*^9, 
   3.6796058420822287`*^9, 3.679605912820078*^9, 3.679606071363906*^9, 
   3.679606225362357*^9, 3.679606469837879*^9, 3.679606762154851*^9, 
   3.679609085759667*^9, 3.679609700641844*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solDist", " ", "=", " ", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"DSolve", "[", 
      RowBox[{"fullsystemDist", ",", 
       RowBox[{"m", "[", "x", "]"}], ",", 
       RowBox[{"{", "x", "}"}]}], "]"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], "]"}], "//",
    "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.665169447929421*^9, 3.66516946827973*^9}, {
  3.66516962228377*^9, 3.665169625332361*^9}, {3.665242484814699*^9, 
  3.6652425071245537`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "\[Rule]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"mB", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"AiryAi", "[", 
           FractionBox[
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"x", "-", "xB"}], ")"}], " ", "\[Delta]d", " ", 
              "\[Psi]"}], "+", 
             RowBox[{"\[Delta]p", " ", 
              RowBox[{"(", 
               RowBox[{"\[Phi]", "+", 
                RowBox[{"xB", " ", "\[Psi]"}]}], ")"}]}]}], 
            RowBox[{"\[Delta]d", " ", 
             SuperscriptBox["\[Psi]", 
              RowBox[{"2", "/", "3"}]]}]], "]"}]}], " ", 
         RowBox[{"AiryBi", "[", 
          FractionBox[
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"L", "-", "xB"}], ")"}], " ", "\[Delta]d", " ", 
             "\[Psi]"}], "+", 
            RowBox[{"\[Delta]p", " ", 
             RowBox[{"(", 
              RowBox[{"\[Phi]", "+", 
               RowBox[{"xB", " ", "\[Psi]"}]}], ")"}]}]}], 
           RowBox[{"\[Delta]d", " ", 
            SuperscriptBox["\[Psi]", 
             RowBox[{"2", "/", "3"}]]}]], "]"}]}], "+", 
        RowBox[{
         RowBox[{"AiryAi", "[", 
          FractionBox[
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"L", "-", "xB"}], ")"}], " ", "\[Delta]d", " ", 
             "\[Psi]"}], "+", 
            RowBox[{"\[Delta]p", " ", 
             RowBox[{"(", 
              RowBox[{"\[Phi]", "+", 
               RowBox[{"xB", " ", "\[Psi]"}]}], ")"}]}]}], 
           RowBox[{"\[Delta]d", " ", 
            SuperscriptBox["\[Psi]", 
             RowBox[{"2", "/", "3"}]]}]], "]"}], " ", 
         RowBox[{"AiryBi", "[", 
          FractionBox[
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"x", "-", "xB"}], ")"}], " ", "\[Delta]d", " ", 
             "\[Psi]"}], "+", 
            RowBox[{"\[Delta]p", " ", 
             RowBox[{"(", 
              RowBox[{"\[Phi]", "+", 
               RowBox[{"xB", " ", "\[Psi]"}]}], ")"}]}]}], 
           RowBox[{"\[Delta]d", " ", 
            SuperscriptBox["\[Psi]", 
             RowBox[{"2", "/", "3"}]]}]], "]"}]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"AiryAi", "[", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"L", "-", "xB"}], ")"}], " ", "\[Delta]d", " ", 
           "\[Psi]"}], "+", 
          RowBox[{"\[Delta]p", " ", 
           RowBox[{"(", 
            RowBox[{"\[Phi]", "+", 
             RowBox[{"xB", " ", "\[Psi]"}]}], ")"}]}]}], 
         RowBox[{"\[Delta]d", " ", 
          SuperscriptBox["\[Psi]", 
           RowBox[{"2", "/", "3"}]]}]], "]"}], " ", 
       RowBox[{"AiryBi", "[", 
        FractionBox[
         RowBox[{"\[Delta]p", " ", 
          RowBox[{"(", 
           RowBox[{"\[Phi]", "+", 
            RowBox[{"xB", " ", "\[Psi]"}]}], ")"}]}], 
         RowBox[{"\[Delta]d", " ", 
          SuperscriptBox["\[Psi]", 
           RowBox[{"2", "/", "3"}]]}]], "]"}]}], "-", 
      RowBox[{
       RowBox[{"AiryAi", "[", 
        FractionBox[
         RowBox[{"\[Delta]p", " ", 
          RowBox[{"(", 
           RowBox[{"\[Phi]", "+", 
            RowBox[{"xB", " ", "\[Psi]"}]}], ")"}]}], 
         RowBox[{"\[Delta]d", " ", 
          SuperscriptBox["\[Psi]", 
           RowBox[{"2", "/", "3"}]]}]], "]"}], " ", 
       RowBox[{"AiryBi", "[", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"L", "-", "xB"}], ")"}], " ", "\[Delta]d", " ", 
           "\[Psi]"}], "+", 
          RowBox[{"\[Delta]p", " ", 
           RowBox[{"(", 
            RowBox[{"\[Phi]", "+", 
             RowBox[{"xB", " ", "\[Psi]"}]}], ")"}]}]}], 
         RowBox[{"\[Delta]d", " ", 
          SuperscriptBox["\[Psi]", 
           RowBox[{"2", "/", "3"}]]}]], "]"}]}]}], ")"}]}]}], "}"}]], "Output",\

 CellChangeTimes->{3.665169469082829*^9, 3.665169514407498*^9, 
  3.665169653286352*^9, 3.665173814798873*^9, 3.665230919042322*^9, 
  3.665242522440803*^9, 3.6652549317652473`*^9, 3.6652584744320183`*^9, 
  3.6652592876907997`*^9, 3.665259430217639*^9, 3.6652612194648447`*^9, 
  3.665437341387087*^9, 3.665576075064548*^9, 3.665578243399734*^9, 
  3.679594538165061*^9, 3.679595575761168*^9, 3.67959603222222*^9, 
  3.679603144349663*^9, 3.6796059498960533`*^9, 3.679606113874151*^9, 
  3.679606277785001*^9, 3.679606582967285*^9, 3.67960680959512*^9, 
  3.679609090669121*^9, 3.679609723454488*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solDist", " ", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"m", "[", "x", "]"}], "\[Rule]", " ", 
    RowBox[{"Limit", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"m", "[", "x", "]"}], "/.", "solDist"}], ",", 
      RowBox[{"L", "\[Rule]", "Infinity"}], ",", 
      RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], "]"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.679596037068218*^9, 3.67959607620011*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{"mB", " ", 
     RowBox[{"AiryAi", "[", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "-", "xB"}], ")"}], " ", "\[Delta]d", " ", "\[Psi]"}], 
        "+", 
        RowBox[{"\[Delta]p", " ", 
         RowBox[{"(", 
          RowBox[{"\[Phi]", "+", 
           RowBox[{"xB", " ", "\[Psi]"}]}], ")"}]}]}], 
       RowBox[{"\[Delta]d", " ", 
        SuperscriptBox["\[Psi]", 
         RowBox[{"2", "/", "3"}]]}]], "]"}]}], 
    RowBox[{"AiryAi", "[", 
     FractionBox[
      RowBox[{"\[Delta]p", " ", 
       RowBox[{"(", 
        RowBox[{"\[Phi]", "+", 
         RowBox[{"xB", " ", "\[Psi]"}]}], ")"}]}], 
      RowBox[{"\[Delta]d", " ", 
       SuperscriptBox["\[Psi]", 
        RowBox[{"2", "/", "3"}]]}]], "]"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.679596111874077*^9, 3.679603188119041*^9, 
  3.679606008883*^9, 3.6796061786284533`*^9, 3.67960632959968*^9, 
  3.6796067231559362`*^9, 3.679606928749661*^9, 3.679609127720563*^9, 
  3.679609764088847*^9}]
}, Open  ]],

Cell["\<\
As before, couple the solutions in the proximal and distal domain using the \
continuity condition.\
\>", "Text",
 CellChangeTimes->{{3.679602949013874*^9, 3.6796029818361998`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"continuityCond", " ", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m", "[", "x", "]"}], "/.", "solProx"}], ")"}], ",", "x"}], 
       "]"}], "/.", 
      RowBox[{"x", "\[Rule]", "xB"}]}], ")"}], "==", 
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m", "[", "x", "]"}], "/.", "solDist"}], ")"}], ",", "x"}], 
       "]"}], "/.", 
      RowBox[{"x", "\[Rule]", "xB"}]}], ")"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.665191800814597*^9, 3.665191872961026*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["m0", "\[Lambda]p"]}], "+", 
      FractionBox[
       RowBox[{"mB", " ", 
        RowBox[{"Cosh", "[", 
         FractionBox["xB", "\[Lambda]p"], "]"}]}], "\[Lambda]p"]}], ")"}], 
    " ", 
    RowBox[{"Csch", "[", 
     FractionBox["xB", "\[Lambda]p"], "]"}]}], "\[Equal]", 
   FractionBox[
    RowBox[{"mB", " ", 
     SuperscriptBox["\[Psi]", 
      RowBox[{"1", "/", "3"}]], " ", 
     RowBox[{"AiryAiPrime", "[", 
      FractionBox[
       RowBox[{"\[Delta]p", " ", 
        RowBox[{"(", 
         RowBox[{"\[Phi]", "+", 
          RowBox[{"xB", " ", "\[Psi]"}]}], ")"}]}], 
       RowBox[{"\[Delta]d", " ", 
        SuperscriptBox["\[Psi]", 
         RowBox[{"2", "/", "3"}]]}]], "]"}]}], 
    RowBox[{"AiryAi", "[", 
     FractionBox[
      RowBox[{"\[Delta]p", " ", 
       RowBox[{"(", 
        RowBox[{"\[Phi]", "+", 
         RowBox[{"xB", " ", "\[Psi]"}]}], ")"}]}], 
      RowBox[{"\[Delta]d", " ", 
       SuperscriptBox["\[Psi]", 
        RowBox[{"2", "/", "3"}]]}]], "]"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.665191875949767*^9, 3.665242803981635*^9, 
  3.665254977926005*^9, 3.665258552945561*^9, 3.665259933774055*^9, 
  3.665437348824864*^9, 3.6655760752503157`*^9, 3.665578243559039*^9, 
  3.665581475765875*^9, 3.6795945383431873`*^9, 3.679595576011544*^9, 
  3.6795961333771048`*^9, 3.679603188179833*^9, 3.6796063299895887`*^9, 
  3.679606928966468*^9, 3.679609127989711*^9, 3.679609764273573*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mBsol", "=", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{"continuityCond", ",", "mB"}], "]"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], "]"}], "//",
    "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.665191881212327*^9, 3.665191921027719*^9}, {
  3.6651926300096283`*^9, 3.665192634199745*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"mB", "\[Rule]", 
   FractionBox["m0", 
    RowBox[{
     RowBox[{"Cosh", "[", 
      FractionBox["xB", "\[Lambda]p"], "]"}], "-", 
     FractionBox[
      RowBox[{"\[Lambda]p", " ", 
       SuperscriptBox["\[Psi]", 
        RowBox[{"1", "/", "3"}]], " ", 
       RowBox[{"AiryAiPrime", "[", 
        FractionBox[
         RowBox[{"\[Phi]", "+", 
          RowBox[{"xB", " ", "\[Psi]"}]}], 
         SuperscriptBox["\[Psi]", 
          RowBox[{"2", "/", "3"}]]], "]"}], " ", 
       RowBox[{"Sinh", "[", 
        FractionBox["xB", "\[Lambda]p"], "]"}]}], 
      RowBox[{"AiryAi", "[", 
       FractionBox[
        RowBox[{"\[Phi]", "+", 
         RowBox[{"xB", " ", "\[Psi]"}]}], 
        SuperscriptBox["\[Psi]", 
         RowBox[{"2", "/", "3"}]]], "]"}]]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.665191899264377*^9, 3.6651919241439047`*^9}, 
   3.665192662333075*^9, 3.665242817141899*^9, 3.6652549803937693`*^9, 
   3.6652585559220123`*^9, 3.665437400457698*^9, 3.665576118129908*^9, 
   3.665578288574511*^9, 3.6795945639802923`*^9, 3.67959560316298*^9, 
   3.6795961354412537`*^9, 3.6796031905997343`*^9, 3.679606332995129*^9, 
   3.679606931938959*^9, 3.679609129840502*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solProxCoupled", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"solProx", "/.", "mBsol"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6652436535780277`*^9, 3.6652436634559317`*^9}, {
  3.665243716577702*^9, 3.665243739298748*^9}, {3.665578067098798*^9, 
  3.6655780681207047`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "\[Rule]", 
   RowBox[{"m0", " ", 
    RowBox[{"Csch", "[", 
     FractionBox["xB", "\[Lambda]p"], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sinh", "[", 
        FractionBox[
         RowBox[{"x", "-", "xB"}], "\[Lambda]p"], "]"}]}], "+", 
      FractionBox[
       RowBox[{"Sinh", "[", 
        FractionBox["x", "\[Lambda]p"], "]"}], 
       RowBox[{
        RowBox[{"Cosh", "[", 
         FractionBox["xB", "\[Lambda]p"], "]"}], "-", 
        FractionBox[
         RowBox[{"\[Lambda]p", " ", 
          SuperscriptBox["\[Psi]", 
           RowBox[{"1", "/", "3"}]], " ", 
          RowBox[{"AiryAiPrime", "[", 
           FractionBox[
            RowBox[{"\[Phi]", "+", 
             RowBox[{"xB", " ", "\[Psi]"}]}], 
            SuperscriptBox["\[Psi]", 
             RowBox[{"2", "/", "3"}]]], "]"}], " ", 
          RowBox[{"Sinh", "[", 
           FractionBox["xB", "\[Lambda]p"], "]"}]}], 
         RowBox[{"AiryAi", "[", 
          FractionBox[
           RowBox[{"\[Phi]", "+", 
            RowBox[{"xB", " ", "\[Psi]"}]}], 
           SuperscriptBox["\[Psi]", 
            RowBox[{"2", "/", "3"}]]], "]"}]]}]]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.665243666011818*^9, 3.665243746271104*^9, 
  3.665255042997262*^9, 3.6652586101611967`*^9, 3.665437624194811*^9, 
  3.66557641209643*^9, 3.665578483001906*^9, 3.679594678621275*^9, 
  3.679595711563065*^9, 3.679596138810238*^9, 3.679603194962805*^9, 
  3.6796063421565657`*^9, 3.679606943267523*^9, 3.6796091333022633`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solDistCoupled", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"solDist", "/.", "mBsol"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6652437495597*^9, 3.6652437680916348`*^9}, {
  3.665578070450355*^9, 3.66557807153677*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{"m0", " ", 
     RowBox[{"AiryAi", "[", 
      FractionBox[
       RowBox[{"\[Phi]", "+", 
        RowBox[{"x", " ", "\[Psi]"}]}], 
       SuperscriptBox["\[Psi]", 
        RowBox[{"2", "/", "3"}]]], "]"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"AiryAi", "[", 
       FractionBox[
        RowBox[{"\[Phi]", "+", 
         RowBox[{"xB", " ", "\[Psi]"}]}], 
        SuperscriptBox["\[Psi]", 
         RowBox[{"2", "/", "3"}]]], "]"}], " ", 
      RowBox[{"Cosh", "[", 
       FractionBox["xB", "\[Lambda]p"], "]"}]}], "-", 
     RowBox[{"\[Lambda]p", " ", 
      SuperscriptBox["\[Psi]", 
       RowBox[{"1", "/", "3"}]], " ", 
      RowBox[{"AiryAiPrime", "[", 
       FractionBox[
        RowBox[{"\[Phi]", "+", 
         RowBox[{"xB", " ", "\[Psi]"}]}], 
        SuperscriptBox["\[Psi]", 
         RowBox[{"2", "/", "3"}]]], "]"}], " ", 
      RowBox[{"Sinh", "[", 
       FractionBox["xB", "\[Lambda]p"], "]"}]}]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.665243770367914*^9, 3.665255043921451*^9, 
  3.665258611062581*^9, 3.6654376924240017`*^9, 3.665576417877377*^9, 
  3.665578488339492*^9, 3.679594684230534*^9, 3.67959571744606*^9, 
  3.6795961396156693`*^9, 3.679603196064074*^9, 3.679606344798234*^9, 
  3.679606946847682*^9, 3.679609134182928*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solProxCoupled", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"m", "[", "x", "]"}], "\[Rule]", " ", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"m", "[", "x", "]"}], "/.", "solProxCoupled"}], "/.", 
       "lumpedParameters"}], ",", 
      RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], "]"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.6795962026674128`*^9, 3.6795962197633877`*^9}, {
  3.679596320577352*^9, 3.679596336999444*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "\[Rule]", 
   RowBox[{"m0", " ", 
    RowBox[{"Csch", "[", 
     FractionBox["xB", "\[Lambda]p"], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sinh", "[", 
        FractionBox[
         RowBox[{"x", "-", "xB"}], "\[Lambda]p"], "]"}]}], "+", 
      FractionBox[
       RowBox[{"Sinh", "[", 
        FractionBox["x", "\[Lambda]p"], "]"}], 
       RowBox[{
        RowBox[{"Cosh", "[", 
         FractionBox["xB", "\[Lambda]p"], "]"}], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["qs", 
           RowBox[{"1", "/", "3"}]], " ", "\[Lambda]p", " ", 
          RowBox[{"AiryAiPrime", "[", 
           FractionBox["1", 
            RowBox[{
             SuperscriptBox["qs", 
              RowBox[{"2", "/", "3"}]], " ", 
             SuperscriptBox["\[Lambda]p", "2"]}]], "]"}], " ", 
          RowBox[{"Sinh", "[", 
           FractionBox["xB", "\[Lambda]p"], "]"}]}], 
         RowBox[{"AiryAi", "[", 
          FractionBox["1", 
           RowBox[{
            SuperscriptBox["qs", 
             RowBox[{"2", "/", "3"}]], " ", 
            SuperscriptBox["\[Lambda]p", "2"]}]], "]"}]]}]]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6795962212030363`*^9, 3.679596361045003*^9, 
  3.6796031997648573`*^9, 3.679605691974292*^9, 3.679606350298285*^9, 
  3.6796069529819317`*^9, 3.679609136945949*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solDistCoupled", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"m", "[", "x", "]"}], "\[Rule]", " ", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"m", "[", "x", "]"}], "/.", "solDistCoupled"}], "/.", 
       "lumpedParameters"}], ",", 
      RowBox[{"Assumptions", "\[Rule]", "parameterConstraints"}]}], "]"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.6795963474246483`*^9, 3.679596354048068*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{"m0", " ", 
     RowBox[{"AiryAi", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"qs", " ", 
         RowBox[{"(", 
          RowBox[{"x", "-", "xB"}], ")"}]}], "+", 
        FractionBox["1", 
         SuperscriptBox["\[Lambda]p", "2"]]}], 
       SuperscriptBox["qs", 
        RowBox[{"2", "/", "3"}]]], "]"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"AiryAi", "[", 
       FractionBox["1", 
        RowBox[{
         SuperscriptBox["qs", 
          RowBox[{"2", "/", "3"}]], " ", 
         SuperscriptBox["\[Lambda]p", "2"]}]], "]"}], " ", 
      RowBox[{"Cosh", "[", 
       FractionBox["xB", "\[Lambda]p"], "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["qs", 
       RowBox[{"1", "/", "3"}]], " ", "\[Lambda]p", " ", 
      RowBox[{"AiryAiPrime", "[", 
       FractionBox["1", 
        RowBox[{
         SuperscriptBox["qs", 
          RowBox[{"2", "/", "3"}]], " ", 
         SuperscriptBox["\[Lambda]p", "2"]}]], "]"}], " ", 
      RowBox[{"Sinh", "[", 
       FractionBox["xB", "\[Lambda]p"], "]"}]}]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.67959636243434*^9, 3.679603201356306*^9, 
  3.6796056935137043`*^9, 3.679606351782383*^9, 3.679606954506434*^9, 
  3.67960913823085*^9}]
}, Open  ]],

Cell["The full solution:", "Text",
 CellChangeTimes->{{3.6796030775379763`*^9, 3.679603083689795*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fullsol", " ", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"m", "[", "x", "]"}], "\[Rule]", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m", "[", "x", "]"}], "/.", "solProxCoupled"}], ")"}], 
        RowBox[{"UnitStep", "[", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"x", "-", "xB"}], ")"}]}], "]"}]}], " ", "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m", "[", "x", "]"}], "/.", "solDistCoupled"}], ")"}], 
        RowBox[{"UnitStep", "[", 
         RowBox[{"x", "-", "xB"}], "]"}]}]}]}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", " ", "parameterConstraints"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.631413039465444*^9, 3.6314130439481897`*^9}, {
  3.631413075124384*^9, 3.631413137066647*^9}, {3.63154396757021*^9, 
  3.631543972148044*^9}, {3.63241408718513*^9, 3.632414094395665*^9}, {
  3.660830316745606*^9, 3.660830328147146*^9}, {3.665590953515542*^9, 
  3.665590979098675*^9}, {3.679596476435948*^9, 3.679596482939163*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "\[Rule]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"m0", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"AiryAi", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"qs", " ", 
             RowBox[{"(", 
              RowBox[{"x", "-", "xB"}], ")"}]}], "+", 
            FractionBox["1", 
             SuperscriptBox["\[Lambda]p", "2"]]}], 
           SuperscriptBox["qs", 
            RowBox[{"2", "/", "3"}]]], "]"}], " ", 
         RowBox[{"UnitStep", "[", 
          RowBox[{"x", "-", "xB"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"AiryAi", "[", 
             FractionBox["1", 
              RowBox[{
               SuperscriptBox["qs", 
                RowBox[{"2", "/", "3"}]], " ", 
               SuperscriptBox["\[Lambda]p", "2"]}]], "]"}], " ", 
            RowBox[{"Cosh", "[", 
             FractionBox[
              RowBox[{"x", "-", "xB"}], "\[Lambda]p"], "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["qs", 
             RowBox[{"1", "/", "3"}]], " ", "\[Lambda]p", " ", 
            RowBox[{"AiryAiPrime", "[", 
             FractionBox["1", 
              RowBox[{
               SuperscriptBox["qs", 
                RowBox[{"2", "/", "3"}]], " ", 
               SuperscriptBox["\[Lambda]p", "2"]}]], "]"}], " ", 
            RowBox[{"Sinh", "[", 
             FractionBox[
              RowBox[{"x", "-", "xB"}], "\[Lambda]p"], "]"}]}]}], ")"}], " ", 
         
         RowBox[{"UnitStep", "[", 
          RowBox[{
           RowBox[{"-", "x"}], "+", "xB"}], "]"}]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"AiryAi", "[", 
        FractionBox["1", 
         RowBox[{
          SuperscriptBox["qs", 
           RowBox[{"2", "/", "3"}]], " ", 
          SuperscriptBox["\[Lambda]p", "2"]}]], "]"}], " ", 
       RowBox[{"Cosh", "[", 
        FractionBox["xB", "\[Lambda]p"], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["qs", 
        RowBox[{"1", "/", "3"}]], " ", "\[Lambda]p", " ", 
       RowBox[{"AiryAiPrime", "[", 
        FractionBox["1", 
         RowBox[{
          SuperscriptBox["qs", 
           RowBox[{"2", "/", "3"}]], " ", 
          SuperscriptBox["\[Lambda]p", "2"]}]], "]"}], " ", 
       RowBox[{"Sinh", "[", 
        FractionBox["xB", "\[Lambda]p"], "]"}]}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.66559098289694*^9, 3.6655917283874903`*^9, 
  3.671131890598762*^9, 3.679586742087228*^9, 3.679596495629179*^9, 
  3.67960321324266*^9, 3.679605702760387*^9, 3.6796063623637943`*^9, 
  3.679606967065544*^9, 3.679609146948154*^9}]
}, Open  ]],

Cell["We can put the solution into a more readable form:", "Text",
 CellChangeTimes->{{3.6314146901158943`*^9, 3.6314147036896563`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"m", "[", "x", "]"}], "/.", "fullsol"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.6314147080481787`*^9, 3.6314147155569677`*^9}, {
  3.631543975279833*^9, 3.631543975587648*^9}}],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{"m0", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       TemplateBox[{RowBox[{
           RowBox[{"x", "-", "xB"}]}]},
        "UnitStepSeq"], " ", 
       TemplateBox[{FractionBox[
          RowBox[{
            RowBox[{"qs", " ", 
              RowBox[{"(", 
                RowBox[{"x", "-", "xB"}], ")"}]}], "+", 
            FractionBox["1", 
             SuperscriptBox["\[Lambda]p", "2"]]}], 
          SuperscriptBox["qs", 
           RowBox[{"2", "/", "3"}]]]},
        "AiryAi"]}], "+", 
      RowBox[{
       TemplateBox[{RowBox[{
           RowBox[{"xB", "-", "x"}]}]},
        "UnitStepSeq"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          TemplateBox[{FractionBox["1", 
             RowBox[{
               SuperscriptBox["qs", 
                RowBox[{"2", "/", "3"}]], " ", 
               SuperscriptBox["\[Lambda]p", "2"]}]]},
           "AiryAi"], " ", 
          RowBox[{"cosh", "(", 
           FractionBox[
            RowBox[{"x", "-", "xB"}], "\[Lambda]p"], ")"}]}], "+", 
         RowBox[{"\[Lambda]p", " ", 
          RadicalBox["qs", "3"], " ", 
          TemplateBox[{FractionBox["1", 
             RowBox[{
               SuperscriptBox["qs", 
                RowBox[{"2", "/", "3"}]], " ", 
               SuperscriptBox["\[Lambda]p", "2"]}]]},
           "AiryAiPrime"], " ", 
          RowBox[{"sinh", "(", 
           FractionBox[
            RowBox[{"x", "-", "xB"}], "\[Lambda]p"], ")"}]}]}], ")"}]}]}], 
     ")"}]}], 
   RowBox[{
    RowBox[{
     TemplateBox[{FractionBox["1", 
        RowBox[{
          SuperscriptBox["qs", 
           RowBox[{"2", "/", "3"}]], " ", 
          SuperscriptBox["\[Lambda]p", "2"]}]]},
      "AiryAi"], " ", 
     RowBox[{"cosh", "(", 
      FractionBox["xB", "\[Lambda]p"], ")"}]}], "-", 
    RowBox[{"\[Lambda]p", " ", 
     RadicalBox["qs", "3"], " ", 
     TemplateBox[{FractionBox["1", 
        RowBox[{
          SuperscriptBox["qs", 
           RowBox[{"2", "/", "3"}]], " ", 
          SuperscriptBox["\[Lambda]p", "2"]}]]},
      "AiryAiPrime"], " ", 
     RowBox[{"sinh", "(", 
      FractionBox["xB", "\[Lambda]p"], ")"}]}]}]], TraditionalForm]], "Output",\

 CellChangeTimes->{3.665591002922481*^9, 3.665591728502438*^9, 
  3.671131890906413*^9, 3.679586742442533*^9, 3.679596504162553*^9, 
  3.679603213504424*^9, 3.679605702876998*^9, 3.679606362863557*^9, 
  3.6796069673972282`*^9, 3.679609147305951*^9}]
}, Open  ]],

Cell["Plot the solution for a certain set of parameter values:", "Text",
 CellChangeTimes->{{3.631413187283764*^9, 3.631413202873645*^9}, {
  3.631413506847341*^9, 3.631413568911563*^9}, {3.660831945084776*^9, 
  3.660831946315607*^9}, {3.6796030659006767`*^9, 3.6796030668742447`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"parameters", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]p", "\[Rule]", "20"}], ",", 
     RowBox[{"qs", "\[Rule]", "1"}], ",", 
     RowBox[{"xB", "\[Rule]", "40"}], ",", 
     RowBox[{"m0", "\[Rule]", "1"}]}], "}"}]}], ";", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"m0", " ", 
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "/", "\[Lambda]p"}], ")"}]}]}], "/.", 
       "parameters"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"m", "[", "x", "]"}], "/.", "fullsol"}], "/.", 
       "parameters"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "100"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.63141324300981*^9, 3.6314132786269493`*^9}, {
  3.631413369662136*^9, 3.6314134986773357`*^9}, {3.631543982488124*^9, 
  3.631543990963126*^9}, {3.660830358561482*^9, 3.66083036846355*^9}, {
  3.660831957019074*^9, 3.66083197421345*^9}, {3.660832817903174*^9, 
  3.6608328792341137`*^9}, {3.6711068397200336`*^9, 3.671106840030552*^9}, {
  3.679596552341002*^9, 3.679596596946364*^9}, {3.679596713175973*^9, 
  3.679596773083045*^9}, {3.679606367169187*^9, 3.679606367391971*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVjXk0FHgcwA1lO7AlVzremOpRO69oESrfr2h0kHH/hmwyMXKEoaaaY73J
xlSD2o4nMTSk9FqkJCGm0+uYmtWKVbpQwjiaBpls+8fnff74/PGxiUoKiNbX
09Pz/cH/puXo5IWLm91phWtapqbU4J1SNjMxVgZnTaO3ckfV4P+WnmMXWwG2
x2h1n3rUEJKn9jeMvQ2ZO08G9z5RA9Ewf9VwlBBVm7ht0Tk1sOSUkn5OF3Qe
x3yuqxrCJljbP3LUsDqlPeo6bxA6lh126eFMQUC82UJH/QEo5VO+G0TMQc8i
V8YFsz4wrpZVlPlZYYaes8S1oBfOMSb1HYypGDJXCg4J3VAYJX5v4b0Uv75y
mh7IeA/ri3t3tbjYIcl/nqrHewsPsy/kT/udjvwayuVmdhd0xOw8UUrsMYvh
tjDFsxNkljtsK3xXo5BSyhksaocO2UxLXYIj3pg/5z7bqA3YN5eEOsQ646OV
bdLurlYo4CdgPMsF3Sal0qBhFfiaR2V8SnPD6uA/wsONnsNWfGC1LWEdal19
1GG9T+H2hvaftFJ3DPyd53fqwSMY+Wr0TBWA6NnqVWczvQXo5tFeBT4eWCcW
bb5SdR9sZPN6JOEb0DWSneERdxcahscrdhNP9B4TZlaKFGBW6VwWH+eFSkYY
3aqwCe4oZqUm8zYinVtGOfi5AawLLTixXAZqtlS5r6HeAnr3/iyx2BslJy0t
dexa6P5iqspJ34Q8wtlrZVEDX4nXkOzAZhy7VxT2eeY1UNg9XqvK3IJNVMFT
0xlXwan5aIX20FacrDiQZxFaCex7xUw45YM9bMkd6x1XoG+R331JsS++T5s9
5xu3HKzAcdeD/G345qK5MGmyDCiPk1bZXvZD54zl81pPlMLD3JS564OYaGOS
Ny44Iof67n0azjMmcsKWD+rXF0N2su3QklB/rDu7gvqiXwbVXaOi9lZ/NDTQ
/B00dA5qMuKXUiMCcPl2LxZt2lkwNpmKiOwMQCprWdsr6RnI9XhNobECcaW7
BfdDxCkYKo+tT3sTiIFU42tU1z+hZMxkdvNvQRhcEljfGHccnASRyYW9QWh4
qUFi75sDo5d0oEsMxiTHlEj5ymMwrb5GHvw5GFkJTxuLpBIYNViwGFJDcP26
yaPnJw6Dk30+nTYSgq1m6n17lRkgN+SUHt4TiuYj/760eCcGtelrR4EmFKMb
VPNZ39MhxyCFxKcSdGAPZ+95IgIv/YHygr0ED2qayKfbIhjT261T8gjKvzyf
G3dVBJHfI887Cn50ta+38IwIVo8z+3UZBA3rp/P6dorgn0H79NzTBF/EDJS9
0gphccdQ2fWbBO9khYnM7YSgepkw0XuL4C7uKrfNC4SQ2fbRx7qRILPN8qTY
RAhDrW+GRQqCfh7eVoYaASiUz9ZuekSwnxW2iKkQQMy9SmVHJ8Hk8AvagQgB
WN+l04y7CNbIVyQd9BeAUnExDd4SdJIrI4w2CsClqWh+STfBbuaH00gXwKxb
uezEQYLr9P2c+ib40HjTqEY2RLDW7SPt/CAfUmuzZqhGfvzE2Wk73vGh83r6
FWctwbWMY259LXzIvTY5FTtOMCr8l/IbDXzYWL0/IP8bwUPVMWlHqvgwUfWl
5ImOYHvVh9NRpXz4qzJZOzVF8G6zz8+Yx4f/AFEDRgs=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 100}, {1.35761567766982*^-137, 0.9999998979591889}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.631413260565483*^9, 3.631413346042658*^9}, 
   3.631413419986884*^9, {3.631413452776965*^9, 3.631413499444503*^9}, 
   3.631545034000929*^9, {3.6608303514827423`*^9, 3.660830389506144*^9}, 
   3.6608320115135937`*^9, 3.6608321206196213`*^9, 3.6608321870723677`*^9, {
   3.6608328509829273`*^9, 3.660832879945549*^9}, 3.6608329345129538`*^9, {
   3.662212522259613*^9, 3.6622125471231413`*^9}, 3.665591031978421*^9, 
   3.665591728681858*^9, 3.671131891706531*^9, 3.6795867425810337`*^9, {
   3.679596584381077*^9, 3.679596598224115*^9}, {3.6795967333743963`*^9, 
   3.679596773964859*^9}, 3.6796032153021097`*^9, 3.67960570301346*^9, 
   3.6796063692214212`*^9, 3.6796069677960463`*^9, 3.679609148575077*^9}]
}, Open  ]],

Cell["\<\
As a sanity check, the solution should match the exponential as qm -> 0. Note \
the effect of qm depends on the value of \[Lambda]p.\
\>", "Text",
 CellChangeTimes->{{3.631413572312313*^9, 3.631413594701845*^9}, {
  3.660832976544895*^9, 3.660832980064014*^9}, {3.67960302741329*^9, 
  3.67960306199437*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"parameters", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]p", "\[Rule]", "0.5"}], ",", 
     RowBox[{"qs", "\[Rule]", "0.1"}], ",", 
     RowBox[{"xB", "\[Rule]", "1"}], ",", 
     RowBox[{"m0", "\[Rule]", "1"}]}], "}"}]}], ";", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"m0", " ", 
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "/", "\[Lambda]p"}], ")"}]}]}], "/.", 
       "parameters"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"m", "[", "x", "]"}], "/.", "fullsol"}], "/.", 
       "parameters"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.63141324300981*^9, 3.6314132786269493`*^9}, {
  3.631413369662136*^9, 3.6314134986773357`*^9}, {3.631543982488124*^9, 
  3.631543990963126*^9}, {3.660830358561482*^9, 3.66083036846355*^9}, {
  3.660831957019074*^9, 3.66083197421345*^9}, {3.660832817903174*^9, 
  3.6608328792341137`*^9}, {3.6711068397200336`*^9, 3.671106840030552*^9}, {
  3.679596552341002*^9, 3.679596675784296*^9}, {3.679609199472826*^9, 
  3.679609199681223*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVj3k41HkAhydthxzJE5pYLYl1lVy7SB9aR5JtG2eXRGpsSj2y27S1LeHJ
1TIzWjRaGaNVuXKu5Mg42pJrxpV1RXLkhxwl5rvtH+/z/vc+z6vhG8Twl6LR
aC6f+d/7/N+2VI367778q4GIEAojOR6+fXQ7xK43zpido6AsI75ZQHdDabTF
7YlxCtstNgpS6Sfxzu/Q4nAHBctmkzw2/SLotF0nJLkUqm7XmMXRwzHlETMn
9KFwPTTmUjSdCxXV48x04SROXqToUfQMDAS9m2UmvsNartPdqelCrI/oSL+g
P46SZmNHR/VK3Fd9pSO9aRRe13u6a2KE6DeW3n/FfARB+cGGSbPP4NxqYNvl
NoyZ+PaGFSuaYGlFhaQXv0ZDdV1l065WlHzb9nwrfRABLCe5QxMilF1kO+pm
9KNa2pg8PNsBmoVP2uO6XmTyhZLN27rxPu1Z3zX7HtgoP0l3zelBrUiTrFfv
hmF9T2mdXh+Clh1kHfU6IbJxncya7Md4uV6BgXk7AtedaRUbDaKZYRuncEOE
552eT+RvvsY/Nk0yYd2tcHXwGhgaGgIzjEV98GiBeVqMZ5rWG8SVlt8USDej
X8IRMa+NwPG0gaDoUiOGnZr4yjVvoc2iwoOtniMvuY/VojGG9ve+lBdpgODG
yijdy+PYk/U178inOsz5HR479XgCHiPfDCSgFjJ2kYx8lUl8snlK0wmvwRWF
YdmBoxTMiXVm++qnkK3Qp3W4TIHj5q/hmF0F658OLNcsTuH2gHyi0b0K8DJi
+Vt50zgRoqOa7FYOb3fTRmnnGZww9WikpMpQJPbnVMzPINH9cAZzvAQWL/Kk
3tx6j0S/Pu1G9WJ8ZX9qjmM3ixgT9wJvRiHMTM0SCt/Mwv6xmlxA3SP0zcQ9
40fM4eeALv3w4/mYMDkYQTeeB0+zgZs1lQvtccOxFW3zuNA16dAWmQ2hVkjr
+dAFdPE1jLK/fIDfRWI/htYHVIzpdn9clwXKtSpBSvgBDjUMFWW9e3jkrvSd
xYWP+Fu7g6nrJAC/8XrqoOIiogWn3eIf8LFQf/QXxaeLGJmiuZfJp6M/oXJO
4dwn2DBS54+kpGG+xYoeJr+EpOmpru2Fd3Ceq1nFKl9C9ReynoqmPKg0aioM
eS9jzcnUohS5FLiKHy6pSZaxM6q/v2RzEmaO3w3suS+Bqp9dQoLOLVT65EbI
7yew9tprtPcyF2VNgc693xMEh2XIqARzUbxbb0POQQLfyLtn357h4qGagOfi
SbBPaqaafYyLlM6UglhfAudIXc4qWy5CfogcWMciiG7vUfRby4W+zTHrNZkE
TFbtuYUkDrRzN6/s+IugWMM0UInNgaZ6Z0PmAwLFF5dEZjEcbFpiuDnkE/yp
tGXw6lUOVpfuPRNRTjCZY9Ct58vBwA7T5JVtBKzknN8W9DnouTPt3SYmOMDf
U2e1jYNOuVwtfidBS61lQJg6By/HdfP29BLs3LZKqLyBg/J7W+pDRwmcDrQV
HZlno1T539iDE59/N3o2PaLYKIhIYWhQBNma6ZAdZeO+n1Jv1SzBaxN7jbpX
bAhaW/nxCwSWVz7Ga4vZSLOND/BZJFBLMnSLeskGL89lh9Hy576vwo+T9Wz8
sUVmjhACiaS5xb2ajf8AM8dz9A==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVzX081AcAx/G7aj1Qlh5wRR6mUl7KQlE7X9VNEptnZYYpUqx4jZrllVee
xij87iIcXTsPJfKQsE1czlOrc8jl6PKQx7g5bp4S91v74/N6//nR9b3s5LeC
QqHYf+p/bf3G2nnv/SzvvDHsJEkZRh+5+fbRGBgI6bo+MyuDmrLo1mOaCzIm
YxykEzLss9iSl007B1rZ1LnhLhkOt5mUErRQxDpePLhcIgMvi292kxYDD8uB
u/U+MkTfSPz5NxoLbhltNdkNkzgXKqMl0HLR7vAhy/v2P1jLOnlvaroCwQbR
al6GE6hqO3DixI46BEV1zkyov8fpaEkPP7EB5xNWhbkeHMXlsp+M7sw8x+4q
k9ICl2HIU163UKlC1B8VpfhXDqLlWVOd8KsOeN8ds5FovMOF8JMbzkg7oVG0
2CPi9uPZugNk0Y9dQK5t5HJjL/K5DYptO3sQejzBqIAhgZXa09+dH0lgsi5H
XUurB0bNkuqmvX14Ehi6YL5HjE4r58kHk/2gr1ptS5q+RpBSYIfI+B0M6PMf
+HGdeCF2f6pyaxAlDZzvVLs74Gx9emBoaAhZmluMfV3bcZCT6M7RH0G113ne
2Jo29CuYnQGRo+D0hrsMhgowfFLIVeOPwYMnVLc59AKlGX3h7brj6NKxPd+4
2IK8+JUJe36ZgLViPurMXBNmz3qM+/8lhWSoMlzncCOUGXFOZeqTSNNyNjO5
zkfExuH1A54yxCU93OdNqcf6WkNKl/0UPubQmYx8HuhXvl3mL05BssO8UJpe
C3ZuEvcL9jR0Bd2DOxk18HI1Faw7JUeKTHPzoek/8ETkx6ydk+Pwxfr918RV
sHhZumIk7V9ssAopaVWqhM7X/rNMxgziT2v9bUevgJmpWWrFyAxskrNtgkrL
0Se/+ZwbOwt/tRZplU0ZpCaOsbQDc6C0jQXEPCvBrgmjceqrOTSZe9687FaM
Bv2wjuAb8+j/PI5jIC1EcqforJP+Aj6rG1dmi+9D5sxLXdGwAHp50anN8/ko
d9163CLkA3arNEcUbM0DVxCd/W7TIla9pB5rusrFfLPntU31izBA5Mf2nnvo
T62b3XjpIzKPdTtE+3Mw136EFqWyhKDW9bYjdjkIZunxwmuWsDxreORXQRbU
BXobh7yWMa7jKKDez4CzqGhJU7EMDaGFNqMyHXLve0GSQgX6H+zax2q4jTqf
klgVOxIs6tUrXRos/CkMOtX7DQkVwwp2sSoLlZZ7VR85klDUVNnFKbFQpJnH
tncn4UmLtMYSE5nizMdJviTeHN0eL+xjIswhbkApnIT+W3lEQAEThlbf09fk
k7BTzV57xZyJXSXbVnbdJ9GRZl+e9SUTejvELfkPSbD1+M/5e5nQWHJysS4j
YXo91XK7FhOrq20CY2tIXAzu3j1KZWJgv2nGylckdIupR+QvCEhypr1eiUgU
pys8LBsJiDeU6HPFJOq6Td4k1RJondhTeqyXhDoxuWBcRqCmQLv5xnsS7t4n
iNtpBKrV3iY5Skk0JRawZ5IJPI7NdNKVkeBQ0ihuCQQKz27t5c18+qG1XTuC
QF5HBzdlnsQQNYQeH0aAczTlgs8iiWaFMym/RIBdar/feJnE6sBcNZ8AAuna
yrMkSSK2MTlK+AOB/wBA73oi
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 2}, {0.01795124277481854, 0.9999999183673502}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.679596619746369*^9, 3.679596676923155*^9}, 
   3.679603215612114*^9, 3.67960570315134*^9, 3.679606967839147*^9, 
   3.6796091490780067`*^9, 3.67960920053668*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{785, 624},
WindowMargins->{{Automatic, 117}, {Automatic, 14}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 180, 6, 92, "Title"],
Cell[763, 30, 102, 1, 30, "Text"],
Cell[868, 33, 240, 4, 62, "Input"],
Cell[CellGroupData[{
Cell[1133, 41, 232, 3, 64, "Section"],
Cell[1368, 46, 1003, 26, 53, "Text"],
Cell[2374, 74, 192, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[2591, 80, 461, 10, 28, "Input"],
Cell[3055, 92, 450, 10, 30, "Output"]
}, Open  ]],
Cell[3520, 105, 314, 7, 49, "Text"],
Cell[CellGroupData[{
Cell[3859, 116, 473, 12, 28, "Input"],
Cell[4335, 130, 517, 13, 30, "Output"]
}, Open  ]],
Cell[4867, 146, 155, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[5047, 153, 192, 4, 28, "Input"],
Cell[5242, 159, 667, 17, 30, "Output"]
}, Open  ]],
Cell[5924, 179, 117, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[6066, 184, 352, 10, 28, "Input"],
Cell[6421, 196, 443, 10, 28, "Output"]
}, Open  ]],
Cell[6879, 209, 341, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[7245, 219, 512, 14, 28, "Input"],
Cell[7760, 235, 2735, 56, 237, "Output"]
}, Open  ]],
Cell[10510, 294, 244, 5, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10791, 304, 121, 1, 64, "Section"],
Cell[10915, 307, 269, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[11209, 316, 504, 12, 28, "Input"],
Cell[11716, 330, 665, 16, 30, "Output"]
}, Open  ]],
Cell[12396, 349, 272, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[12693, 358, 575, 14, 28, "Input"],
Cell[13271, 374, 683, 16, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13991, 395, 182, 4, 28, "Input"],
Cell[14176, 401, 949, 24, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15162, 430, 410, 10, 28, "Input"],
Cell[15575, 442, 1026, 26, 66, "Output"]
}, Open  ]],
Cell[16616, 471, 251, 8, 34, "Text"],
Cell[CellGroupData[{
Cell[16892, 483, 574, 16, 28, "Input"],
Cell[17469, 501, 694, 15, 46, "Output"]
}, Open  ]],
Cell[18178, 519, 397, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[18600, 528, 251, 6, 28, "Input"],
Cell[18854, 536, 218, 6, 28, "Output"]
}, Open  ]],
Cell[19087, 545, 381, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[19493, 554, 768, 18, 83, "Input"],
Cell[20264, 574, 348, 8, 46, "Output"]
}, Open  ]],
Cell[20627, 585, 523, 9, 49, "Text"],
Cell[CellGroupData[{
Cell[21175, 598, 262, 6, 28, "Input"],
Cell[21440, 606, 225, 6, 46, "Output"]
}, Open  ]],
Cell[21680, 615, 647, 18, 72, "Text"],
Cell[CellGroupData[{
Cell[22352, 637, 259, 6, 28, "Input"],
Cell[22614, 645, 93, 1, 28, "Output"]
}, Open  ]],
Cell[22722, 649, 216, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[22963, 657, 516, 12, 28, "Input"],
Cell[23482, 671, 369, 10, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23888, 686, 444, 12, 28, "Input"],
Cell[24335, 700, 415, 11, 46, "Output"]
}, Open  ]],
Cell[24765, 714, 369, 7, 49, "Text"],
Cell[CellGroupData[{
Cell[25159, 725, 493, 10, 28, "Input"],
Cell[25655, 737, 425, 9, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26117, 751, 625, 19, 28, "Input"],
Cell[26745, 772, 14227, 247, 229, 4372, 84, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[40987, 1022, 451, 10, 49, "Text"],
Cell[CellGroupData[{
Cell[41463, 1036, 543, 15, 28, "Input"],
Cell[42009, 1053, 534, 12, 43, "Output"]
}, Open  ]],
Cell[42558, 1068, 444, 7, 49, "Text"],
Cell[CellGroupData[{
Cell[43027, 1079, 289, 7, 28, "Input"],
Cell[43319, 1088, 121, 2, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43489, 1096, 172, 2, 64, "Section"],
Cell[43664, 1100, 798, 12, 87, "Text"],
Cell[CellGroupData[{
Cell[44487, 1116, 531, 13, 28, "Input"],
Cell[45021, 1131, 722, 16, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45780, 1152, 481, 12, 28, "Input"],
Cell[46264, 1166, 721, 16, 30, "Output"]
}, Open  ]],
Cell[47000, 1185, 176, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[47201, 1193, 586, 14, 28, "Input"],
Cell[47790, 1209, 777, 17, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48604, 1231, 419, 10, 28, "Input"],
Cell[49026, 1243, 614, 12, 28, "Output"]
}, Open  ]],
Cell[49655, 1258, 394, 13, 40, "Text"],
Cell[CellGroupData[{
Cell[50074, 1275, 582, 13, 28, "Input"],
Cell[50659, 1290, 705, 15, 51, "Output"]
}, Open  ]],
Cell[51379, 1308, 115, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[51519, 1313, 928, 19, 46, "Input"],
Cell[52450, 1334, 625, 15, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53112, 1354, 342, 8, 28, "Input"],
Cell[53457, 1364, 459, 11, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53953, 1380, 293, 7, 28, "Input"],
Cell[54249, 1389, 384, 10, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54670, 1404, 298, 6, 28, "Input"],
Cell[54971, 1412, 1011, 24, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56019, 1441, 294, 6, 28, "Input"],
Cell[56316, 1449, 912, 21, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57265, 1475, 554, 13, 63, "Input"],
Cell[57822, 1490, 1115, 25, 49, "Output"]
}, Open  ]],
Cell[58952, 1518, 422, 9, 68, "Text"],
Cell[CellGroupData[{
Cell[59399, 1531, 615, 14, 63, "Input"],
Cell[60017, 1547, 830, 18, 47, "Output"]
}, Open  ]],
Cell[60862, 1568, 278, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[61165, 1577, 511, 13, 46, "Input"],
Cell[61679, 1592, 394, 11, 45, "Output"]
}, Open  ]],
Cell[62088, 1606, 607, 10, 49, "Text"],
Cell[CellGroupData[{
Cell[62720, 1620, 1296, 31, 63, "Input"],
Cell[64019, 1653, 975, 21, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65031, 1679, 370, 9, 63, "Input"],
Cell[65404, 1690, 487, 12, 73, "Output"]
}, Open  ]],
Cell[65906, 1705, 203, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[66134, 1712, 729, 18, 46, "Input"],
Cell[66866, 1732, 1210, 28, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68113, 1765, 669, 17, 46, "Input"],
Cell[68785, 1784, 872, 21, 76, "Output"]
}, Open  ]],
Cell[69672, 1808, 1214, 24, 95, "Text"],
Cell[CellGroupData[{
Cell[70911, 1836, 467, 12, 28, "Input"],
Cell[71381, 1850, 627, 14, 73, "Output"]
}, Open  ]],
Cell[72023, 1867, 153, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[72201, 1874, 689, 15, 46, "Input"],
Cell[72893, 1891, 765, 18, 73, "Output"]
}, Open  ]],
Cell[73673, 1912, 388, 7, 49, "Text"],
Cell[CellGroupData[{
Cell[74086, 1923, 705, 14, 28, "Input"],
Cell[74794, 1939, 783, 21, 66, "Output"]
}, Open  ]],
Cell[75592, 1963, 1183, 25, 100, "Text"],
Cell[CellGroupData[{
Cell[76800, 1992, 438, 9, 28, "Input"],
Cell[77241, 2003, 224, 4, 28, "Output"]
}, Open  ]],
Cell[77480, 2010, 265, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[77770, 2019, 669, 16, 63, "Input"],
Cell[78442, 2037, 655, 16, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79134, 2058, 668, 16, 63, "Input"],
Cell[79805, 2076, 746, 20, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80588, 2101, 267, 6, 28, "Input"],
Cell[80858, 2109, 496, 12, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81391, 2126, 593, 16, 46, "Input"],
Cell[81987, 2144, 1021, 26, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83045, 2175, 640, 17, 46, "Input"],
Cell[83688, 2194, 540, 13, 45, "Output"]
}, Open  ]],
Cell[84243, 2210, 529, 9, 49, "Text"],
Cell[CellGroupData[{
Cell[84797, 2223, 1088, 28, 80, "Input"],
Cell[85888, 2253, 1200, 34, 123, "Output"]
}, Open  ]],
Cell[87103, 2290, 136, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[87264, 2295, 245, 6, 28, "Input"],
Cell[87512, 2303, 1108, 33, 72, "Output"]
}, Open  ]],
Cell[88635, 2339, 236, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[88896, 2346, 622, 12, 28, "Input"],
Cell[89521, 2360, 663, 12, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90221, 2377, 1039, 27, 63, "Input"],
Cell[91263, 2406, 10308, 179, 237, "Output"]
}, Open  ]],
Cell[101586, 2588, 231, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[101842, 2597, 674, 13, 28, "Input"],
Cell[102519, 2612, 691, 13, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103247, 2630, 1036, 27, 63, "Input"],
Cell[104286, 2659, 4731, 89, 241, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[109066, 2754, 107, 1, 64, "Section"],
Cell[109176, 2757, 1080, 16, 106, "Text"],
Cell[CellGroupData[{
Cell[110281, 2777, 45, 0, 28, "Input"],
Cell[110329, 2779, 470, 13, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110836, 2797, 394, 8, 63, "Input"],
Cell[111233, 2807, 523, 14, 49, "Output"]
}, Open  ]],
Cell[111771, 2824, 188, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[111984, 2830, 496, 12, 63, "Input"],
Cell[112483, 2844, 2279, 62, 168, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114799, 2911, 330, 9, 28, "Input"],
Cell[115132, 2922, 941, 27, 46, "Output"]
}, Open  ]],
Cell[116088, 2952, 229, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[116342, 2960, 452, 13, 28, "Input"],
Cell[116797, 2975, 628, 17, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117462, 2997, 392, 11, 28, "Input"],
Cell[117857, 3010, 259, 7, 47, "Output"]
}, Open  ]],
Cell[118131, 3020, 306, 6, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118474, 3031, 165, 2, 64, "Section"],
Cell[118642, 3035, 921, 14, 125, "Text"],
Cell[CellGroupData[{
Cell[119588, 3053, 573, 13, 28, "Input"],
Cell[120164, 3068, 977, 20, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121178, 3093, 839, 20, 28, "Input"],
Cell[122020, 3115, 1226, 26, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123283, 3146, 455, 10, 28, "Input"],
Cell[123741, 3158, 935, 17, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124713, 3180, 425, 11, 28, "Input"],
Cell[125141, 3193, 870, 16, 28, "Output"]
}, Open  ]],
Cell[126026, 3212, 511, 12, 40, "Text"],
Cell[CellGroupData[{
Cell[126562, 3228, 777, 15, 28, "Input"],
Cell[127342, 3245, 876, 16, 51, "Output"]
}, Open  ]],
Cell[128233, 3264, 588, 9, 49, "Text"],
Cell[CellGroupData[{
Cell[128846, 3277, 1117, 22, 28, "Input"],
Cell[129966, 3301, 1090, 22, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131093, 3328, 511, 10, 28, "Input"],
Cell[131607, 3340, 983, 18, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132627, 3363, 488, 10, 28, "Input"],
Cell[133118, 3375, 754, 19, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133909, 3399, 418, 10, 28, "Input"],
Cell[134330, 3411, 1199, 27, 52, "Output"]
}, Open  ]],
Cell[135544, 3441, 855, 22, 41, "Text"],
Cell[CellGroupData[{
Cell[136424, 3467, 534, 12, 52, "Input"],
Cell[136961, 3481, 836, 17, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137834, 3503, 836, 20, 63, "Input"],
Cell[138673, 3525, 838, 17, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139548, 3547, 347, 8, 46, "Input"],
Cell[139898, 3557, 1192, 27, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141127, 3589, 128, 3, 28, "Input"],
Cell[141258, 3594, 1042, 22, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142337, 3621, 196, 4, 28, "Input"],
Cell[142536, 3627, 1424, 34, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143997, 3666, 583, 13, 63, "Input"],
Cell[144583, 3681, 1096, 25, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145716, 3711, 536, 13, 63, "Input"],
Cell[146255, 3726, 4689, 127, 173, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150981, 3858, 456, 12, 46, "Input"],
Cell[151440, 3872, 1127, 32, 75, "Output"]
}, Open  ]],
Cell[152582, 3907, 191, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[152798, 3915, 703, 22, 46, "Input"],
Cell[153504, 3939, 1551, 42, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155092, 3986, 406, 10, 46, "Input"],
Cell[155501, 3998, 1225, 30, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156763, 4033, 395, 9, 28, "Input"],
Cell[157161, 4044, 1611, 42, 120, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158809, 4091, 349, 8, 28, "Input"],
Cell[159161, 4101, 1378, 37, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160576, 4143, 529, 14, 63, "Input"],
Cell[161108, 4159, 1442, 40, 118, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162587, 4204, 478, 13, 63, "Input"],
Cell[163068, 4219, 1321, 39, 87, "Output"]
}, Open  ]],
Cell[164404, 4261, 102, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[164531, 4266, 1148, 28, 80, "Input"],
Cell[165682, 4296, 2755, 77, 206, "Output"]
}, Open  ]],
Cell[168452, 4376, 136, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[168613, 4381, 245, 6, 28, "Input"],
Cell[168861, 4389, 2475, 72, 107, "Output"]
}, Open  ]],
Cell[171351, 4464, 286, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[171662, 4471, 1340, 33, 63, "Input"],
Cell[173005, 4506, 12502, 214, 236, "Output"]
}, Open  ]],
Cell[185522, 4723, 318, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[185865, 4733, 1294, 33, 63, "Input"],
Cell[187162, 4768, 4533, 86, 241, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
